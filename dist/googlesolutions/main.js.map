{"version":3,"sources":["./src/app/models/blockCommands/blocks/terminal/EndElseIf.ts","./src/app/models/game/units/Unit.ts","./src/app/models/blockCommands/blocks/executable/South.ts","./src/app/components/info/info.component.ts","./src/app/components/info/info.component.html","./src/app/models/blockCommands/blocks/predicate/FalsePredicate.ts","./src/app/components/docs/docs.component.ts","./src/app/components/docs/docs.component.html","./src/app/models/blockCommands/blocks/conditional/ElseIf.ts","./src/app/components/error/error.component.ts","./src/app/components/error/error.component.html","./src/app/services/program-construction/code.service.ts","./src/app/models/game/units/Tower.ts","./src/environments/environment.ts","./src/app/dataStructures/Stack.ts","./src/app/models/blockCommands/blocks/executable/TestAction2.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/services/game/levelDataInterface/level-data-interface.service.ts","./src/app/models/blockCommands/blocks/predicate/EastAvailable.ts","./src/app/services/game/sprite.service.ts","./src/app/models/blockCommands/blocks/terminal/Start.ts","./src/app/components/level/level.component.ts","./src/app/components/level/level.component.html","./src/app/models/blockCommands/blocks/predicate/CompoundPredicate.ts","./src/app/models/game/GameAction.ts","./src/app/components/levelplay/levelplay.component.ts","./src/app/components/levelplay/levelplay.component.html","./src/app/components/pageheader/pageheader.component.ts","./src/app/components/pageheader/pageheader.component.html","./src/app/services/program-construction/block.service.ts","./src/app/models/blockCommands/blocks/predicate/EnemyNear.ts","./src/app/components/block-code/block-code.component.ts","./src/app/components/block-code/block-code.component.html","./src/app/models/blockCommands/actual-code/RealCodeRepr.ts","./src/app/services/login/authy-login.service.ts","./src/app/models/game/units/UnitReadOnly.ts","./src/app/components/code-editor-guide/code-editor-guide.component.ts","./src/app/components/code-editor-guide/code-editor-guide.component.html","./src/app/models/blockCommands/blocks/predicate/NorthAvailable.ts","./src/app/models/blockCommands/blocks/conditional/Else.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/signin-page/signin-page.component.ts","./src/app/components/signin-page/signin-page.component.html","./src/app/components/set-name/set-name.component.ts","./src/app/components/set-name/set-name.component.html","./src/app/components/levelselect/levelselect.component.ts","./src/app/components/levelselect/levelselect.component.html","./src/app/services/SpriteConstants.ts","./src/app/models/blockCommands/blocks/executable/West.ts","./src/app/app.module.ts","./src/app/models/game/units/Archer.ts","./src/app/components/test/test.component.ts","./src/app/components/test/test.component.html","./src/app/models/blockCommands/blocks/terminal/Endif.ts","./src/app/components/profilepages/profilepages.component.ts","./src/app/components/profilepages/profilepages.component.html","./src/app/models/blockCommands/blocks/predicate/EmptyPredicate.ts","./src/app/models/blockCommands/blocks/executable/Attack.ts","./src/app/models/blockCommands/blocks/executable/TestAction1.ts","./src/app/models/blockCommands/blocks/predicate/SouthAvailable.ts","./src/app/models/game/units/Swordsman.ts","./src/app/services/database/firestore-database.service.ts","./src/app/models/blockCommands/blocks/executable/East.ts","./src/app/models/database/DatabaseData.ts","./src/app/models/blockCommands/blocks/predicate/WestAvailable.ts","./src/app/models/blockCommands/blocks/executable/Wait.ts","./src/app/models/blockCommands/blocks/executable/North.ts","./src/app/models/blockCommands/blocks/conditional/If.ts","./src/app/services/game/gameloop/game-loop.service.ts","./src/app/services/game/grid-parser.service.ts","./src/app/models/blockCommands/blocks/terminal/End.ts","./src/app/models/blockCommands/blocks/predicate/HealthBelow30Percent.ts","./src/app/models/blockCommands/blocks/terminal/EndElse.ts","./src/app/app-routing.module.ts","./src/app/models/blockCommands/blocks/predicate/TruePredicate.ts","./src/app/components/prog-select-dialog/prog-select-dialog.component.ts","./src/app/components/prog-select-dialog/prog-select-dialog.component.html","./src/app/components/javascript-guide/javascript-guide.component.ts","./src/app/components/javascript-guide/javascript-guide.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,sEAC3wB;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,sEAC3wB;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,yDAE/L;QAA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C;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,sEAC3wB;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,sEAC3wB;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,sEAC3wB;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,sEAC3wB;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,sEAC3wB;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,sEAC3wB;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,sEAC3wB;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,sEAC3wB;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,sEAC3wB;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,8DAAC;QAAA,6EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,uEAC3wB;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,uEAC3wB;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,uEAC3wB;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,uEAC3wB;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,uEAC3wB;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,uEAC3wB;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,uEAC3wB;QAAA,8EAA2B;QAAA,kEAAI;QAAA,4DAAO;QAAA,+DAAC;QAAA,8EAA2B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","file":"main.js","sourcesContent":["import { TerminalBlock } from '../../block-command';\r\n\r\n/**\r\n * TerminalBlock representing the end of an ElseIf Block\r\n * See block-command.ts for specific documentation \r\n * on properties and methods\r\n */\r\nexport class EndElseIf implements TerminalBlock {\r\n\r\n  static label: string = 'End Else If'\r\n  static id: string = btoa(EndElseIf.name);\r\n  terminate: number = null;\r\n  indentationLevel: number;\r\n\r\n  getId(): string {\r\n    return EndElseIf.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return EndElseIf.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return '}';\r\n  }\r\n\r\n}\r\n","import { CodeType } from \"../../database/DatabaseData\";\r\nimport * as createjs from 'createjs-module';\r\nimport {SpriteConstants} from '../../../services/SpriteConstants';\r\n\r\n/**\r\n * Object that represents a Unit on the grid\r\n */\r\nclass AnimationConstants{\r\n\r\n  static walk: string = 'walk';\r\n  static idle: string = 'idle';\r\n  static attack: string = 'attack';\r\n\r\n}\r\n\r\nexport class Unit {\r\n\r\n  /**\r\n   * The Id number on the grid of the unit\r\n   */\r\n  static dbid: string;\r\n\r\n  /**\r\n   * The Id number on the grid of the unit\r\n   */\r\n  id: number = -1;\r\n\r\n  /**\r\n   * The team that the unit belongs to\r\n   */\r\n  team: number = -1;\r\n\r\n  /**\r\n   * the location of the unit on the grid\r\n   */\r\n  location: { x: number, y: number } = { x: 0, y: 0 };\r\n\r\n  /**\r\n   * The code the that unit can run\r\n   */\r\n  codeType: CodeType = CodeType.NONE;\r\n  /**\r\n   * The url of the code file (if any) that the unit uses\r\n   */\r\n  fileUrl: string;\r\n  activecode: any = [];\r\n  maxHealth: number = 100;\r\n  health: number = 100;\r\n  defense: number = 10;\r\n  strength: number = 20;\r\n  attackRange: number = 1;\r\n  sprite: createjs.Sprite;\r\n  walk_frames: Array<number>;\r\n  attack_frames: Array<number>;\r\n  testCodeIndex: number;\r\n\r\n  constructor() {}\r\n\r\n  initSprite(imageData){\r\n\r\n    let data = {\r\n      'images': [imageData],\r\n      'frames': {width:SpriteConstants.spriteSize,\r\n        height:SpriteConstants.spriteSize, regX: 20, regY:20, spacing:0, margin:0},\r\n      'animations': {\r\n        'idle':[0],\r\n        'walk':[this.walk_frames[0], this.walk_frames[1], 'idle'],\r\n        'attack': [this.attack_frames[0], this.attack_frames[1], 'idle']\r\n      }\r\n    };\r\n    let spriteSheet = new createjs.SpriteSheet(data);\r\n    this.sprite = new createjs.Sprite(spriteSheet, 'idle');\r\n\r\n  }\r\n\r\n  doIdleAnimation(){\r\n\r\n    this.sprite.gotoAndPlay(AnimationConstants.idle);\r\n\r\n  }\r\n\r\n  doAttackAnimation(){\r\n\r\n    this.sprite.gotoAndPlay(AnimationConstants.attack);\r\n\r\n  }\r\n\r\n  doWalkAnimation(){\r\n\r\n    this.sprite.gotoAndPlay(AnimationConstants.walk);\r\n\r\n  }\r\n\r\n}\r\n","import { GameAction } from 'src/app/models/game/GameAction';\r\nimport { Executable } from '../../block-command';\r\nimport {GridParserService} from '../../../../services/game/grid-parser.service';\r\nimport {Wait} from './Wait';\r\n\r\n/**\r\n * Executable representing a right movement\r\n * See block-command.ts for specific documentation\r\n * on properties and methods\r\n */\r\nexport class South implements Executable {\r\n\r\n  static label: string = 'Go south';\r\n  static id: string = btoa(South.name);\r\n  static asCode = 'this.postMessage({result: \\'South\\'});';\r\n  indentationLevel: number;\r\n\r\n  constructor() {}\r\n\r\n  execute(grid, unit): GameAction {\r\n    let newLocation = {x:unit.location.x, y:unit.location.y + 1}\r\n    if (GridParserService.isInBounds(newLocation, grid) && !GridParserService.isUnitOccupied(newLocation, grid)){\r\n\r\n      grid[unit.location.x][unit.location.y] = null;\r\n      unit.location = newLocation;\r\n      unit.doWalkAnimation();\r\n      return new GameAction(South.name, unit, null, false);\r\n\r\n    }else{\r\n\r\n      return new GameAction(Wait.name, unit, null, false);\r\n\r\n    }\r\n  }\r\n\r\n  getId(): string {\r\n    return South.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return South.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return South.asCode;\r\n  }\r\n\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-info',\r\n  templateUrl: './info.component.html',\r\n  styleUrls: ['./info.component.css']\r\n})\r\nexport class InfoComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<InfoComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: string) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>{{data}}</p>\r\n","import { Predicate } from '../../block-command';\r\n\r\n/**\r\n * Predicate representing the False condition\r\n * This condition is always false\r\n * See block-command.ts for specific documentation\r\n * on properties and methods\r\n */\r\nexport class FalsePredicate implements Predicate {\r\n\r\n  static id: string = btoa(FalsePredicate.name);\r\n  static label: string = 'false';\r\n  static asCode = 'false';\r\n  indentationLevel: number;\r\n  negate: boolean = false;\r\n  conjunction: string = '';\r\n\r\n  evaluation(grid, unit): boolean {\r\n    return false;\r\n  }\r\n\r\n  getId(): string {\r\n    return FalsePredicate.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return FalsePredicate.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return FalsePredicate.asCode;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ViewportScroller} from '@angular/common';\r\nimport {Router} from '@angular/router';\r\nimport {AuthyLoginService} from '../../services/login/authy-login.service';\r\n\r\n@Component({\r\n  selector: 'app-docs',\r\n  templateUrl: './docs.component.html',\r\n  styleUrls: ['./docs.component.css']\r\n})\r\nexport class DocsComponent implements OnInit {\r\n\r\n  constructor(private viewPortScroller: ViewportScroller, private router: Router, private auth: AuthyLoginService) { }\r\n\r\n  ngOnInit(): void {\r\n    if(!this.auth.checkSigninStatus()){\r\n      this.router.navigate(['']);\r\n    }\r\n  }\r\n\r\n  scrollToSection(sectionName){\r\n\r\n    this.viewPortScroller.scrollToAnchor(sectionName);\r\n\r\n  }\r\n\r\n  goToJavascriptGuide(){\r\n    this.router.navigate(['learn-js']);\r\n    window.scroll(0, 0);\r\n  }\r\n\r\n}\r\n","<header id=\"main-header\">\r\n  <h1 id=\"title\">Documentation</h1>\r\n</header>\r\n\r\n<div id=\"main-content\">\r\n  <div id=\"book-marks\">\r\n\r\n    <a (click)=\"scrollToSection('receiving-and-sending-messages')\"><h3>Receiving And Sending messages</h3></a>\r\n    <a (click)=\"scrollToSection('reading-message-data')\"><h3>Reading Message Data</h3></a>\r\n    <a (click)=\"scrollToSection('sending-back-a-response')\"><h3>Sending Back A Response</h3></a>\r\n    <a (click)=\"scrollToSection('conclusion')\"><h3>Conclusion</h3></a>\r\n\r\n  </div>\r\n  <div id=\"docs-content\">\r\n    <h1 id=\"getting-started-with-coding-a-scripting-siege-unit\">Getting Started With Coding a Scripting Siege Unit</h1>\r\n    <p>This guide will teach you how to get started writing real code to use for your scripting siege units. By the end of this guide, you will be able to learn and practice Javascript by just playing a video game! Although if you don't know the basics of Javascript, first have a look at our <a class=\"link\" (click)=\"goToJavascriptGuide()\">free guide.</a></p>\r\n    <h2 id=\"how-this-works\">How this works</h2>\r\n    <p>Every turn, the game will send a message with specific data about everything on the grid and the unit whose turn started. This data is in the form of a JSON payload. All it is is some text representing the data in a specific format, specifically in the form of a Javascript object. For you to read this data, (or at least in a non-infuriating way) you need to first convert it to a real Javascript object and not a text representation of it. Fortunately, it’s as easy as a single line of code:</p>\r\n    <pre><code class=\"lang-javascript\"><span class=\"hljs-title\">let</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span> = <span class=\"hljs-type\">JSON</span>.parse('<span class=\"hljs-type\">JSON</span> <span class=\"hljs-title\">goes</span> <span class=\"hljs-title\">here'</span>);</span>\r\n</code></pre>\r\n    <p>With this data, you can analyze it to make the best decision possible for your unit. Once you’ve figured out what you want to do, you will send a message back to the unit telling it what you want them to do. But, if the game does not recognize what move your code is telling it to perform, then your unit will just wait around confused about what you told them. The same is true if you tell it to perform an action that is not possible like attacking when nothing is in range. As well, you need to make sure you are sending one message at a time. If you try to cheat the system and send multiple messages for one turn the game will only accept the first one. Also, if your code takes too long to return an action then your unit will just wait. In the heat of the battle, your unit can&#39;t wait for you forever! As a last note for the more knowledgeable or curious among you, the code you will be writing is for the game to create a <a class=\"link\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#web_workers_api\">Web Worker</a>. Although you don’t have to necessarily understand Web Workers to write your own code for this game.</p>\r\n    <a id=\"receiving-and-sending-messages\" class=\"page-ref\"><h2>Receiving and Sending messages</h2></a>\r\n    <p>In your code, you need to provide a function (a collection of related code) to perform whenever you receive a message. Within the function, you would post a message back to the server using the <code>postMessage</code> function with text representing the action. For example, you use a code file that looks something like this:</p>\r\n    <pre><code class=\"lang-javascript\"><span class=\"hljs-keyword\">this</span>.onmessage = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(turnEvent)</span></span>{{'{'}}\r\n\r\n      <span class=\"hljs-keyword\">this</span>.postMessage({{'{'}}result: <span class=\"hljs-string\">'East'</span>});\r\n\r\n}\r\n</code></pre>\r\n    <p>Here, whenever we get a message indicating it’s our unit’s turn, we just tell it to go forward.</p>\r\n    <a id=\"reading-message-data\" class=\"page-ref\"><h2>Reading Message Data</h2></a>\r\n    <p>In the code example above, you will notice in our function there is something called <code>turnEvent</code> in brackets. This indicates that our function will take the game data as an object called <code>turnEvent</code>. Within the <code>turnEvent</code> object is the data the game gives you about the state of the game. Recall that the data sent is in the form of JSON and we need to first convert it to a Javascript object to more easily read it. We would so like this:</p>\r\n    <pre><code class=\"lang-javascript\">\r\n<span class=\"hljs-title\">let</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span> = <span class=\"hljs-type\">JSON</span>.parse(<span class=\"hljs-title\">turnEvent</span>.<span class=\"hljs-title\">data</span>);</span>\r\n</code></pre>\r\n    <p>For you to understand the data you will receive, let&#39;s have a look at the format of the data so we can discuss its significance:</p>\r\n    <pre><code class=\"lang-json\">{{'{'}}<span class=\"hljs-attr\">\"grid\"</span>: [\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,\r\n      {{'{'}}\r\n        <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">0</span>,\r\n        <span class=\"hljs-attr\">\"team\"</span>: <span class=\"hljs-number\">2</span>,\r\n        <span class=\"hljs-attr\">\"location\"</span>:\r\n          {{'{'}}\r\n            <span class=\"hljs-attr\">\"x\"</span>: <span class=\"hljs-number\">2</span>,\r\n            <span class=\"hljs-attr\">\"y\"</span>: <span class=\"hljs-number\">5</span>\r\n           },\r\n        <span class=\"hljs-attr\">\"maxHealth\"</span>: <span class=\"hljs-number\">100</span>,\r\n        <span class=\"hljs-attr\">\"health\"</span>: <span class=\"hljs-number\">100</span>,\r\n        <span class=\"hljs-attr\">\"defense\"</span>: <span class=\"hljs-number\">10</span>,\r\n        <span class=\"hljs-attr\">\"strength\"</span>: <span class=\"hljs-number\">15</span>,\r\n        <span class=\"hljs-attr\">\"attackRange\"</span>: <span class=\"hljs-number\">4</span>\r\n      },\r\n      <span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,\r\n      {{'{'}}\r\n        <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\r\n        <span class=\"hljs-attr\">\"team\"</span>: <span class=\"hljs-number\">1</span>,\r\n        <span class=\"hljs-attr\">\"location\"</span>:\r\n          {{'{'}}\r\n            <span class=\"hljs-attr\">\"x\"</span>: <span class=\"hljs-number\">12</span>,\r\n            <span class=\"hljs-attr\">\"y\"</span>: <span class=\"hljs-number\">5</span>\r\n          },\r\n        <span class=\"hljs-attr\">\"maxHealth\"</span>: <span class=\"hljs-number\">100</span>,\r\n        <span class=\"hljs-attr\">\"health\"</span>: <span class=\"hljs-number\">100</span>,<span class=\"hljs-attr\">\"defense\"</span>: <span class=\"hljs-number\">10</span>,\r\n        <span class=\"hljs-attr\">\"strength\"</span>: <span class=\"hljs-number\">15</span>,<span class=\"hljs-attr\">\"attackRange\"</span>: <span class=\"hljs-number\">4</span>\r\n      },\r\n      <span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>],\r\n    [<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>]\r\n  ],\r\n  <span class=\"hljs-attr\">\"unit\"</span>: {{'{'}}\r\n      <span class=\"hljs-attr\">\"id\"</span>: <span class=\"hljs-number\">1</span>,\r\n    <span class=\"hljs-attr\">\"team\"</span>: <span class=\"hljs-number\">1</span>,\r\n    <span class=\"hljs-attr\">\"location\"</span>: {{'{'}}\r\n      <span class=\"hljs-attr\">\"y\"</span>: <span class=\"hljs-number\">5</span>,\r\n  <span class=\"hljs-attr\">\"x\"</span>: <span class=\"hljs-number\">12</span>\r\n    },\r\n    <span class=\"hljs-attr\">\"maxHealth\"</span>: <span class=\"hljs-number\">100</span>,\r\n    <span class=\"hljs-attr\">\"health\"</span>: <span class=\"hljs-number\">100</span>,\r\n    <span class=\"hljs-attr\">\"defense\"</span>: <span class=\"hljs-number\">10</span>,\r\n    <span class=\"hljs-attr\">\"strength\"</span>: <span class=\"hljs-number\">15</span>,\r\n    <span class=\"hljs-attr\">\"attackRange\"</span>: <span class=\"hljs-number\">4</span>\r\n  }\r\n}\r\n</code></pre>\r\n    <blockquote>\r\n      <p>Note we indented it this way just for the sake of clarity. In reality, the JSON data will be in one line. Also, it would all be wrapped in quotation marks.</p>\r\n    </blockquote>\r\n    <p>This might look like quite a bit to unpack for some of you but we’ll do our best to explain what this data format represents. Everything in the curly braces (these: <code>{{'{'}}}</code>) represents a Javascript object. An object is just a collection of related data each with a name to refer to each of them by. Data within an object can be anything from text, a true or false value, an array (a list of data), or even other objects. You will notice in these objects, we have some text in quotation marks followed by a colon and some data. The text in the quotes is the name of the data right of the colon. When we convert the JSON data to a real object, we will use those names to access the data. For instance, we have some data in the object called <code>grid</code>, and another called <code>unit</code>. The data called <code>grid</code> is a list containing inner lists, representing what unit, if any, is on each tile. If you haven&#39;t noticed <code>grid</code> is 20 by 20 (20 inner lists each with 20 items) just like the 20 by 20 in-game grid. Each item in the inner lists represents a tile, more specifically what unit is on that tile. If there isn’t a unit on a tile, then there is a value of <code>null</code>, otherwise, you get an object representing that unit.  Each inner list represents a column in the game while the items in those inner lists represent what unit is on a tile on that column. You will notice in the above example, only the third list contains objects. In that third list, there are two objects representing units. This would mean on the third column, there are two units, while all the null values in the inner lists mean the other tiles on the grid have no units on them. Within these unit objects, you will see that you are given the exact location on the grid that these units are on. Note that the x and y values range from 0-19, representing 20 rows and 20 columns. Since the numbering starts from 0, the third column will be column number 2, the first column will be number 0, etc (programming languages tend to number stuff starting at 0). Lastly, the <code>unit</code> data in the outer object (the object that contains the grid data), is just a representation of the unit you are controlling. Now that you have an idea of what data the game sends, we can go over how to use it. The below code takes the <code>unit</code> data and stores it in a variable called <em>you</em>.</p>\r\n    <pre><code class=\"lang-javascript\"><span class=\"hljs-title\">let</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span> = <span class=\"hljs-type\">JSON</span>.parse(<span class=\"hljs-title\">turnEvent</span>.<span class=\"hljs-title\">data</span>);</span>\r\n<span class=\"hljs-title\">let</span> you = <span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span>.unit;</span>\r\n</code></pre>\r\n    <p>Then, to get the health of the unit stored as <em>you</em> you would simply do this:</p>\r\n    <pre><code class=\"lang-javascript\"><span class=\"hljs-attribute\">let health</span> = you.health;\r\n</code></pre>\r\n    <p>To get the x value of the location of the unit you would do the following:</p>\r\n    <pre><code class=\"lang-javascript\"><span class=\"hljs-attribute\">let xLocation</span> = you.location.x;\r\n</code></pre>\r\n    <p>To get a specific unit in the grid is a bit more involved than what we just did, but we will go into more detail about it. Here&#39;s how you&#39;d get the unit on the third column of the sixth row:</p>\r\n    <pre><code class=\"lang-javascript\"><span class=\"hljs-built_in\">let</span> data = JSON.parse(turnEvent.data);\r\n<span class=\"hljs-built_in\">let</span> <span class=\"hljs-built_in\">grid</span> = data.<span class=\"hljs-built_in\">grid</span>;\r\n// Get the <span class=\"hljs-built_in\">third</span> column of the <span class=\"hljs-built_in\">grid</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-built_in\">get</span> the <span class=\"hljs-built_in\">first</span> unit found <span class=\"hljs-keyword\">in</span> that column (located on x: <span class=\"hljs-number\">2</span>, y: <span class=\"hljs-number\">5</span>).\r\n// Remember we count stuff starting <span class=\"hljs-built_in\">at</span> <span class=\"hljs-number\">0</span>, so the <span class=\"hljs-built_in\">third</span> column will be number <span class=\"hljs-number\">2</span>, <span class=\"hljs-keyword\">and</span>\r\n// the <span class=\"hljs-built_in\">sixth</span> <span class=\"hljs-built_in\">row</span> will be number <span class=\"hljs-number\">5</span>\r\n<span class=\"hljs-built_in\">let</span> person = <span class=\"hljs-built_in\">grid</span>[<span class=\"hljs-number\">2</span>][<span class=\"hljs-number\">5</span>];\r\n</code></pre>\r\n    <p>First, we get the grid data within the data object. This grid data is a list of lists (as seen in the JSON data above), which we store as a variable called grid. Then we get the third item of the list (another list) and get the sixth item of that inner list. This would be a single unit object as seen in the JSON data above. We would then store it in a variable called person so we can do operations like what you&#39;ve seen above. The tables below are a summary of all that exists in the data we send you:</p>\r\n    <h3>The Data Sent From Each Turn</h3>\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th>Data</th>\r\n        <th>Definition</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr>\r\n        <td>grid</td>\r\n        <td>A 20 by 20 list of lists (20 inner lists, each with 20 items) representing the 20 by 20 in-game grid. Each inner list represents an in-game column where each item represents what unit (if any) is on each tile of that column. If there is no unit on a tile, then that tile has a null value.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>unit</td>\r\n        <td>A unit object representing the stats of the unit you are controlling (ex. health, defense, attack range, etc).</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n    <h3>The Contents of all Unit objects</h3>\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th>Data</th>\r\n        <th>Definition</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr>\r\n        <td>id</td>\r\n        <td>An id for the unit (number).</td>\r\n      </tr>\r\n      <tr>\r\n        <td>team</td>\r\n        <td>The team the unit is on (number).</td>\r\n      </tr>\r\n      <tr>\r\n        <td>location</td>\r\n        <td>An object containing the x (number) and y (number) values of the location of the unit.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>maxHealth</td>\r\n        <td>The maximum health of the unit (number).</td>\r\n      </tr>\r\n      <tr>\r\n        <td>health</td>\r\n        <td>Current health of the unit (number).</td>\r\n      </tr>\r\n      <tr>\r\n        <td>defense</td>\r\n        <td>The defense of the unit (A number. How much damage it can take in a single attack before it loses some health).</td>\r\n      </tr>\r\n      <tr>\r\n        <td>strength</td>\r\n        <td>The strength of the unit (A number. How much damage it can deal in a single attack).</td>\r\n      </tr>\r\n      <tr>\r\n        <td>attackRange</td>\r\n        <td>How many tiles in any direction a unit can attack (number).</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n    <a class=\"page-ref\" id=\"sending-back-a-response\"><h2>Sending Back A Response</h2></a>\r\n    <p>Once you’ve decided what you want your unit to do, you have to post a message back to it to tell it about it. You would do this by simply calling the <code>postMessage</code> function like so:</p>\r\n    <pre><code class=\"lang-javascript\"><span class=\"hljs-selector-tag\">this</span><span class=\"hljs-selector-class\">.postMessage</span>({{'{'}}<span class=\"hljs-attribute\">result</span>: <span class=\"hljs-string\">'Your action here'</span>});\r\n</code></pre>\r\n    <p>Remember that the game only accepts a set of recognized actions that you can send back to it. The following lists all the commands that can be sent back to the game. You would simply replace the <code>Your action here</code> in the code above with the name of the action in the quotes:</p>\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th>Action</th>\r\n        <th>Definition</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr>\r\n        <td>Attack</td>\r\n        <td>Attack the first enemy unit in range if any. Otherwise, just wait.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Wait</td>\r\n        <td>End the turn without acting.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>West</td>\r\n        <td>Walk one tile West. If the tile is occupied by another unit or the area is out of bounds wait.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>East</td>\r\n        <td>Walk one tile East. If the tile is occupied by another unit or the area is out of bounds wait.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>North</td>\r\n        <td>Walk one tile North. If the tile is occupied by another unit or the area is out of bounds wait.</td>\r\n      </tr>\r\n      <tr>\r\n        <td>South</td>\r\n        <td>Walk one tile South. If the tile is occupied by another unit or the area is out of bounds wait.</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n    <a id=\"conclusion\" class=\"page-ref\"><h2>Conclusion</h2></a>\r\n    <p>In this guide, we went over all you need to know to start coding the behavior of your scripting siege units. With this knowledge, you will be able to write more complex custom behavior to your units to perform better in the game and learn to code in the process. You can find some example code to get you started <a class=\"link\" href=\"https://github.com/john-amiscaray/Scripting-Siege-API-Docs-With-A-Usable-Example\">here</a>. Good luck and have fun!</p>\r\n  </div>\r\n</div>\r\n","import {ConditionalBlock, Predicate, TerminalBlock} from '../../block-command';\r\nimport { EmptyPredicate } from '../predicate/EmptyPredicate';\r\nimport { EndElseIf } from '../terminal/EndElseIf';\r\nimport { Else } from './Else';\r\nimport {If} from './If';\r\n\r\n/**\r\n * ConditionalBlock representing an Else-If statement\r\n * See block-command.ts for specific documentation\r\n * on properties and methods\r\n */\r\nexport class ElseIf implements ConditionalBlock, TerminalBlock {\r\n\r\n  static id: string = btoa(ElseIf.name);\r\n  static label: string = 'Else if';\r\n\r\n  conditions: Array<Predicate> = [new EmptyPredicate()];\r\n  terminal_blocks: Array<string> = [ElseIf.label, EndElseIf.label, Else.label];\r\n  indentationLevel: number;\r\n  terminate: number = null;\r\n  condition: Predicate = new EmptyPredicate();\r\n\r\n  getId(): string {\r\n    return ElseIf.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return ElseIf.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n\r\n    return '}else ' + If.asCode(this.conditions);\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.css']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<ErrorComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: string) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h3>{{data}}</h3>\r\n","import {Injectable} from '@angular/core';\r\nimport {BlockCommand, ConditionalBlock, Executable, Predicate} from 'src/app/models/blockCommands/block-command';\r\nimport {Else} from 'src/app/models/blockCommands/blocks/conditional/Else';\r\nimport {ElseIf} from 'src/app/models/blockCommands/blocks/conditional/ElseIf';\r\nimport {If} from 'src/app/models/blockCommands/blocks/conditional/If';\r\nimport {EmptyPredicate} from 'src/app/models/blockCommands/blocks/predicate/EmptyPredicate';\r\nimport {End} from 'src/app/models/blockCommands/blocks/terminal/End';\r\nimport {Start} from 'src/app/models/blockCommands/blocks/terminal/Start';\r\nimport {GameAction} from 'src/app/models/game/GameAction';\r\nimport {BlockService} from './block.service';\r\nimport {CompoundPredicate} from '../../models/blockCommands/blocks/predicate/CompoundPredicate';\r\nimport {EndElseIf} from '../../models/blockCommands/blocks/terminal/EndElseIf';\r\nimport {EndElse} from '../../models/blockCommands/blocks/terminal/EndElse';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * Service for compiling and validating code\r\n */\r\nexport class CodeService {\r\n\r\n  constructor(private blockService: BlockService) { }\r\n\r\n  /**\r\n   * Compiles and validates code into function array\r\n   * @param commands The Array of commands to compile\r\n   */\r\n  compileToExecutableCode(commands: Array<BlockCommand>) {\r\n\r\n    let actions: Array<Function> = [];\r\n    let executable_count = 0;\r\n\r\n    for (let i = 0; i < commands.length; i++) {\r\n\r\n      if (this.blockService.isExecutable(commands[i])) {\r\n\r\n        actions.push((<Executable>commands[i]).execute);\r\n        executable_count += 1;\r\n\r\n      } else if (commands[i].getLabel() === If.label) {\r\n\r\n        let condition = this.createConditionalFunction(i, commands, executable_count);\r\n        i = condition[0];\r\n        actions.push(condition[1]);\r\n\r\n      } else if (commands[i].getLabel() === ElseIf.label) {\r\n\r\n        throw new Error(CodeErrorFormatters.ELSE_IF_WITHOUT_IF(i + 1));\r\n\r\n      } else if (this.blockService.isTerminal(commands[i])) {\r\n\r\n        if (!(commands[i].getLabel() === Start.label || commands[i].getLabel() === End.label)) {\r\n          if(commands[i].getLabel() === Else.label){\r\n\r\n            throw new Error(CodeErrorFormatters.ELSE_WITHOUT_IF(i + 1));\r\n\r\n          }else{\r\n            throw new Error(CodeErrorFormatters.ADDED_TERMINAL_WITHOUT_SEQUENCE(i + 1));\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      if(executable_count > 1){\r\n        throw new Error(CodeErrorFormatters.ONLY_ONE_ACTION());\r\n      }\r\n\r\n    }\r\n    return actions;\r\n  }\r\n\r\n  /**\r\n   * Serializes Code to string array for storage\r\n   * @param commands Code to Serialize\r\n   */\r\n  serializeBlocks(commands: Array<BlockCommand>): Array<string> {\r\n    let repr: Array<string> = [];\r\n\r\n    for (let command of commands) {\r\n      if (!this.blockService.isConditional(command)) {\r\n        repr.push(String(command.getId()));\r\n      } else {\r\n        if((command as ConditionalBlock).condition.getId() !== CompoundPredicate.id){\r\n          repr.push(String(command.getId() + '_'\r\n            + command.condition.getId()));\r\n        }else{\r\n          let conditional = (command as ConditionalBlock);\r\n          let serialized = command.getId() + '_' + (conditional.conditions[0].negate ? '!' : '') + conditional.conditions[0].getId();\r\n          for(let i = 1; i < conditional.conditions.length; i++){\r\n            let condition = conditional.conditions[i];\r\n            serialized += (condition.conjunction + (condition.negate ? '!' : '') + condition.getId());\r\n          }\r\n          repr.push(serialized);\r\n        }\r\n      }\r\n\r\n    }\r\n    return repr;\r\n  }\r\n\r\n  /**\r\n   * Deserializes code into a Block Command Array\r\n   * @param repr Code string array to deserialize\r\n   */\r\n  deserializeToBlocks(repr: Array<string>): Array<BlockCommand> {\r\n    let commands: Array<BlockCommand> = [];\r\n    console.log('HELLO');\r\n    for (let rep of repr) {\r\n\r\n      if (rep.includes('_')) {\r\n        debugger;\r\n        let ids = rep.split('_');\r\n        let conditional: ConditionalBlock = <ConditionalBlock>this.blockService.getById(ids[0]);\r\n        // Make the list empty because it starts off with an empty predicate\r\n        conditional.conditions = [];\r\n        if(ids[1].includes('&') || ids[1].includes('|')){\r\n\r\n          let start = -1;\r\n          let complexCondition = ids[1];\r\n          let nextCondition = 0;\r\n          while(nextCondition !== -1){\r\n\r\n            let nextAnd = complexCondition.indexOf('&', start + 1);\r\n            let nextOr = complexCondition.indexOf('|', start + 1);\r\n            if(nextOr !== -1){\r\n              if(nextAnd < nextOr && nextAnd !== -1){\r\n                nextCondition = nextAnd;\r\n              }else{\r\n                nextCondition = nextOr;\r\n              }\r\n            }else if(nextAnd !== -1){\r\n              nextCondition = nextAnd;\r\n            }else{\r\n              nextCondition = -1;\r\n            }\r\n\r\n            let conjunction = start !== -1 ? complexCondition[start] : '';\r\n            let id = complexCondition.slice(start + 1, nextCondition !== -1 ? nextCondition: complexCondition.length);\r\n            let negate = false;\r\n            start = nextCondition;\r\n            if(id.charAt(0) === '!'){\r\n              negate = true;\r\n              id = id.slice(1, id.length);\r\n            }\r\n            let condition = this.blockService.getById(id);\r\n            (condition as Predicate).negate = negate;\r\n            (condition as Predicate).conjunction = conjunction;\r\n            conditional.conditions.push(condition as Predicate);\r\n\r\n          }\r\n\r\n          commands.push(conditional);\r\n\r\n        }else{\r\n          conditional.conditions.push(<Predicate>this.blockService.getById(ids[1]));\r\n          commands.push(conditional);\r\n        }\r\n        if(conditional.getId() !== Else.id){\r\n          this.compileConditions(conditional, 0);\r\n        }\r\n\r\n      } else {\r\n        commands.push(this.blockService.getById(rep));\r\n      }\r\n\r\n    }\r\n    return commands;\r\n  }\r\n\r\n  /**\r\n   * Creates ConditionalBlock object\r\n   * @param i location of conditional block in code\r\n   * @param commands code to place\r\n   * @param executable_count the amount of executables seen in the global scope of the code\r\n   */\r\n  createConditionalFunction(i, commands: Array<BlockCommand>, executable_count) {\r\n\r\n    this.compileConditions(<ConditionalBlock>commands[i], i);\r\n    let condition = (<ConditionalBlock>commands[i]).condition;\r\n    let global_executables = executable_count;\r\n    let local_executables = 0;\r\n    let start = i;\r\n    let foundElse = false;\r\n    // if(condition.getLabel() === EmptyPredicate.label){\r\n    //   throw new Error('An if block is missing a condition');\r\n    // }\r\n\r\n    let terminal_blocks = (<ConditionalBlock>commands[i]).terminal_blocks;\r\n    let elseIfs = [];\r\n    let elseActions = [];\r\n    i++;\r\n\r\n    // holds the actions to be executed if the evaluation method returns true\r\n    let conditional_actions: Array<(grid, unit) => GameAction> = [];\r\n\r\n    while (!terminal_blocks.includes(commands[i].getLabel())) {\r\n\r\n      if (commands[i].getLabel() === End.label) {\r\n        throw new Error(CodeErrorFormatters.CONDITIONAL_NOT_CLOSED(start + 1));\r\n      }\r\n\r\n      if (commands[i].getLabel() === If.label) {\r\n\r\n        let inner_condition = this.createConditionalFunction(i, commands, local_executables + global_executables);\r\n        i = inner_condition[0];\r\n        conditional_actions.push(inner_condition[1]);\r\n        i++;\r\n\r\n      } else if (commands[i].getLabel() === ElseIf.label) {\r\n        this.compileConditions((<ConditionalBlock>commands[i]), i);\r\n        let next = this.parseElseIfOrElse(i, commands, global_executables);\r\n        elseIfs.push([next[1], next[2]]);\r\n        i = next[0];\r\n\r\n      } else if (commands[i].getLabel() === Else.label) {\r\n\r\n        let next = this.parseElseIfOrElse(i, commands, global_executables);\r\n        elseActions = next[2];\r\n        i = next[0];\r\n        foundElse = true;\r\n\r\n      } else {\r\n\r\n        conditional_actions.push((<Executable>commands[i]).execute);\r\n        i++;\r\n        local_executables++;\r\n\r\n      }\r\n      if(global_executables + local_executables > 1){\r\n\r\n        throw new Error(CodeErrorFormatters.ONLY_ONE_ACTION());\r\n\r\n      }\r\n    }\r\n    if(elseIfs.length === 0 && commands[i].getLabel() === EndElseIf.label){\r\n      throw new Error(CodeErrorFormatters.CONDITIONAL_NOT_CLOSED(i + 1));\r\n    }else if(!foundElse && commands[i].getLabel() === EndElse.label){\r\n      throw new Error(CodeErrorFormatters.CONDITIONAL_NOT_CLOSED(i + 1));\r\n    }\r\n    /*\r\n    Append to the actions array a new function that will execute all the functions in the conditional_actions array\r\n    if the given evaluation function returns true. Otherwise it will look through the else ifs to see if any of\r\n    those conditions are matching, otherwise it goes to the else.\r\n     */\r\n    return [i, (grid, unit) => {\r\n      if (condition.evaluation(grid, unit)) {\r\n\r\n\r\n        return conditional_actions[0](grid, unit);\r\n\r\n\r\n      } else {\r\n\r\n        let i = 0;\r\n        while (i < elseIfs.length) {\r\n          if (elseIfs[i][0].evaluation(grid, unit)) {\r\n\r\n            return elseIfs[i][1][0](grid, unit);\r\n\r\n          }\r\n          i++;\r\n        }\r\n\r\n        if (i === elseIfs.length && elseActions.length !== 0) {\r\n          return elseActions[0](grid, unit);\r\n        }\r\n\r\n      }\r\n    }];\r\n  }\r\n\r\n  /**\r\n   * Parses ElseIf or Else statement into a conditional and its actions\r\n   * @param i the index location of of the statement\r\n   * @param commands the code to compare against\r\n   * @param executable_count the amount of executable blocks seen in the global scope of the code\r\n   */\r\n  parseElseIfOrElse(i, commands: Array<BlockCommand>, executable_count) {\r\n    let condition = null;\r\n    let global_executables = executable_count;\r\n    let local_executables = 0;\r\n    let start = i;\r\n\r\n    if (commands[i].getLabel() === ElseIf.label) {\r\n      condition = (<ConditionalBlock>commands[i]).condition;\r\n    }\r\n\r\n    let conditional_actions: Array<(grid, unit) => GameAction> = [];\r\n    let terminal_blocks = (<ConditionalBlock>commands[i]).terminal_blocks;\r\n    i++;\r\n    while (!(terminal_blocks.includes(commands[i].getLabel()))) {\r\n\r\n      if (commands[i].getLabel() === End.label) {\r\n        throw new Error(CodeErrorFormatters.CONDITIONAL_NOT_CLOSED(start + 1));\r\n      }\r\n\r\n      if (commands[i].getLabel() === If.label) {\r\n        let inner = this.createConditionalFunction(i, commands, local_executables + global_executables);\r\n        i = inner[0];\r\n        conditional_actions.push(inner[1])\r\n      } else {\r\n        conditional_actions.push((<Executable>commands[i]).execute);\r\n        i++;\r\n        local_executables++;\r\n      }\r\n\r\n    }\r\n\r\n    if(local_executables + global_executables > 1){\r\n\r\n      throw new Error(CodeErrorFormatters.ONLY_ONE_ACTION());\r\n\r\n    }\r\n\r\n    return [i, condition, conditional_actions];\r\n  }\r\n\r\n  compileConditions(conditional: ConditionalBlock, blockIndex){\r\n\r\n    for(let i = 0; i < conditional.conditions.length; i++){\r\n      let condition = conditional.conditions[i];\r\n      if(condition.getLabel() === EmptyPredicate.label){\r\n        throw new Error(CodeErrorFormatters.MISSING_CONDITIONS(blockIndex + 1));\r\n      }\r\n    }\r\n\r\n    conditional.condition = this.convertToSingleCondition(conditional.conditions,0, blockIndex);\r\n\r\n  }\r\n\r\n  /**\r\n   * Converts the conditions of a complex conditional statement into a single predicate.\r\n   * @param conditions The predicates used for a complex conditional statement\r\n   * @param index The index to start iterating from\r\n   */\r\n  convertToSingleCondition(conditions: Array<Predicate>, index:number=0, blockLocation): Predicate{\r\n    //debugger;\r\n    if(conditions.length === 1){\r\n      return conditions[0];\r\n    }\r\n    let evaluations = [conditions[index]];\r\n    let i = index + 1;\r\n    while(i < conditions.length && conditions[i].conjunction === '&'){\r\n\r\n      evaluations.push(conditions[i]);\r\n      i++;\r\n\r\n    }\r\n    console.log(evaluations);\r\n    let condition = (grid, unit) => {\r\n\r\n      for(let evaluation of evaluations){\r\n\r\n        if(evaluation.negate){\r\n          if(evaluation.evaluation(grid, unit)){\r\n            return false;\r\n          }\r\n        }else{\r\n          if(!evaluation.evaluation(grid, unit)){\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n\r\n    };\r\n    if(i < conditions.length){\r\n\r\n      if(conditions[i].conjunction !== '|'){\r\n\r\n        throw new Error(CodeErrorFormatters.NO_CONJUNCTION_SPECIFIED(blockLocation + 1));\r\n\r\n      }else{\r\n\r\n        // If I don't do this there will be infinite recursion because it will think I'm trying to make a recursive call inside\r\n        let cond = condition;\r\n\r\n        condition = (grid, unit) => {\r\n          return cond(grid, unit) || this.convertToSingleCondition(conditions, i, blockLocation).evaluation(grid, unit);\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    let result = new CompoundPredicate();\r\n    result.evaluation = condition;\r\n\r\n    return result;\r\n\r\n  }\r\n\r\n}\r\n\r\nclass CodeErrorFormatters{\r\n\r\n  static ELSE_WITHOUT_IF = function(index){\r\n\r\n    return `Else without If at block ${index}`;\r\n\r\n  }\r\n\r\n  static MISSING_CONDITIONS = function(index){\r\n\r\n    return `Conditional Block is missing a condition at block ${index}`;\r\n\r\n  }\r\n\r\n  static ONLY_ONE_ACTION = function(){\r\n\r\n    return 'Only one action allowed per turn';\r\n\r\n  }\r\n\r\n  static CONDITIONAL_NOT_CLOSED = function(index){\r\n\r\n    return `Conditional not closed properly for block ${index}`;\r\n\r\n  }\r\n\r\n  static ELSE_IF_WITHOUT_IF = function(index){\r\n\r\n    return `Else if without if at block ${index}`;\r\n\r\n  }\r\n\r\n  static ADDED_TERMINAL_WITHOUT_SEQUENCE = function(index){\r\n\r\n    return `Added terminal block without sequence to terminate at block ${index}`;\r\n\r\n  }\r\n\r\n  static SOMETHING_WENT_WRONG = function(){\r\n\r\n    return 'Something probably went wrong on our end! Please send a bug report.';\r\n\r\n  }\r\n\r\n  static NO_CONJUNCTION_SPECIFIED = function(index){\r\n    return `AND or OR not specified for a conditional block at block ${index}`;\r\n  }\r\n\r\n}\r\n","import {Unit} from './Unit';\r\n\r\nexport class Tower extends Unit{\r\n\r\n  static dbid: string = btoa(Tower.name);\r\n  id = -1\r\n  maxHealth: number = 100;\r\n  health: number = 80;\r\n  defense: number = 30;\r\n  strength: number = 15;\r\n  attackRange: number = 5;\r\n  walk_frames: Array<number> = [0, 1];\r\n  attack_frames: Array<number> = [2, 5];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\r\n/**\r\n * Object for the Stack Data structure type\r\n * This uses Generic typing\r\n */\r\nexport class Stack<T> {\r\n\r\n    /**\r\n     * The array representing the data stored inside\r\n     */\r\n    private store: T[] = [];\r\n\r\n    /**\r\n     * Pushes value on top of the stack\r\n     * @param val the value to place in the stack\r\n     */\r\n    push(val: T) {\r\n        this.store.push(val);\r\n    }\r\n\r\n    /**\r\n     * Removes and returns the item on the top of the stack\r\n     */\r\n    pop(): T {\r\n        return this.store.pop();\r\n    }\r\n\r\n    /**\r\n     * returns the item on the top of the stack without removing\r\n     */\r\n    peek(): T {\r\n        return this.store[this.store.length - 1];\r\n    }\r\n\r\n    /**\r\n     * returns the number of elements inside the stack\r\n     */\r\n    size(): number {\r\n        return this.store.length;\r\n    }\r\n\r\n    /**\r\n     * Removes all items within the stack\r\n     */\r\n    clear() {\r\n        this.store = [];\r\n    }\r\n}","import { GameAction } from \"src/app/models/game/GameAction\";\r\nimport { Executable } from \"../../block-command\";\r\n\r\n/**\r\n * Executable for testing\r\n * See block-command.ts for specific documentation \r\n * on properties and methods\r\n */\r\nexport class TextAction2 implements Executable {\r\n\r\n  static label: string = 'Action2';\r\n  static id: string = btoa(TextAction2.name);\r\n  static asCode = 'textAction2();';\r\n  indentationLevel: number;\r\n\r\n  execute(grid, unit): GameAction {\r\n    return new GameAction(unit.id + \" Action2\", unit, null, false);\r\n  }\r\n\r\n  getId(): string {\r\n    return TextAction2.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return TextAction2.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return TextAction2.asCode;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<body>\r\n    <h1>SCRIPTING SEIGE</h1>\r\n\r\n    <div class=\"bigDave\">\r\n        <img class=\"leftElement\"\r\n            src=\"assets/logo.png\"\r\n            alt=\"this is an image\">\r\n        <div class=\"textBox rightElement\">\r\n            <span>\r\n                <h1>Program Your units.<br>Win the war.</h1><br>\r\n                <p>Scripting Siege is a free educational game for both beginner and intermediate programmers</p>\r\n                <button mat-button routerLink=\"./signin\">> PLAY</button>\r\n            </span>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"spacer\"></div>\r\n\r\n    <div class=\"bigDave\">\r\n        <div class=\"textBox leftElement\">\r\n            <h1>Learn to Code. For Free</h1><br><br>\r\n            <p>\r\n                Scripting siege is a free educational game for both beginner and intermediate programmers.\r\n                <br><br>Choose between easy to read blockcode or program your units with javascript.\r\n            </p>\r\n        </div>\r\n        <img class=\"rightElement\"\r\n            src=\"assets/stockimages/code-editor-screenshot.png\"\r\n            alt=\"this is an image\">\r\n    </div>\r\n\r\n    <h1>OUR MISSION</h1>\r\n\r\n    <table id=\"mission\">\r\n        <tr>\r\n            <td><div class=\"missioncell\">\r\n                <h2>Learn</h2>\r\n                <p class=\"cellP\">Understand the basics of JavaScript with Scripting seige!</p>\r\n            </div></td>\r\n            <td><div class=\"missioncell\">\r\n                <h2>Practice</h2>\r\n                <p class=\"cellP\">Many levels to play with!</p>\r\n            </div></td>\r\n            <td><div class=\"missioncell\">\r\n                <h2>Improve</h2>\r\n                <p class=\"cellP\">As your characters get smarter, so do you!</p>\r\n            </div></td>\r\n        </tr>\r\n    </table>\r\n\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"spacer\"></div>\r\n\r\n    <h1>OUR TEAM</h1>\r\n\r\n    <table id=\"team\">\r\n        <tr class=\"teamrow\">\r\n            <td class=\"teamcol\"><div class=\"teamcell\">\r\n                <img class=\"missionImg\" src=\"assets/pfp/kd.jpg\"\r\n                    alt=\"this is an image\">\r\n                <p class=\"cellP\">My name is Kyle Dulce and I am a Software Engineering Student\r\n                    at the University of Ottawa. I have a passion for learning about software\r\n                    development and developing software of my own.\r\n                    <br><a href=\"https://www.linkedin.com/in/kyle-jacob-dulce/\">My LinkedIn</a>\r\n                    <br><a href=\"https://github.com/KyleDulce\">My Github</a>\r\n                </p>\r\n            </div></td>\r\n            <td class=\"teamcol\"><div class=\"teamcell\">\r\n                <img class=\"missionImg\" src=\"assets/pfp/ja.jpg\"\r\n                    alt=\"this is an image\">\r\n                <p class=\"cellP\">My name is John Amiscaray, a computer science student at Ryerson University.\r\n                  I am an aspiring software engineer always trying to perfect his skill and look for new opportunities.\r\n                  <br><a href=\"https://www.linkedin.com/in/john-amiscaray-7333a91b2/\">My LinkedIn</a>\r\n                  <br><a href=\"https://github.com/john-amiscaray\">My Github</a>\r\n            </div></td>\r\n            <td class=\"teamcol\"><div class=\"teamcell\">\r\n                <img class=\"missionImg\" src=\"assets/pfp/ha.png\"\r\n                    alt=\"this is an image\">\r\n                <p class=\"cellP\">I'm Hanna Bobis and I am a Computer Science undergraduate at Ryerson University.\r\n                    I did the art and helped with designing the webpage.\r\n                    <br><a href=\"https://www.linkedin.com/in/hanna-frances-b-9a38491b5/\">My LinkedIn</a>\r\n                    <br><a href=\"https://github.com/Hanna-Frances\">My Github</a>\r\n                </p>\r\n            </div></td>\r\n        </tr>\r\n    </table>\r\n\r\n</body>\r\n","import { Injectable } from '@angular/core';\r\nimport { BlockCommand } from 'src/app/models/blockCommands/block-command';\r\nimport { CodeType, ProgramData } from 'src/app/models/database/DatabaseData';\r\nimport { Unit } from 'src/app/models/game/units/Unit';\r\nimport { FirestoreDatabaseService } from '../../database/firestore-database.service';\r\nimport { CodeService } from '../../program-construction/code.service';\r\nimport { Archer } from '../../../models/game/units/Archer';\r\nimport { Swordsman } from 'src/app/models/game/units/Swordsman';\r\nimport { Wait } from 'src/app/models/blockCommands/blocks/executable/Wait';\r\nimport { Tower } from 'src/app/models/game/units/Tower';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LevelDataInterfaceService {\r\n\r\n  public static PLAYSPACE_SIZE = { x: 15, y: 15 };\r\n  public static TESTGRID_SIZE = { x: 15, y: 10 };\r\n\r\n  constructor(private database: FirestoreDatabaseService, private codeServ: CodeService) { }\r\n\r\n  getGameInfo(levelid: string, programid: string): Promise<{ team1Units: Unit[], team2Units: Unit[], griddimensions: { x: number, y: number } }> {\r\n    var self = this;\r\n\r\n    var curUnitId = 0;\r\n    return new Promise((resolutionFunc, rejectionFunc) => {\r\n      var returnObject: { team1Units: Unit[], team2Units: Unit[], griddimensions: { x: number, y: number } } =\r\n        { team1Units: [], team2Units: [], griddimensions: LevelDataInterfaceService.PLAYSPACE_SIZE };\r\n\r\n      this.database.getLevelProgram(levelid, function (prog: ProgramData) {\r\n\r\n        var progPromises: Array<Promise<void>> = []\r\n\r\n        //fill team units\r\n        for (var x = 0; x < prog.Units.length; x++) {\r\n\r\n          var u: Unit = self.newUnitOnType(prog.Units[x].TroopType);\r\n          u.id = curUnitId++;\r\n          u.team = 2;\r\n          u.location = prog.Units[x].location;\r\n          if (prog.Units[x].CodeType === CodeType.BLOCK) {\r\n            u.codeType = CodeType.BLOCK;\r\n            u.activecode = self.deserializeBlockCode(prog.Units[x].CodeBlocks);\r\n          } else if (prog.Units[x].CodeType === CodeType.FILE) {\r\n            u.codeType = CodeType.FILE;\r\n            // progPromises.push(new Promise((resolveP, rejectP) => {\r\n            //   // self.database.getUserCodeFromStorage(prog.Units[x].CodeFile.storageRef, prog.Units[x].CodeFile.filename, function (data) {\r\n            //   //   u.activecode = data;\r\n            //   //   console.log(\"loaded \" + u.activecode)\r\n            //   //   resolveP();\r\n            //   // });\r\n\r\n            // }));\r\n            progPromises.push(self.getStorageReadPromise(prog.Units[x].CodeFile.storageRef, prog.Units[x].CodeFile.filename, u));\r\n          } else {\r\n            console.log(\"Illegal code type, continuing\");\r\n            continue;\r\n          }\r\n\r\n          returnObject.team2Units.push(u);\r\n        }\r\n\r\n        self.database.getProgramData(programid, function (playerProg: ProgramData) {\r\n\r\n          //fill team units\r\n          for (var x = 0; x < playerProg.Units.length; x++) {\r\n\r\n            var u: Unit = self.newUnitOnType(playerProg.Units[x].TroopType);\r\n            u.id = curUnitId++;\r\n            u.team = 1;\r\n            u.location = playerProg.Units[x].location;\r\n            if (playerProg.Units[x].CodeType == CodeType.BLOCK) {\r\n              u.codeType = CodeType.BLOCK;\r\n              u.activecode = self.deserializeBlockCode(playerProg.Units[x].CodeBlocks);\r\n            } else if (playerProg.Units[x].CodeType == CodeType.FILE) {\r\n              u.codeType = CodeType.FILE;\r\n              // progPromises.push(new Promise((resolveP, rejectP) => {\r\n              //   self.database.getUserCodeFromStorage(playerProg.Units[x].CodeFile.storageRef, playerProg.Units[x].CodeFile.filename, function (data) {\r\n              //     u.activecode = data;\r\n              //     resolveP();\r\n              //   });\r\n              // }));\r\n              progPromises.push(self.getStorageReadPromise(playerProg.Units[x].CodeFile.storageRef, playerProg.Units[x].CodeFile.filename, u));\r\n            } else {\r\n              console.log(\"Illegal code type, continuing of type \" + (playerProg.Units[x].CodeType.toString()));\r\n              continue;\r\n            }\r\n            returnObject.team1Units.push(u);\r\n          }\r\n\r\n          Promise.all(progPromises).then(function (val) {\r\n            resolutionFunc(returnObject);\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  getGameInfoTesting(programData: ProgramData): Promise<{ team1Units: Unit[], team2Units: Unit[], griddimensions: { x: number, y: number } }> {\r\n\r\n    return new Promise<{ team1Units: Unit[], team2Units: Unit[], griddimensions: { x: number, y: number } }>((resolutionFunc, rejectionFunc) => {\r\n      var testUnit: Unit = new Archer();\r\n      testUnit.codeType = CodeType.BLOCK;\r\n      testUnit.activecode = [new Wait()];\r\n      testUnit.team = 2;\r\n      testUnit.location = { x: 10, y: 9 };\r\n\r\n      var result: { team1Units: Unit[], team2Units: Unit[], griddimensions: { x: number, y: number } } = {\r\n        team1Units: [],\r\n        team2Units: [testUnit],\r\n        griddimensions: LevelDataInterfaceService.TESTGRID_SIZE\r\n      };\r\n\r\n      var progPromises: Array<Promise<void>> = [];\r\n      var curUnitId = 0;\r\n      var self = this;\r\n\r\n      for (var x = 0; x < programData.Units.length; x++) {\r\n        var u: Unit = this.newUnitOnType(programData.Units[x].TroopType);\r\n        u.id = curUnitId++;\r\n        u.team = 1;\r\n        u.location = programData.Units[x].location;\r\n        if (programData.Units[x].CodeType == CodeType.BLOCK) {\r\n          u.codeType = CodeType.BLOCK;\r\n          u.activecode = this.deserializeBlockCode(programData.Units[x].CodeBlocks);\r\n        } else if (programData.Units[x].CodeType == CodeType.FILE) {\r\n          u.codeType = CodeType.FILE;\r\n          u.fileUrl = programData.Units[x].CodeFile.storageRef;\r\n          // progPromises.push(new Promise<void>((resolveP, rejectP) => {\r\n          //   self.database.getUserCodeFromStorage(programData.Units[x].CodeFile.storageRef, programData.Units[x].CodeFile.filename, function (data) {\r\n          //     u.activecode = data;\r\n          //     resolveP();\r\n          //   });\r\n          //}));\r\n          if(!(u.fileUrl.startsWith('blob'))){\r\n            progPromises.push(self.getStorageReadPromise(programData.Units[x].CodeFile.storageRef, programData.Units[x].CodeFile.filename, u));\r\n          }else{\r\n            u.activecode = new Worker(u.fileUrl);\r\n          }\r\n        } else {\r\n          console.log(\"Illegal code type, continuing\");\r\n          continue;\r\n        }\r\n\r\n        result.team1Units.push(u);\r\n\r\n        Promise.all(progPromises).then(function (val) {\r\n          resolutionFunc(result);\r\n        });\r\n      }\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n  private newUnitOnType(id: string): Unit {\r\n    switch (id) {\r\n      case Archer.dbid:\r\n        return new Archer();\r\n      case Swordsman.dbid:\r\n        return new Swordsman();\r\n      case Tower.dbid:\r\n        return new Tower();\r\n      default:\r\n        return new Unit();\r\n    }\r\n  }\r\n\r\n  private deserializeBlockCode(code: string[]): BlockCommand[] {\r\n    return this.codeServ.deserializeToBlocks(code);\r\n  }\r\n\r\n  private getStorageReadPromise(storageRef, filename, passedunit) {\r\n    var self = this;\r\n    return new Promise<void>((resolveP, rejectP) => {\r\n      self.database.getUserCodeFromStorage(storageRef, filename, function (data) {\r\n        console.log(\"recieved \" + filename);\r\n        passedunit.activecode = data;\r\n        resolveP();\r\n      })\r\n    });\r\n  }\r\n\r\n}\r\n","import {Predicate} from '../../block-command';\r\nimport {GridParserService} from '../../../../services/game/grid-parser.service';\r\n\r\nexport class EastAvailable implements Predicate{\r\n\r\n  static id: string = btoa(EastAvailable.name);\r\n  static label: string = 'East Available';\r\n  static asCode: string = 'locationAvailable(grid, {x: me.location.x + 1, y: me.location.y})';\r\n  conjunction: string = '';\r\n  indentationLevel: number;\r\n  negate: boolean = false;\r\n\r\n  evaluation(grid, unit): boolean {\r\n    let east = {x: unit.location.x + 1, y: unit.location.y};\r\n    return GridParserService.isInBounds(east, grid)\r\n      && !GridParserService.isUnitOccupied(east, grid);\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return EastAvailable.asCode;\r\n  }\r\n\r\n  getId(): string {\r\n    return EastAvailable.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return EastAvailable.label;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as createjs from \"createjs-module\";\r\nimport {Unit} from '../../models/game/units/Unit';\r\nimport {SpriteConstants} from '../SpriteConstants';\r\n(<any>window).createjs = createjs;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpriteService {\r\n\r\n  constructor() {}\r\n\r\n  static loadSpriteSheets(){\r\n    let manifest = [\r\n      {id:SpriteConstants.archer, src: 'assets/animations/archer sprite sheet.png'},\r\n      {id:SpriteConstants.swordsmen, src: 'assets/animations/swordsman sprite sheet.png'},\r\n      {id:SpriteConstants.tower, src:'assets/animations/tower sprite sheet.png'},\r\n      {id:SpriteConstants.testMap, src:'assets/maps/test map.png'}\r\n    ];\r\n    let queue = new createjs.LoadQueue();\r\n    queue.loadManifest(manifest);\r\n    return queue;\r\n\r\n  }\r\n\r\n  initSpritesForAll(units: Array<Unit>, imageQueue){\r\n\r\n    for(let unit of units){\r\n\r\n      if(unit === null){\r\n        continue;\r\n      }\r\n      unit.initSprite(imageQueue.getResult(unit.constructor.name));\r\n\r\n    }\r\n\r\n  }\r\n\r\n  flipSpriteInPlace(unit){\r\n\r\n    unit.sprite.scaleX = -unit.sprite.scaleX;\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { TerminalBlock } from '../../block-command';\r\n\r\n/**\r\n * TerminalBlock representing the start of the code\r\n * See block-command.ts for specific documentation\r\n * on properties and methods\r\n */\r\nexport class Start implements TerminalBlock {\r\n\r\n  static label: string = 'When Turn';\r\n  static id: string = btoa(Start.name);\r\n  terminate: number = null;\r\n  indentationLevel: number = 0;\r\n\r\n  getId(): string {\r\n    return Start.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return Start.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return 'this.onmessage = function (turnEvent){';\r\n  }\r\n\r\n}\r\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport * as createjs from 'createjs-module';\r\nimport {SpriteService} from '../../services/game/sprite.service';\r\nimport {Unit} from '../../models/game/units/Unit';\r\nimport {SpriteConstants} from '../../services/SpriteConstants';\r\nimport {CodeService} from '../../services/program-construction/code.service';\r\nimport {GameLoopServiceService} from '../../services/game/gameloop/game-loop.service';\r\nimport {GameAction} from '../../models/game/GameAction';\r\nimport {LevelDataInterfaceService} from '../../services/game/levelDataInterface/level-data-interface.service';\r\nimport {CodeType, ProgramData} from '../../models/database/DatabaseData';\r\nimport {Subject} from 'rxjs';\r\nimport {Archer} from '../../models/game/units/Archer';\r\nimport {East} from '../../models/blockCommands/blocks/executable/East';\r\nimport {Swordsman} from '../../models/game/units/Swordsman';\r\nimport {BlockService} from '../../services/program-construction/block.service';\r\nimport {FirestoreDatabaseService} from '../../services/database/firestore-database.service';\r\n\r\n(<any>window).createjs = createjs;\r\nlet stage;\r\n// TODO, makes these dynamic\r\nlet tiles_on_x = LevelDataInterfaceService.TESTGRID_SIZE.x;\r\nlet tiles_on_y = LevelDataInterfaceService.TESTGRID_SIZE.y\r\nlet canvas_width = tiles_on_x * 40;\r\nlet canvas_height = tiles_on_y * 40;\r\n\r\n@Component({\r\n  selector: 'app-level',\r\n  templateUrl: './level.component.html',\r\n  styleUrls: ['./level.component.css']\r\n})\r\nexport class LevelComponent implements OnInit, OnDestroy {\r\n\r\n  private grid: Unit[][];\r\n  public loading: string = \"loading\";\r\n  private lastAction: GameAction;\r\n  private gameStart = false;\r\n  public width = canvas_width;\r\n  public height = canvas_height;\r\n  private codeIndexGraphics: Array<{number: createjs.Text, location: {x: number, y: number}}> = [];\r\n  private tickCount = 0;\r\n  @Input()\r\n  private testMode: boolean;\r\n  @Input()\r\n  private programData: ProgramData;\r\n  @Input()\r\n  private run: Subject<boolean>;\r\n  @Input()\r\n  private unitCodeChange: Subject<{unit: Unit, index: number, color: string}>;\r\n  @Input()\r\n  private saveFormationsAndCode: Subject<boolean>;\r\n  @Output()\r\n  private unitClickEvent: EventEmitter<Unit> = new EventEmitter<Unit>();\r\n  @Output()\r\n  private saveStateEvent: EventEmitter<Unit[][]> = new EventEmitter<Unit[][]>();\r\n  @Input()\r\n  private gameLevelDataNum: string;\r\n  @Input()\r\n  private gamePlayerDataNum: string;\r\n  @Input()\r\n  private updateProgramData: Subject<ProgramData>;\r\n  @Input()\r\n  private giveGridData: Subject<boolean>;\r\n  @Output()\r\n  private gameActionLogger: EventEmitter<GameAction> = new EventEmitter<GameAction>();\r\n  @Output()\r\n  private gridDataEvent: EventEmitter<Unit[][]> = new EventEmitter<Unit[][]>();\r\n  private contextMenu: createjs.Container = null;\r\n  private contextMenuBounds = {x: 0, y: 0, w: 0, h: 0};\r\n  private unitsLeft = 5;\r\n  private imageQueue = null;\r\n\r\n  constructor(private sprite: SpriteService, private code: CodeService, private loopservice: GameLoopServiceService) { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.gameStart = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(this.testMode !== undefined && this.programData !== undefined){\r\n\r\n      this.loadGridData(this.programData);\r\n\r\n    }else{\r\n      throw new Error('display mode and program data must be defined in the component');\r\n    }\r\n\r\n    if(this.run !== undefined){\r\n      this.run.subscribe(_ => {\r\n\r\n        if(this.loading === 'done') {\r\n          if (!this.gameStart) {\r\n            this.startGame();\r\n            this.closeContextMenu();\r\n          } else {\r\n            this.resetGame();\r\n          }\r\n        }\r\n      });\r\n    }\r\n    if(this.unitCodeChange !== undefined && this.testMode){\r\n      this.unitCodeChange.subscribe(data => {\r\n\r\n        this.changeCodeIndexOfUnit(data.unit, data.index, data.color);\r\n\r\n      });\r\n    }\r\n\r\n    if(this.saveFormationsAndCode !== undefined){\r\n      this.saveFormationsAndCode.subscribe(_ => {\r\n\r\n        this.saveStateEvent.emit(this.grid);\r\n\r\n      });\r\n    }else{\r\n      if(this.testMode){\r\n        throw new Error('Save Formation And Code Subject must be defined in test mode');\r\n      }\r\n\r\n    }\r\n    if(this.updateProgramData !== undefined && this.testMode){\r\n      this.updateProgramData.subscribe(data => {\r\n        this.programData = data;\r\n      });\r\n    }\r\n\r\n    if(this.giveGridData !== undefined && this.testMode){\r\n      this.giveGridData.subscribe(_ => {\r\n        this.gridDataEvent.emit(this.grid);\r\n      });\r\n    }\r\n\r\n    createjs.Ticker.on('tick', _ => {\r\n\r\n      if(stage !== undefined){\r\n\r\n        stage.update();\r\n        this.tickCount += 1;\r\n        if(this.lastAction !== undefined && !(this.lastAction.actionId === \"GameEnd2\" || this.lastAction.actionId === \"GameEnd1\") && this.gameStart\r\n          && this.tickCount % 20 === 0 && this.loading === 'done'){\r\n          this.step();\r\n        }\r\n\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  initGridSize(){\r\n    if(this.testMode){\r\n      tiles_on_x = LevelDataInterfaceService.TESTGRID_SIZE.x;\r\n      tiles_on_y = LevelDataInterfaceService.TESTGRID_SIZE.y\r\n    }else{\r\n      tiles_on_x = LevelDataInterfaceService.PLAYSPACE_SIZE.x;\r\n      tiles_on_y = LevelDataInterfaceService.PLAYSPACE_SIZE.y\r\n    }\r\n    canvas_width = tiles_on_x * 40;\r\n    canvas_height = tiles_on_y * 40;\r\n    this.width = canvas_width;\r\n    this.height = canvas_height;\r\n  }\r\n\r\n  loadGridData(programData){\r\n\r\n    this.initGridSize();\r\n\r\n    if(this.testMode){\r\n\r\n      let self = this;\r\n      this.loopservice.loadTestData(programData).then(result => {\r\n\r\n        self.gameInit();\r\n\r\n      });\r\n\r\n    }else{\r\n      //run the game\r\n      let self = this;\r\n\r\n      if (this.gameLevelDataNum !== undefined && this.gamePlayerDataNum !== undefined) {\r\n        this.loopservice.loadData(this.gameLevelDataNum, this.gamePlayerDataNum).then(result => {\r\n          self.gameInit();\r\n        });\r\n      } else {\r\n        throw new Error(\"a level number and program number for the player must be defined when not in test mode\");\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  gameInit(){\r\n    var self = this;\r\n    if(this.loopservice.prepLoop()) {\r\n      self.grid = self.loopservice.grid;\r\n      let imageQueue = SpriteService.loadSpriteSheets();\r\n      stage = new createjs.Stage('battlegrounds');\r\n      imageQueue.on('complete', () => {\r\n        let shape = new createjs.Shape();\r\n        shape.graphics.beginBitmapFill(imageQueue.getResult(SpriteConstants.testMap)).drawRect(0, 0, canvas_width, canvas_height);\r\n        stage.addChild(shape);\r\n        this.drawGrid();\r\n        this.imageQueue = imageQueue;\r\n        for(let row of self.grid){\r\n          this.sprite.initSpritesForAll(row, imageQueue);\r\n          self.placeAllOnScreen(row);\r\n        }\r\n        self.addAllCodeIndexGraphics();\r\n      })\r\n      this.loading = \"done\";\r\n    }\r\n\r\n  }\r\n\r\n  placeOnScreen(unit: Unit){\r\n\r\n    let half_sprite_length = SpriteConstants.spriteSize / 2;\r\n    /*\r\n    Add half a sprite length in the end because the center of the sprite is placed at the corner of the\r\n    square\r\n     */\r\n    unit.sprite.x = (unit.location.x * SpriteConstants.spriteSize) + half_sprite_length;\r\n    unit.sprite.y = (unit.location.y * SpriteConstants.spriteSize) + half_sprite_length;\r\n    if(this.testMode && !this.gameStart){\r\n      let numberOffSetX = 10;\r\n      let numberOffSetY = 8;\r\n      if(!this.codeIndexGraphicExistsForUnit(unit)){\r\n        let number = new createjs.Text(`${unit.testCodeIndex !== undefined ? unit.testCodeIndex: ''}`,\r\n          \"13px Roboto\", \"#7A3DB8\");\r\n        number.x = unit.sprite.x + numberOffSetX;\r\n        number.y = unit.sprite.y + numberOffSetY;\r\n        let numberRep = {number: number, location: unit.location}\r\n        this.codeIndexGraphics.push(numberRep);\r\n        stage.addChild(number);\r\n      }\r\n      // make the unit draggable to set formation\r\n      unit.sprite.on('pressmove', e => {\r\n\r\n        if(!this.gameStart && unit.team === 1){\r\n          // @ts-ignore\r\n          e.target.x = e.stageX;\r\n          // @ts-ignore\r\n          e.target.y = e.stageY;\r\n        }\r\n\r\n      });\r\n      // snap the dragged unit to the center of the nearest tile\r\n      unit.sprite.on('pressup', e => {\r\n\r\n        if(!this.gameStart && unit.team === 1){\r\n\r\n          //@ts-ignore\r\n          let sprite = e.target;\r\n          // @ts-ignore\r\n          let new_x = (Math.floor(e.stageX / 40) * 40) + half_sprite_length;\r\n          new_x = new_x < 400 ? new_x : 360 + half_sprite_length;\r\n          // @ts-ignore\r\n          let new_y = (Math.floor(e.stageY / 40) * 40) + half_sprite_length;\r\n\r\n          let new_location = {\r\n            x: Math.floor((new_x - half_sprite_length) / SpriteConstants.spriteSize),\r\n            y: Math.floor((new_y - half_sprite_length) / SpriteConstants.spriteSize)\r\n          }\r\n\r\n          if(this.grid[new_location.x][new_location.y] === null){\r\n\r\n            this.grid[unit.location.x][unit.location.y] = null;\r\n            for(let numRep of this.codeIndexGraphics){\r\n\r\n              if(numRep.location === unit.location){\r\n\r\n                numRep.number.x = new_x + numberOffSetX;\r\n                numRep.number.y = new_y + numberOffSetY;\r\n                numRep.location = new_location;\r\n                break;\r\n\r\n              }\r\n\r\n            }\r\n            unit.location = new_location;\r\n            this.grid[unit.location.x][unit.location.y] = unit;\r\n            sprite.x = new_x;\r\n            sprite.y = new_y;\r\n            this.giveGridData.next(true);\r\n\r\n          }else{\r\n\r\n            unit.sprite.x = (unit.location.x * SpriteConstants.spriteSize) + half_sprite_length;\r\n            unit.sprite.y = (unit.location.y * SpriteConstants.spriteSize) + half_sprite_length;\r\n\r\n          }\r\n\r\n        }\r\n\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * inits all the units on screen (only called on game init)\r\n   * @param units a row on the grid\r\n   */\r\n  placeAllOnScreen(units: Array<Unit>){\r\n\r\n    for(let unit of units){\r\n\r\n      if(unit === null){\r\n        continue;\r\n      }\r\n\r\n      this.placeOnScreen(unit);\r\n      stage.addChild(unit.sprite);\r\n      // Assuming units of team 2 face west\r\n      if(unit.team === 2){\r\n\r\n        this.sprite.flipSpriteInPlace(unit);\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  drawGrid(){\r\n\r\n    for(let i = 0; i < tiles_on_x;i++){\r\n      for(let j = 0; j < tiles_on_y; j++){\r\n\r\n        let shape = new createjs.Shape();\r\n\r\n        shape.graphics\r\n          .beginStroke('black')\r\n          .drawRect(i * SpriteConstants.spriteSize\r\n            , j * SpriteConstants.spriteSize, SpriteConstants.spriteSize, SpriteConstants.spriteSize);\r\n\r\n        stage.addChild(shape);\r\n\r\n      }\r\n\r\n    }\r\n    let shape = new createjs.Shape();\r\n    shape.graphics.setStrokeDash([2,2]);\r\n    shape.graphics.setStrokeStyle(1)\r\n      .beginStroke('red')\r\n      .moveTo(400, 0)\r\n      .lineTo(400, canvas_height)\r\n      .endStroke();\r\n    stage.addChild(shape);\r\n  }\r\n\r\n  step(){\r\n\r\n    this.loading = \"loading\";\r\n    var prom = this.loopservice.stepGame();\r\n    prom.then(result => {\r\n      this.lastAction = result as GameAction;\r\n      this.loading = \"done\";\r\n\r\n      this.gameActionLogger.emit(this.lastAction);\r\n\r\n      if(!(this.lastAction.doer === null)){\r\n\r\n        this.placeOnScreen(this.lastAction.doer);\r\n        this.placeOnGrid(this.lastAction.doer);\r\n\r\n      }\r\n      if(this.lastAction.hasDied){\r\n\r\n        let dead = this.lastAction.receiver\r\n        stage.removeChild(dead.sprite);\r\n        console.log('Death happened');\r\n\r\n      }\r\n\r\n    });\r\n\r\n    prom.catch(result => {\r\n      this.loading = \"error last action!\";\r\n    });\r\n\r\n  }\r\n\r\n  startGame(){\r\n\r\n    this.step();\r\n    if(this.codeIndexGraphics.length !== 0){\r\n      for(let numGraphic of this.codeIndexGraphics){\r\n        stage.removeChild(numGraphic.number);\r\n      }\r\n    }\r\n    this.gameStart = true;\r\n\r\n  }\r\n  resetGame(){\r\n\r\n    this.loading = 'loading';\r\n    this.grid = null;\r\n    this.loopservice.grid = null;\r\n    this.gameStart = false;\r\n    stage.removeAllChildren();\r\n    this.loadGridData(this.programData);\r\n    this.tickCount = 0;\r\n    this.lastAction = undefined;\r\n\r\n  }\r\n\r\n  placeOnGrid(unit){\r\n\r\n    this.grid[unit.location.x][unit.location.y] = unit;\r\n\r\n  }\r\n\r\n  onGridClick(event){\r\n    let location = {\r\n      x: Math.floor((event.pageX - event.target.offsetLeft) / 40),\r\n      y: Math.floor((event.pageY - event.target.offsetTop) / 40)\r\n    };\r\n    if(!this.inContextMenuBounds(location.x * 40, location.y * 40)){\r\n      this.closeContextMenu();\r\n    }\r\n    let unit = this.grid[location.x][location.y];\r\n    if(unit !== null && unit !== undefined){\r\n      this.unitClickEvent.emit(unit);\r\n    }\r\n  }\r\n\r\n  changeCodeIndexOfUnit(unit: Unit, index: number, color: string){\r\n\r\n    unit.testCodeIndex = index;\r\n    for(let numRep of this.codeIndexGraphics){\r\n\r\n      if(numRep.location === unit.location){\r\n\r\n        numRep.number.text = `${index}`;\r\n        numRep.number.color = color;\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  codeIndexGraphicExistsForUnit(unit: Unit){\r\n    for(let numRep of this.codeIndexGraphics){\r\n      if(numRep.location === unit.location){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  removeCodeIndexGraphicForUnit(unit: Unit){\r\n\r\n    let index = this.codeIndexGraphics.findIndex(graphic => {\r\n      return graphic.location === unit.location;\r\n    });\r\n    stage.removeChild(this.codeIndexGraphics[index].number);\r\n    this.codeIndexGraphics.splice(index, 1);\r\n  };\r\n\r\n  addAllCodeIndexGraphics(){\r\n    for(let shape of this.codeIndexGraphics){\r\n      stage.addChild(shape.number);\r\n    }\r\n  }\r\n\r\n  renderContextMenuAt(x, y, tileX, tileY){\r\n    // create context menu\r\n    let container = new createjs.Container();\r\n    let containerConstants = {w:100, h:100, absx: x, absy: y};\r\n    container.x = containerConstants.absx;\r\n    container.y = containerConstants.absy;\r\n    let background = new createjs.Shape();\r\n    background.graphics.beginFill('#BEBEBE').drawRect(0, 0,\r\n      containerConstants.w, containerConstants.h);\r\n    background.graphics.beginStroke('black').drawRect(0, 0,\r\n      containerConstants.w, containerConstants.h);\r\n    container.addChild(background);\r\n\r\n    // add units left text\r\n    let unitsLeft = new createjs.Text();\r\n    let unitsLeftTextConstants = {x: 3, y: 10};\r\n    unitsLeft.font = '12px JetBrains Mono';\r\n    unitsLeft.text = `Units Left: ${this.unitsLeft}`;\r\n    unitsLeft.color = 'black';\r\n    unitsLeft.x = unitsLeftTextConstants.x;\r\n    unitsLeft.y = unitsLeftTextConstants.y;\r\n    container.addChild(unitsLeft)\r\n\r\n    // create add archer button\r\n    let addArcherButton = new createjs.Shape();\r\n    let archerButtonConstants = {x: 5, y: 25, w: 90, h: 20};\r\n    let addArcherTextConstants = {x: 17, y: 30};\r\n    addArcherButton.graphics.beginFill('white').drawRect(archerButtonConstants.x,\r\n      archerButtonConstants.y, archerButtonConstants.w, archerButtonConstants.h);\r\n    addArcherButton.graphics.beginStroke('black').drawRect(archerButtonConstants.x,\r\n      archerButtonConstants.y, archerButtonConstants.w, archerButtonConstants.h);\r\n    container.addChild(addArcherButton);\r\n    let self = this;\r\n    addArcherButton.on('click', _ => {\r\n      if(self.loopservice.grid[tileX][tileY] === null && this.imageQueue !== null && this.unitsLeft > 0){\r\n        let unit = new Archer();\r\n        unit.team = 1;\r\n        let team = self.loopservice.team1units;\r\n        unit.id = team.length > 0 ? team[team.length - 1].id + 1 : 0;\r\n        unit.activecode = [new East()];\r\n        unit.location.x = tileX;\r\n        unit.codeType = CodeType.BLOCK;\r\n        unit.location.y = tileY;\r\n        unit.initSprite(self.imageQueue.getResult(SpriteConstants.archer));\r\n        self.loopservice.team1units.push(unit);\r\n        self.loopservice.grid[tileX][tileY] = unit;\r\n        self.placeOnGrid(unit);\r\n        self.placeAllOnScreen([unit]);\r\n        self.closeContextMenu();\r\n        self.unitsLeft -= 1;\r\n        self.giveGridData.next(true);\r\n      }\r\n    });\r\n    let addArcher = new createjs.Text();\r\n    addArcher.font = '11px JetBrains Mono';\r\n    addArcher.text = 'Add Archer';\r\n    addArcher.color = 'black';\r\n    addArcher.x = addArcherTextConstants.x;\r\n    addArcher.y = addArcherTextConstants.y;\r\n    container.addChild(addArcher);\r\n\r\n    // create add swordsman button\r\n    let addSwordsmanButton = new createjs.Shape();\r\n    let addSwordsmanButtonConstants = {x: 5, y: 50, w: 90, h: 20};\r\n    let addSwordsmanTextConstants = {x: 7, y: 55};\r\n    addSwordsmanButton.graphics.beginFill('white').drawRect(addSwordsmanButtonConstants.x,\r\n      addSwordsmanButtonConstants.y, addSwordsmanButtonConstants.w, addSwordsmanButtonConstants.h);\r\n    addSwordsmanButton.graphics.beginStroke('black').drawRect(addSwordsmanButtonConstants.x,\r\n      addSwordsmanButtonConstants.y, addSwordsmanButtonConstants.w, addSwordsmanButtonConstants.h);\r\n    container.addChild(addSwordsmanButton);\r\n    addSwordsmanButton.on('click', _ => {\r\n      if(self.loopservice.grid[tileX][tileY] === null && this.imageQueue !== null && this.unitsLeft > 0){\r\n        let unit = new Swordsman();\r\n        unit.team = 1;\r\n        let team = self.loopservice.team1units;\r\n        unit.id = team.length > 0 ? team[team.length - 1].id + 1 : 0;\r\n        unit.activecode = [new East()];\r\n        unit.location.x = tileX;\r\n        unit.codeType = CodeType.BLOCK;\r\n        unit.location.y = tileY;\r\n        unit.initSprite(self.imageQueue.getResult(SpriteConstants.swordsmen));\r\n        self.loopservice.team1units.push(unit);\r\n        self.loopservice.grid[tileX][tileY] = unit;\r\n        self.placeOnGrid(unit);\r\n        self.placeAllOnScreen([unit]);\r\n        self.closeContextMenu();\r\n        self.unitsLeft -= 1;\r\n        self.giveGridData.next(true);\r\n      }\r\n    });\r\n    let addSwordsman = new createjs.Text();\r\n    addSwordsman.font = '11px JetBrains Mono';\r\n    addSwordsman.text = 'Add Swordsman';\r\n    addSwordsman.color = 'black';\r\n    addSwordsman.x = addSwordsmanTextConstants.x;\r\n    addSwordsman.y = addSwordsmanTextConstants.y;\r\n    container.addChild(addSwordsman);\r\n\r\n    // create delete button\r\n    let deleteButton = new createjs.Shape();\r\n    let deleteButtonText = new createjs.Text();\r\n    let deleteButtonConstants = {x: 5, y: 75, w: 90, h: 20};\r\n    let deleteButtonTextConstants = {x: 13, y: 80};\r\n\r\n    deleteButton.graphics.beginFill('white').drawRect(0,0, deleteButtonConstants.w, deleteButtonConstants.h);\r\n    deleteButton.graphics.beginStroke('black').drawRect(0, 0, deleteButtonConstants.w, deleteButtonConstants.h);\r\n    deleteButton.x = deleteButtonConstants.x;\r\n    deleteButton.y = deleteButtonConstants.y;\r\n    container.addChild(deleteButton);\r\n    deleteButton.on('click', _ => {\r\n      if(self.loopservice.grid[tileX][tileY] !== null && self.loopservice.grid[tileX][tileY].team !== 2 && this.unitsLeft !== 5){\r\n        let unit = self.loopservice.grid[tileX][tileY];\r\n        stage.removeChild(unit.sprite);\r\n        this.loopservice.deleteUnit(unit);\r\n        self.removeCodeIndexGraphicForUnit(unit);\r\n        self.unitsLeft += 1;\r\n        self.closeContextMenu();\r\n        self.giveGridData.next(true);\r\n      }\r\n    });\r\n\r\n    deleteButtonText.font = '11px JetBrains Mono';\r\n    deleteButtonText.text = 'Delete Unit';\r\n    deleteButtonText.color = 'black';\r\n    deleteButtonText.x = deleteButtonTextConstants.x;\r\n    deleteButtonText.y = deleteButtonTextConstants.y;\r\n    container.addChild(deleteButtonText);\r\n\r\n\r\n    this.contextMenu = container;\r\n    this.contextMenuBounds.x = containerConstants.absx;\r\n    this.contextMenuBounds.y = containerConstants.absy;\r\n    this.contextMenuBounds.w = containerConstants.w;\r\n    this.contextMenuBounds.h = containerConstants.h;\r\n    stage.addChild(container);\r\n\r\n  }\r\n\r\n  onContextMenuOpen(event){\r\n\r\n    event.preventDefault();\r\n    if(this.contextMenu === null && !this.gameStart && this.testMode && this.loading === 'done'){\r\n      this.renderContextMenuAt(event.pageX - event.target.offsetLeft, event.pageY - event.target.offsetTop,\r\n        Math.floor((event.pageX - event.target.offsetLeft) / 40),\r\n        Math.floor((event.pageY - event.target.offsetTop) / 40));\r\n    }\r\n\r\n  }\r\n\r\n  inContextMenuBounds(x, y): boolean{\r\n\r\n    return x >= this.contextMenuBounds.x && x <= this.contextMenuBounds.x + this.contextMenuBounds.w &&\r\n      y >= this.contextMenuBounds.y && y <= this.contextMenuBounds.y + this.contextMenuBounds.h;\r\n\r\n  }\r\n\r\n  closeContextMenu(){\r\n    stage.removeChild(this.contextMenu);\r\n    this.contextMenu = null;\r\n  }\r\n\r\n}\r\n","<canvas id=\"battlegrounds\" [width]=\"width\" [height]=\"height\" (click)=\"onGridClick($event)\"\r\n        (contextmenu)=\"onContextMenuOpen($event)\">\r\n\r\n</canvas>\r\n","import {Predicate} from '../../block-command';\r\n\r\n/**\r\n * Predicate used to store complex conditions involving and + or of other predicates\r\n */\r\nexport class CompoundPredicate implements Predicate{\r\n\r\n  conjunction: string;\r\n  indentationLevel: number;\r\n  negate: boolean;\r\n  static id: string =  btoa(CompoundPredicate.name);\r\n\r\n  evaluation(grid, unit): boolean {\r\n    return false;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return '';\r\n  }\r\n\r\n  getId(): string {\r\n    return CompoundPredicate.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return '';\r\n  }\r\n\r\n\r\n}\r\n","import { Unit } from \"./units/Unit\";\r\n\r\n/**\r\n * Object that represents a single action that occured in 1 step of the game\r\n */\r\nexport class GameAction {\r\n\r\n    /**\r\n     * The action in String representation of what occured in the previous step\r\n     */\r\n    actionId: string = null;\r\n\r\n    /**\r\n     * The Unit object that was committing the action\r\n     * null if the action was not committed by the unit\r\n     */\r\n    doer: Unit = null;\r\n\r\n    /**\r\n     * The Unit object that was receiving the action\r\n     * null if the action aws not acted to another unit\r\n     */\r\n    receiver: Unit = null;\r\n\r\n    /**\r\n     * The boolean value that represents if any unit has died\r\n     * after the previous action.\r\n     */\r\n    hasDied: boolean = false;\r\n\r\n    /**\r\n     * Main Constructor for game action\r\n     * @param id String Id of what happened\r\n     * @param doer The unit object that committed the action (null if no unit has commited the action)\r\n     * @param receiver The unit object that recieved the action (null if no unit has recieved the action)\r\n     * @param died true if any unit died, false otherwise\r\n     */\r\n    constructor(id: string, doer: Unit, receiver: Unit, died: boolean) {\r\n        this.actionId = id;\r\n        this.doer = doer;\r\n        this.receiver = receiver;\r\n        this.hasDied = died;\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { UserData } from 'src/app/models/database/DatabaseData';\r\nimport { GameAction } from 'src/app/models/game/GameAction';\r\nimport { FirestoreDatabaseService } from 'src/app/services/database/firestore-database.service';\r\nimport { AuthyLoginService } from 'src/app/services/login/authy-login.service';\r\n\r\n@Component({\r\n  selector: 'app-levelplay',\r\n  templateUrl: './levelplay.component.html',\r\n  styleUrls: ['./levelplay.component.css']\r\n})\r\nexport class LevelplayComponent {\r\n\r\n  run: Subject<boolean> = new Subject<boolean>();\r\n  testmode: boolean = false;\r\n  nullprogramData = null;\r\n\r\n  levData: string;\r\n  progData: string;\r\n\r\n  logColumns = [\"id\", \"msg\"];\r\n  logData: MatTableDataSource<{ id: number, msg: string }> = new MatTableDataSource<{ id: number, msg: string }>();\r\n  actionLog: { id: number, msg: string }[] = [];\r\n  actionlogNum: number = 1;\r\n\r\n  started: boolean = false;\r\n\r\n  userData: UserData;\r\n\r\n  @ViewChild(\"datalogTable\", { read: ElementRef })\r\n  datalogTable: ElementRef;\r\n\r\n  constructor(private route: ActivatedRoute, private changeDetectorRefs: ChangeDetectorRef, private db: FirestoreDatabaseService,\r\n    private Auth: AuthyLoginService, private router: Router) {\r\n    if (!Auth.checkSigninStatus()) {\r\n      router.navigate(['/signin']);\r\n    } else {\r\n      var self = this;\r\n      db.getUserData(Auth.getUser().uid, function (result) {\r\n        console.log(\"Recieved UserData\");\r\n        self.userData = result;\r\n      });\r\n\r\n      route.queryParams.subscribe(params => {\r\n        this.levData = params.l;\r\n        this.progData = params.p;\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  startGame() {\r\n    this.run.next(true);\r\n  }\r\n\r\n  newGameAction(action: GameAction) {\r\n\r\n    console.log(\"called\");\r\n\r\n    switch (action.actionId) {\r\n      case \"GameEnd2\":\r\n        this.addActionToLog(\"You lost the game\");\r\n        break;\r\n\r\n      case \"GameEnd1\":\r\n        this.addActionToLog(\"You won the game\");\r\n        this.addWinToPlayer();\r\n        break;\r\n\r\n      case \"NoEvent\":\r\n        this.addActionToLog(\"Nothing Happened\");\r\n        break;\r\n\r\n      case \"Attack\":\r\n        this.addActionToLog(\"Unit \" + action.doer.id + \" attacked unit \" + action.receiver.id);\r\n        if (action.hasDied) {\r\n          this.addActionToLog(\"Unit \" + action.receiver.id + \" died\");\r\n        }\r\n        break;\r\n\r\n      case \"Wait\":\r\n        this.addActionToLog(\"Unit \" + action.doer.id + \" Waited\");\r\n        break;\r\n\r\n      case \"North\":\r\n        this.addActionToLog(\"Unit \" + action.doer.id + \" moved \" + action.actionId);\r\n        break;\r\n\r\n      case \"East\":\r\n        this.addActionToLog(\"Unit \" + action.doer.id + \" moved \" + action.actionId);\r\n        break;\r\n\r\n      case \"South\":\r\n        this.addActionToLog(\"Unit \" + action.doer.id + \" moved \" + action.actionId);\r\n        break;\r\n\r\n      case \"West\":\r\n        this.addActionToLog(\"Unit \" + action.doer.id + \" moved \" + action.actionId);\r\n        break;\r\n\r\n      default:\r\n        this.addActionToLog(\"Unexpected action: \\\"\" + action.actionId + \"\\\"\" + action.doer.id);\r\n    }\r\n    this.changeDetectorRefs.detectChanges();\r\n    console.log(\"length \" + this.actionLog.length);\r\n  }\r\n\r\n  private addActionToLog(msg: string) {\r\n    this.actionLog.push({ id: this.actionlogNum, msg });\r\n    this.logData.data = this.actionLog;\r\n    this.actionlogNum++;\r\n    this.datalogTable.nativeElement.scrollTop = this.datalogTable.nativeElement.scrollHeight;\r\n  }\r\n\r\n  private addWinToPlayer() {\r\n    if (this.userData != undefined) {\r\n\r\n      if (this.userData.CompletedLevels.indexOf(parseInt(this.levData)) < 0) {\r\n\r\n        this.userData.CompletedLevels.push(parseInt(this.levData));\r\n\r\n        this.db.setUserData(this.Auth.getUser().uid, this.userData);\r\n      }\r\n\r\n    } else {\r\n      console.log(\"Database is taking wayyyy too long\");\r\n    }\r\n  }\r\n\r\n}\r\n","<h1>Level {{levData}}</h1>\r\n\r\n<app-level id=\"playspace\" [testMode]=\"testmode\" [programData]=\"nullprogramData\" [run]=\"run\" [gameLevelDataNum]=\"levData\"\r\n    [gamePlayerDataNum]=\"progData\" (gameActionLogger)=\"newGameAction($event)\"></app-level>\r\n\r\n<div id=\"ActionLog\">\r\n    <h2>Action Log</h2>\r\n    <table #datalogTable mat-table [dataSource]=\"logData\">\r\n\r\n        <ng-container matColumnDef=\"id\">\r\n            <th mat-header-cell *matHeaderCellDef class=\"idCol\"> Id. </th>\r\n            <td mat-cell *matCellDef=\"let msg\" class=\"idCol\">{{msg.id}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"msg\">\r\n            <th mat-header-cell *matHeaderCellDef class=\"actionCol\"> Action </th>\r\n            <td mat-cell *matCellDef=\"let msg\" class=\"actionCol\">{{msg.msg}}</td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"logColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: logColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n    <button mat-raised-button (click)=\"startGame()\">Start Game</button>\r\n\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthyLoginService } from 'src/app/services/login/authy-login.service';\r\n\r\n@Component({\r\n  selector: 'app-pageheader',\r\n  templateUrl: './pageheader.component.html',\r\n  styleUrls: ['./pageheader.component.css']\r\n})\r\nexport class PageheaderComponent {\r\n\r\n  @Input()\r\n  loggedIn: boolean;\r\n  @Input()\r\n  username: string;\r\n\r\n  constructor(private auth: AuthyLoginService, private router: Router) {\r\n    // this.loggedIn = this.auth.checkSigninStatus();\r\n    //\r\n    // if(this.loggedIn) {\r\n    //   this.username = this.auth.getUser().authDisplayName;\r\n    // }\r\n  }\r\n\r\n  logout() {\r\n    this.auth.logout();\r\n    this.router.navigate([\"\"]);\r\n  }\r\n\r\n}\r\n","<div style=\"background-color: #0b132b;\">\r\n    <button mat-button class=\"typebutton\" routerLink=\"\">SS</button>\r\n    <button mat-button id=\"Sign\" class=\"typebutton right-buttons\" routerLink=\"/signin\" *ngIf=\"!loggedIn\">Sign in</button>\r\n    <button mat-button id=\"Username\" class=\"typebutton right-buttons\" *ngIf=\"loggedIn\" [matMenuTriggerFor]=\"profiledropdown\">{{username}}</button>\r\n    <button mat-button id=\"LevelSelect\" class=\"typebutton right-buttons\" routerLink=\"/levelSelect\" *ngIf=\"loggedIn\">Level Select</button>\r\n    <button mat-button id=\"CodeNow\" class=\"typebutton right-buttons\" routerLink=\"/code\" *ngIf=\"loggedIn\">Code Now</button>\r\n    <button mat-button id=\"Docs\" class=\"typebutton right-buttons\" *ngIf=\"loggedIn\"\r\n      [mat-menu-trigger-for]=\"guidedropdown\">Guides</button>\r\n    <mat-menu #profiledropdown=\"matMenu\" xPosition=\"before\">\r\n        <button mat-menu-item routerLink=\"/profile\">Profile</button>\r\n        <button mat-menu-item (click)=\"logout()\">Logout</button>\r\n    </mat-menu>\r\n    <mat-menu #guidedropdown=\"matMenu\" xPosition=\"after\">\r\n      <button mat-menu-item routerLink=\"/using-the-code-editor\">Using The Scripting Siege Code Editor</button>\r\n      <button mat-menu-item routerLink=\"/learn-js\">Learn Javascript</button>\r\n      <button mat-menu-item routerLink=\"/docs\">Scripting Siege Javascript API docs</button>\r\n    </mat-menu>\r\n    <hr style=\"margin-bottom: 0; background-color: #3a506b; height: 5px; border: none;\">\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { BlockCommand, ConditionalBlock, Executable, Predicate, TerminalBlock } from 'src/app/models/blockCommands/block-command';\r\nimport { Else } from 'src/app/models/blockCommands/blocks/conditional/Else';\r\nimport { ElseIf } from 'src/app/models/blockCommands/blocks/conditional/ElseIf';\r\nimport { If } from 'src/app/models/blockCommands/blocks/conditional/If';\r\nimport { Attack } from 'src/app/models/blockCommands/blocks/executable/Attack';\r\nimport { West } from 'src/app/models/blockCommands/blocks/executable/West';\r\nimport { East } from 'src/app/models/blockCommands/blocks/executable/East';\r\nimport { North } from 'src/app/models/blockCommands/blocks/executable/North';\r\nimport { South } from 'src/app/models/blockCommands/blocks/executable/South';\r\nimport { Wait } from 'src/app/models/blockCommands/blocks/executable/Wait';\r\nimport { EmptyPredicate } from 'src/app/models/blockCommands/blocks/predicate/EmptyPredicate';\r\nimport { EnemyNear } from 'src/app/models/blockCommands/blocks/predicate/EnemyNear';\r\nimport { HealthBelow30Percent } from 'src/app/models/blockCommands/blocks/predicate/HealthBelow30Percent';\r\nimport { End } from 'src/app/models/blockCommands/blocks/terminal/End';\r\nimport { EndElse } from 'src/app/models/blockCommands/blocks/terminal/EndElse';\r\nimport { EndElseIf } from 'src/app/models/blockCommands/blocks/terminal/EndElseIf';\r\nimport { EndIf } from 'src/app/models/blockCommands/blocks/terminal/Endif';\r\nimport { Start } from 'src/app/models/blockCommands/blocks/terminal/Start';\r\nimport {TextAction1} from '../../models/blockCommands/blocks/executable/TestAction1';\r\nimport {TextAction2} from '../../models/blockCommands/blocks/executable/TestAction2';\r\nimport {TruePredicate} from '../../models/blockCommands/blocks/predicate/TruePredicate';\r\nimport {FalsePredicate} from '../../models/blockCommands/blocks/predicate/FalsePredicate';\r\nimport {CompoundPredicate} from '../../models/blockCommands/blocks/predicate/CompoundPredicate';\r\nimport {EastAvailable} from '../../models/blockCommands/blocks/predicate/EastAvailable';\r\nimport {WestAvailable} from '../../models/blockCommands/blocks/predicate/WestAvailable';\r\nimport {NorthAvailable} from '../../models/blockCommands/blocks/predicate/NorthAvailable';\r\nimport {SouthAvailable} from '../../models/blockCommands/blocks/predicate/SouthAvailable';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * Service that aids in programming using the BlockCommand Designer and\r\n * compiling\r\n */\r\nexport class BlockService {\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * Array of all BlockCommands that can be placed on the code designer\r\n   */\r\n  static placeableBlocks: Array<BlockCommand> = [\r\n    new If(), new Attack(), new North(), new South(), new East(),\r\n    new West(), new Wait(), new EndIf(), new Else(), new ElseIf(),\r\n    new EndElse(), new EndElseIf(), new TextAction2(), new TextAction1()\r\n  ];\r\n\r\n  static actionBlocks: Array<BlockCommand> = [\r\n    new North(), new South(), new East(),\r\n    new West(), new Wait(), new Attack()\r\n  ];\r\n\r\n  static conditionalBlocks: Array<BlockCommand> = [\r\n\r\n    new If(), new EndIf(), new Else(), new ElseIf(),\r\n    new EndElse(), new EndElseIf()\r\n  ];\r\n  /**\r\n   * Array representing all BlockCommands\r\n   */\r\n  static allBlocks: Array<BlockCommand> = BlockService.placeableBlocks.concat(new Start(), new End(), new EmptyPredicate());\r\n\r\n  /**\r\n   * Array representing all Predicates available\r\n   */\r\n  static predicates: Array<Predicate> = [new EnemyNear(), new HealthBelow30Percent(),\r\n    new NorthAvailable(), new SouthAvailable(), new EastAvailable(), new WestAvailable()];\r\n\r\n  /**\r\n   * returns true if the BlockCommand is a ConditionalBlock Object\r\n   * @param command The BlockCommand to check\r\n   */\r\n  isConditional(command: BlockCommand): command is ConditionalBlock {\r\n    return (<ConditionalBlock>command).conditions !== undefined;\r\n  }\r\n\r\n  /**\r\n   * returns true if the BlockCommand is an Executable Object\r\n   * @param command The BlockCommand to check\r\n   */\r\n  isExecutable(command: BlockCommand): command is Executable {\r\n    return (<Executable>command).execute !== undefined;\r\n  }\r\n\r\n  /**\r\n   * returns true if the BlockCommand is a TerminalBlock Object\r\n   * @param command The BlockCommand to check\r\n   */\r\n  isTerminal(command: BlockCommand): command is TerminalBlock {\r\n    return (<TerminalBlock>command).terminate !== undefined;\r\n  }\r\n\r\n  /**\r\n   * Returns CommandBlock from id\r\n   * @param id the Id of the block to search for\r\n   */\r\n  getById(id: string): BlockCommand {\r\n    switch (id) {\r\n      case If.id:\r\n        return new If();\r\n      case Attack.id:\r\n        return new Attack();\r\n      case North.id:\r\n        return new North();\r\n      case South.id:\r\n        return new South();\r\n      case East.id:\r\n        return new East();\r\n      case West.id:\r\n        return new West();\r\n      case Wait.id:\r\n        return new Wait();\r\n      case ElseIf.id:\r\n        return new ElseIf();\r\n      case Else.id:\r\n        return new Else();\r\n      case EndIf.id:\r\n        return new EndIf();\r\n      case EndElseIf.id:\r\n        return new EndElseIf();\r\n      case EndElse.id:\r\n        return new EndElse();\r\n      case TextAction1.id:\r\n        return new TextAction1();\r\n      case TextAction2.id:\r\n        return new TextAction2();\r\n      case HealthBelow30Percent.id:\r\n        return new HealthBelow30Percent();\r\n      case EnemyNear.id:\r\n        return new EnemyNear();\r\n      case TruePredicate.id:\r\n        return new TruePredicate();\r\n      case FalsePredicate.id:\r\n        return new FalsePredicate();\r\n      case EmptyPredicate.id:\r\n        return new EmptyPredicate();\r\n      case CompoundPredicate.id:\r\n        return new CompoundPredicate();\r\n      case EastAvailable.id:\r\n        return new EastAvailable();\r\n      case WestAvailable.id:\r\n        return new WestAvailable();\r\n      case NorthAvailable.id:\r\n        return new NorthAvailable();\r\n      case SouthAvailable.id:\r\n        return new SouthAvailable();\r\n      case Start.id:\r\n        return new Start();\r\n      case End.id:\r\n        return new End();\r\n      default:\r\n        throw new Error(`Id of ${id} is not recognized.`);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  cloneBlock(block: BlockCommand){\r\n\r\n    return Object.create(block);\r\n\r\n  }\r\n\r\n}\r\n","import { Predicate } from '../../block-command';\r\n\r\n/**\r\n * Predicate representing The EnemyNear Condition\r\n * Condition checks if there is an enemy near the unit\r\n * See block-command.ts for specific documentation\r\n * on properties and methods\r\n */\r\nexport class EnemyNear implements Predicate {\r\n\r\n  static label: string = 'Enemy In Range';\r\n  static id: string = btoa(EnemyNear.name);\r\n  static asCode = 'enemyInRange(grid, me)'\r\n  indentationLevel: number;\r\n  negate: boolean = false;\r\n  conjunction: string = '';\r\n\r\n  evaluation(grid, unit): boolean {\r\n    for(let x = 0; x < grid.length; x++){\r\n      for(let y = 0; y < grid[0].length; y++){\r\n        let other = grid[x][y];\r\n        if(!((unit.location.x === x && unit.location.y === y) || other === null || other.team === unit.team)){\r\n          if((x >= unit.location.x - unit.attackRange && x <= unit.location.x + unit.attackRange) &&\r\n            (y >= unit.location.y - unit.attackRange && y <= unit.location.y + unit.attackRange)){\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getId(): string {\r\n    return EnemyNear.id;\r\n  }\r\n  getLabel(): string {\r\n    return EnemyNear.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return EnemyNear.asCode;\r\n  }\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {transferArrayItem} from '@angular/cdk/drag-drop';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {BlockCommand, Predicate} from 'src/app/models/blockCommands/block-command';\r\nimport {End} from 'src/app/models/blockCommands/blocks/terminal/End';\r\nimport {Start} from 'src/app/models/blockCommands/blocks/terminal/Start';\r\nimport {BlockService} from 'src/app/services/program-construction/block.service';\r\nimport {CodeService} from 'src/app/services/program-construction/code.service';\r\nimport {Else} from 'src/app/models/blockCommands/blocks/conditional/Else';\r\nimport {\r\n  enemyNearFunc,\r\n  healthBelow30PercentFunc,\r\n  locationAvailableFunc,\r\n  RealCodeRepr\r\n} from '../../models/blockCommands/actual-code/RealCodeRepr';\r\nimport {HealthBelow30Percent} from '../../models/blockCommands/blocks/predicate/HealthBelow30Percent';\r\nimport {EnemyNear} from '../../models/blockCommands/blocks/predicate/EnemyNear';\r\nimport {EmptyPredicate} from '../../models/blockCommands/blocks/predicate/EmptyPredicate';\r\nimport {Unit} from '../../models/game/units/Unit';\r\nimport {CodeType, ProgramData, UnitData, UserData} from '../../models/database/DatabaseData';\r\nimport {Swordsman} from '../../models/game/units/Swordsman';\r\nimport {Subject} from 'rxjs';\r\nimport {ErrorComponent} from '../error/error.component';\r\nimport {SetNameComponent} from '../set-name/set-name.component';\r\nimport {FirestoreDatabaseService} from '../../services/database/firestore-database.service';\r\nimport {AuthyLoginService} from '../../services/login/authy-login.service';\r\nimport {Router} from '@angular/router';\r\nimport {InfoComponent} from '../info/info.component';\r\nimport {NorthAvailable} from '../../models/blockCommands/blocks/predicate/NorthAvailable';\r\nimport {SouthAvailable} from '../../models/blockCommands/blocks/predicate/SouthAvailable';\r\nimport {WestAvailable} from '../../models/blockCommands/blocks/predicate/WestAvailable';\r\nimport {EastAvailable} from '../../models/blockCommands/blocks/predicate/EastAvailable';\r\nimport {East} from '../../models/blockCommands/blocks/executable/East';\r\n\r\n@Component({\r\n  selector: 'app-block-code',\r\n  templateUrl: './block-code.component.html',\r\n  styleUrls: ['./block-code.component.css']\r\n})\r\nexport class BlockCodeComponent implements OnInit{\r\n\r\n  codeBlocks: Array<BlockCommand> = BlockService.placeableBlocks;\r\n\r\n  predicates: Array<Predicate> = BlockService.predicates;\r\n\r\n  codeTabs: Array<Array<BlockCommand>> = [\r\n\r\n    [new Start(), new End()],\r\n    [new Start(), new End()],\r\n    [new Start(), new End()],\r\n    [new Start(), new End()]\r\n\r\n  ];\r\n  jsCodeTabs: Array<any> = this.codeBlocks.map(_ =>{return {content: '', file: null, ref: '', rawFile: null}});\r\n\r\n  verified: Array<boolean> = this.codeTabs.map(_ => false);\r\n\r\n  selected: boolean = false;\r\n\r\n  currentCode: Array<BlockCommand> = this.codeTabs[0];\r\n\r\n  blockCategories: Array<any> = [\r\n\r\n    {type: 'Action', selected: true},\r\n    {type:'Conditional', selected: false}\r\n\r\n  ];\r\n  selectedCategory: any = this.blockCategories[0];\r\n\r\n  realCode: Array<RealCodeRepr> = this.currentCode.map(block => new RealCodeRepr(block));\r\n  extraLinesAdded: number = 3;\r\n  hasHealthFunc = false;\r\n  hasEnemyNearFunc = false;\r\n  hasLocationAvailableFunc = false;\r\n  programData: ProgramData;\r\n  tabIndex: number = 1;\r\n  run: Subject<boolean> = new Subject<boolean>();\r\n  gameRun: boolean = false;\r\n  unitCodeChange: Subject<{unit: Unit, index: number, color: string}> = new Subject<{unit: Unit; index: number, color: string}>();\r\n  saveFormationsAndCode: Subject<boolean> = new Subject<boolean>();\r\n  javascriptMode: boolean = false;\r\n  giveGridData: Subject<boolean> = new Subject<boolean>();\r\n  updateProgramData: Subject<ProgramData> = new Subject<ProgramData>();\r\n\r\n  constructor(private codeService: CodeService, public blockService: BlockService, private dialog: MatDialog,\r\n              private db: FirestoreDatabaseService, private auth: AuthyLoginService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if(this.auth.checkSigninStatus()){\r\n\r\n      this.programData = new ProgramData();\r\n      this.programData.Name = 'Test';\r\n      let unit = new UnitData();\r\n      unit.CodeBlocks = [East.id];\r\n      unit.CodeType = CodeType.BLOCK;\r\n      unit.TroopType = Swordsman.dbid;\r\n      unit.location = {x: 1, y:2};\r\n      this.programData.Units = [unit];\r\n      this.initStarterCode();\r\n\r\n    }else{\r\n\r\n      this.router.navigate(['signin']);\r\n\r\n    }\r\n  }\r\n\r\n  unverifyCode(){\r\n\r\n    this.verified[this.tabIndex - 1] = false;\r\n    this.selected = false;\r\n\r\n  }\r\n\r\n  onDrop(event) {\r\n\r\n    if (event.container.data === this.currentCode &&\r\n      event.currentIndex != 0 && !(event.currentIndex >= this.currentCode.length)) {\r\n      this.unverifyCode();\r\n      let block = event.previousContainer.data[event.previousIndex];\r\n      let copy = this.blockService.cloneBlock(block);\r\n      this.setIndentationLevel(event, block);\r\n      if (this.blockService.isConditional(block)) {\r\n        copy.conditions = [new EmptyPredicate()];\r\n        copy.condition = new EmptyPredicate();\r\n      }\r\n      event.previousContainer.data.push(copy);\r\n      transferArrayItem(event.previousContainer.data,\r\n        event.container.data,\r\n        event.previousIndex, event.currentIndex);\r\n      this.realCode.splice(event.currentIndex + this.extraLinesAdded, 0, new RealCodeRepr(copy));\r\n    }\r\n\r\n  }\r\n\r\n  onDeleteBlock(index) {\r\n    this.unverifyCode();\r\n    this.currentCode.splice(index, 1);\r\n    this.realCode.splice(index + this.extraLinesAdded, 1);\r\n    this.recalculateIndentation();\r\n  }\r\n\r\n  exportCode() {\r\n\r\n    this.saveFormationsAndCode.next(true);\r\n\r\n  }\r\n\r\n  saveProgramData(state: Unit[][], saveFile:boolean=false, name=\"test\"){\r\n    this.programData = new ProgramData();\r\n    this.programData.Name = name;\r\n    this.programData.Verified = true;\r\n    this.programData.Units = [];\r\n    let savedFiles = [];\r\n    for(let row of state){\r\n      for(let tile of row){\r\n        if(tile != null && tile.team === 1){\r\n          let unit = new UnitData();\r\n          unit.TroopType = btoa(tile.constructor.name);\r\n          if(tile.codeType === CodeType.BLOCK){\r\n            unit.CodeType = CodeType.BLOCK;\r\n            unit.CodeBlocks = this.codeService.serializeBlocks(tile.activecode);\r\n          }else if(tile.codeType === CodeType.FILE){\r\n            unit.CodeType = CodeType.FILE\r\n            if(saveFile){\r\n              for(let tab of this.jsCodeTabs){\r\n                if(tab.file === tile.fileUrl){\r\n                  tile.fileUrl = tab.ref;\r\n                }\r\n              }\r\n            }\r\n            unit.CodeFile = {storageRef: tile.fileUrl, filename: tile.fileUrl.split('/')[3]};\r\n            if(saveFile){\r\n              let code = null;\r\n              for(let file of this.jsCodeTabs){\r\n\r\n                if(file.ref === tile.fileUrl){\r\n\r\n                  code = file.rawFile;\r\n\r\n                }\r\n\r\n              }\r\n              if(code === null){\r\n                throw new Error(\"Couldn't find file. Something went wrong. Your code is spaghetti lel\");\r\n              }\r\n              if(!savedFiles.includes(tile.fileUrl)){\r\n                this.db.storeCodeAtLocation(tile.fileUrl, code);\r\n                savedFiles.push(tile.fileUrl);\r\n              }\r\n            }\r\n\r\n          }\r\n          unit.location = Object.freeze(tile.location);\r\n          this.programData.Units.push(unit);\r\n        }\r\n      }\r\n    }\r\n    this.updateProgramData.next(this.programData);\r\n  }\r\n\r\n  saveState(state: Unit[][]){\r\n\r\n    let data = {\r\n\r\n      name: '',\r\n      cancelled: false\r\n\r\n    };\r\n    let name_dia = this.dialog.open(SetNameComponent, {\r\n\r\n      data: data\r\n\r\n    });\r\n\r\n    name_dia.afterClosed().subscribe(_ => {\r\n      if(data.name !== '' && !data.cancelled){\r\n        let self = this;\r\n        self.saveProgramData(state, true, data.name);\r\n        let id = 0;\r\n        function setProgram(id){\r\n          self.db.doesProgramExist(`${id}`, result => {\r\n\r\n            if(result){\r\n              let id = self.getRandomInt(200);\r\n              setProgram(id);\r\n            }else{\r\n              self.db.setProgramData(`${id}`, self.programData).then(_ => {\r\n                let uid = self.auth.getUser().uid;\r\n                self.db.getUserData(uid, result => {\r\n\r\n                  let user: UserData = result;\r\n                  user.Programs.push(id);\r\n                  self.db.setUserData(uid, user).then(\r\n                    _ => {\r\n                      self.dialog.open(InfoComponent, {data: 'Code and formation saved successfully!'})\r\n                    }\r\n                  ).catch(\r\n\r\n                    _ => {\r\n\r\n                      self.dialog.open(ErrorComponent,\r\n                        {data: 'Whoops! Something went wrong on our end. Please try again or send a bug report'});\r\n\r\n                    }\r\n\r\n                  );\r\n\r\n                })\r\n              });\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n        setProgram(id);\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  onChangeCondition(block, value, index, blockIndex) {\r\n    console.log('HERE');\r\n    let conjunction = block.conditions[index].conjunction;\r\n    block.conditions[index] = value;\r\n    block.conditions[index].conjunction = conjunction;\r\n    this.unverifyCode();\r\n    this.refreshCode(blockIndex);\r\n    if(value.getLabel() === HealthBelow30Percent.label && !this.hasHealthFunc){\r\n      this.addFunctionToRealCode(healthBelow30PercentFunc);\r\n      this.hasHealthFunc = true;\r\n    }else if(value.getLabel() === EnemyNear.label && !this.hasEnemyNearFunc){\r\n      this.addFunctionToRealCode(enemyNearFunc);\r\n      this.hasEnemyNearFunc = true;\r\n    }else if([NorthAvailable.label, SouthAvailable.label, EastAvailable.label, WestAvailable.label].includes(value.getLabel())\r\n      && !this.hasLocationAvailableFunc){\r\n      this.addFunctionToRealCode(locationAvailableFunc);\r\n      this.hasLocationAvailableFunc = true;\r\n    }\r\n  }\r\n\r\n  isConditional(block) {\r\n    return this.blockService.isConditional(block) && !(block.getLabel() === Else.label);\r\n  }\r\n\r\n  isEndBlock(block: BlockCommand) {\r\n    return block.getLabel() === Start.label || block.getLabel() === End.label\r\n  }\r\n\r\n  isTerminalBlock(block: BlockCommand){\r\n\r\n    return this.blockService.isTerminal(block);\r\n\r\n  }\r\n\r\n  /*\r\n   If the event argument is set to null, we assume you are doing it based on index, otherwise if index is null\r\n   or not specified then we do it based on the event. The reason this is the way it is because when we drag the\r\n   blocks we get their index using the event. But we also need the option to do it by indent when we recalculate\r\n   the indentation when blocks are deleted or when we import the code.\r\n   */\r\n  setIndentationLevel(event, block, index=null){\r\n\r\n    let blockIndex = index;\r\n\r\n    if(event !== null){\r\n\r\n      blockIndex = event.currentIndex;\r\n\r\n    }\r\n\r\n    let blockAbove = this.currentCode[blockIndex - 1];\r\n    if(blockIndex === 1){\r\n      block.indentationLevel = 1;\r\n    }else if(this.blockService.isConditional(blockAbove) && !(this.blockService.isTerminal(block))){\r\n      block.indentationLevel = blockAbove.indentationLevel + 1;\r\n    }else if(this.blockService.isTerminal(block) && !(blockAbove.indentationLevel === 1)\r\n      && !(this.blockService.isConditional(blockAbove))){\r\n      block.indentationLevel = blockAbove.indentationLevel - 1;\r\n    }else{\r\n      block.indentationLevel = blockAbove.indentationLevel;\r\n    }\r\n\r\n  }\r\n\r\n  recalculateIndentation(){\r\n\r\n    for(let i = 1; i < this.currentCode.length - 1; i++){\r\n\r\n      let block = this.currentCode[i];\r\n      this.setIndentationLevel(null, block, i);\r\n      this.realCode[i + this.extraLinesAdded].indentationLevel = block.indentationLevel;\r\n\r\n    }\r\n\r\n  }\r\n\r\n  initStarterCode(){\r\n\r\n    let dataInit = new RealCodeRepr(null, 'let data = JSON.parse(turnEvent.data);');\r\n    dataInit.indentationLevel = 1;\r\n    this.realCode.splice(1, 0, dataInit);\r\n    let gridInit = new RealCodeRepr(null, 'let grid = data.grid;');\r\n    gridInit.indentationLevel = 1;\r\n    this.realCode.splice(2, 0, gridInit);\r\n    let unitInit = new RealCodeRepr(null, 'let me = data.unit;');\r\n    unitInit.indentationLevel = 1;\r\n    this.realCode.splice(this.extraLinesAdded, 0, unitInit);\r\n\r\n  }\r\n\r\n  addFunctionToRealCode(funcCode){\r\n\r\n    let codeReprs = RealCodeRepr.funcToRealCodeRepr(funcCode);\r\n    for(let line of codeReprs){\r\n      this.realCode.push(line);\r\n    }\r\n\r\n  }\r\n\r\n  addCondition(conditions){\r\n\r\n    conditions.push(new EmptyPredicate());\r\n\r\n  }\r\n\r\n  setConjunction(predicate, conj, index){\r\n    predicate.conjunction = conj;\r\n    this.refreshCode(index);\r\n  }\r\n\r\n  deleteCondition(conditions, index){\r\n\r\n    conditions.splice(index, 1);\r\n    this.refreshCode(index);\r\n\r\n  }\r\n\r\n  refreshCode(index){\r\n\r\n    this.realCode[index + this.extraLinesAdded].code = this.currentCode[index].getAsCode();\r\n\r\n  }\r\n\r\n  refreshAllCode(){\r\n\r\n    this.realCode = [];\r\n    for(let block of this.currentCode){\r\n      this.realCode.push(new RealCodeRepr(block));\r\n    }\r\n    this.initStarterCode();\r\n\r\n  }\r\n\r\n  updateCategorySelected(index){\r\n\r\n    for(let category of this.blockCategories){\r\n\r\n      category.selected = false;\r\n\r\n    }\r\n    this.blockCategories[index].selected = true;\r\n    this.selectedCategory = this.blockCategories[index];\r\n\r\n\r\n  }\r\n\r\n  getBlocksOfSelectedCategory(){\r\n\r\n    if(this.selectedCategory === this.blockCategories[0]){\r\n      return BlockService.actionBlocks;\r\n    }else{\r\n      return BlockService.conditionalBlocks;\r\n    }\r\n\r\n  }\r\n\r\n  changeTab(tab, index){\r\n\r\n\r\n    this.currentCode = tab;\r\n    this.tabIndex = index + 1;\r\n    this.unverifyCode();\r\n    this.refreshAllCode();\r\n\r\n  }\r\n\r\n  updateSelected(){\r\n\r\n    this.selected = !this.selected;\r\n\r\n  }\r\n\r\n  onSelectBlockCode(event){\r\n\r\n    if(!this.javascriptMode){\r\n\r\n      event.preventDefault();\r\n      this.updateSelected();\r\n      this.verifyCode();\r\n\r\n    }\r\n\r\n  }\r\n\r\n  onSelectJsCode(event){\r\n\r\n    event.preventDefault();\r\n    this.updateSelected();\r\n\r\n  }\r\n\r\n  verifyCode(){\r\n\r\n    if(!this.verified[this.tabIndex - 1]){\r\n      try{\r\n        this.codeService.compileToExecutableCode(this.currentCode);\r\n        this.verified[this.tabIndex - 1] = true;\r\n      }catch(error){\r\n        let dialog = this.dialog.open(ErrorComponent, {\r\n\r\n          data: error.message\r\n\r\n        });\r\n        dialog.afterClosed().subscribe(_ => {\r\n\r\n          this.updateSelected();\r\n\r\n        });\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  addCodeToUnit(unit: Unit){\r\n    let invalidCode = false;\r\n    if(this.selected && ((this.verified[this.tabIndex - 1] && !this.javascriptMode) || this.javascriptMode)){\r\n      if(!this.javascriptMode){\r\n        if(this.verified[this.tabIndex - 1]){\r\n          unit.codeType = CodeType.BLOCK;\r\n          unit.activecode = [...this.currentCode];\r\n        }else{\r\n          invalidCode = true;\r\n        }\r\n      }else{\r\n        if(this.jsCodeTabs[this.tabIndex - 1].file !== null){\r\n          unit.codeType = CodeType.FILE;\r\n          unit.activecode = new Worker(this.jsCodeTabs[this.tabIndex - 1].file);\r\n          unit.fileUrl = this.jsCodeTabs[this.tabIndex - 1].file;\r\n        }else{\r\n          invalidCode = true;\r\n        }\r\n      }\r\n      this.updateSelected();\r\n      if(!invalidCode){\r\n        this.unitCodeChange.next({unit: unit, index: this.tabIndex, color: this.javascriptMode ? '#7A3DB8' : '#A4000F'});\r\n        this.giveGridData.next(true);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  runOrResetTest(){\r\n\r\n    this.run.next(true);\r\n    this.gameRun = !this.gameRun;\r\n\r\n  }\r\n\r\n  switchEditorMode(){\r\n\r\n    this.javascriptMode = !this.javascriptMode;\r\n    this.selected = false;\r\n\r\n  }\r\n\r\n  uploadJavascript(){\r\n\r\n    document.getElementById('file').click();\r\n\r\n  }\r\n\r\n  retrieveJavascriptCode(event){\r\n\r\n    let file = event.target.files[0];\r\n\r\n    let reader = new FileReader();\r\n    let self = this;\r\n    reader.onload = function(event) {\r\n      if (typeof event.target.result === 'string') {\r\n        let fileRepr = self.jsCodeTabs[self.tabIndex - 1];\r\n        fileRepr.content = event.target.result;\r\n        fileRepr.file = window.URL.createObjectURL(file);\r\n        console.log(fileRepr.file);\r\n        fileRepr.rawFile = file;\r\n        // TODO: set the ref variable of the file object to be the appropriate file location for firebase\r\n        fileRepr.ref = `/user_code/${self.auth.getUser().uid}/${new Date().getTime()}`;\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  }\r\n\r\n  goToHelpPage(){\r\n    this.router.navigate(['using-the-code-editor']);\r\n    window.scroll(0,0);\r\n  }\r\n\r\n}\r\n","<div id=\"content-wrapper\">\r\n\r\n  <div id=\"left-content\">\r\n\r\n    <div id=\"top-left-content\" [style.height]=\"javascriptMode ? '90%': '60%'\">\r\n      <div class=\"tabs\" [style.height]=\"javascriptMode ? '5%': '7%'\">\r\n        <div *ngFor=\"let tab of codeTabs; let i = index\" class=\"tab tab-not-selected\" (click)=\"changeTab(tab, i)\"\r\n             [class.tab-not-selected]=\"tab !== currentCode\" [class.tab-selected]=\"tab === currentCode\">\r\n          <h3>\r\n            {{i + 1}}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <div id=\"code-boundary\" [style.scrollbar-width]=\"javascriptMode ? 'none': ''\">\r\n        <div *ngIf=\"javascriptMode\" id=\"user-js-code-console\" (contextmenu)=\"onSelectJsCode($event)\"\r\n            [class.code-select]=\"selected\">\r\n          <pre><code id=\"user-js-code\">{{jsCodeTabs[tabIndex - 1].content}}</code></pre>\r\n        </div>\r\n        <div cdkDrag cdkDropList cdkDropListOrientation=\"vertical\" id=\"current-code-list\" (cdkDropListDropped)=\"onDrop($event)\"\r\n             [cdkDropListData]=\"currentCode\" #yourCode=\"cdkDropList\" cdkDragBoundary=\"#code-boundary\"\r\n             [class.cdk-visually-hidden]=\"javascriptMode\"\r\n             (contextmenu)=\"onSelectBlockCode($event)\">\r\n          <mat-card *ngFor=\"let block of currentCode; let i = index\"\r\n                    [class.executable-block]=\"!isEndBlock(block) && !isConditional(block) && !isTerminalBlock(block)\"\r\n                    [class.end-code-block]=\"isEndBlock(block)\"\r\n                    [class.code-select]=\"selected\"\r\n                    [class.conditional-code-block]=\"(isConditional(block) || isTerminalBlock(block)) && !isEndBlock(block)\"\r\n                    cdkDrag cdkDragDisabled class=\"code-block-used\"  [style.left]=\"(block.indentationLevel * 50) + 'px'\">\r\n            {{block.getLabel()}}\r\n            <div class=\"conditional-options-wrapper\" *ngIf=\"isConditional(block)\">\r\n              <div *ngFor=\"let condition of block.conditions; let j = index\" class=\"conditional-options\">\r\n                <div *ngIf=\"j > 0\" class=\"further-conditions\">\r\n                  <button mat-button (click)=\"deleteCondition(block.conditions, i)\">\r\n                    <mat-icon>close</mat-icon>\r\n                  </button>\r\n                  <mat-radio-group class=\"and-or\" (change)=\"setConjunction(block.conditions[j], $event.value, i)\">\r\n                    <mat-radio-button value=\"&\" [checked]=\"condition.conjunction === '&'\" >And</mat-radio-button>\r\n                    <mat-radio-button value=\"|\" [checked]=\"condition.conjunction === '|'\" >Or</mat-radio-button>\r\n                  </mat-radio-group>\r\n                </div>\r\n                <p class=\"condition-label\">\r\n                  {{block.conditions[j].negate ? 'Not' : ''}}\r\n                  {{block.conditions[j].getLabel()}}\r\n                </p>\r\n                <mat-form-field appearance=\"fill\" *ngIf=\"isConditional(block)\">\r\n                  <mat-label>Select Condition:</mat-label>\r\n                  <mat-select [value]=\"block.conditions[j]\" (selectionChange)=\"onChangeCondition(block, $event.value, j, i)\">\r\n                    <mat-option *ngFor=\"let predicate of predicates\" [value]=\"blockService.cloneBlock(predicate)\">\r\n                      {{predicate.getLabel()}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n\r\n                <mat-checkbox *ngIf=\"isConditional(block)\" name=\"negate\" [(ngModel)]=\"condition.negate\"\r\n                              (change)=\"refreshCode(i)\">\r\n                  Negate condition (not)\r\n                </mat-checkbox>\r\n              </div>\r\n\r\n              <button mat-raised-button (click)=\"addCondition(block.conditions)\" class=\"add-condition\">\r\n                add condition\r\n              </button>\r\n\r\n            </div>\r\n\r\n            <!-- If the block is not the when turn and end blocks -->\r\n            <button *ngIf=\"!isEndBlock(block)\" mat-button color=\"primary\" (click)=\"onDeleteBlock(i)\">\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n          </mat-card>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div id=\"bottom-left-content\" *ngIf=\"!javascriptMode\">\r\n      <div class=\"tabs\" id=\"lower-tabs\">\r\n        <div *ngFor=\"let cat of blockCategories; let i = index\" [class.tab-not-selected]=\"!cat.selected\"\r\n             class=\"tab\" [attr.id]=\"cat.type\" [class.tab-selected]=\"cat.selected\" (click)=\"updateCategorySelected(i)\">\r\n          <h3>{{cat.type}}</h3>\r\n        </div>\r\n      </div>\r\n      <div id=\"card-list-boundary\">\r\n        <div cdkDropList cdkDropListOrientation=\"horizontal\" id=\"card-list\" (cdkDropListDropped)=\"onDrop($event)\"\r\n             [cdkDropListData]=\"getBlocksOfSelectedCategory()\" [cdkDropListConnectedTo]=\"yourCode\">\r\n          <mat-card *ngFor=\"let block of getBlocksOfSelectedCategory()\"\r\n                    cdkDrag class=\"code-block-unused\">{{block.getLabel()}}</mat-card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"right-content\">\r\n    <app-level id=\"map\" [testMode]=\"true\" [programData]=\"programData\" [run]=\"run\" [unitCodeChange]=\"unitCodeChange\"\r\n               [saveFormationsAndCode]=\"saveFormationsAndCode\"\r\n               [giveGridData]=\"giveGridData\"\r\n               [updateProgramData]=\"updateProgramData\"\r\n               (unitClickEvent)=\"addCodeToUnit($event)\"\r\n               (saveStateEvent)=\"saveState($event)\"\r\n               (gridDataEvent)=\"saveProgramData($event)\"></app-level>\r\n    <div id=\"options\">\r\n      <button mat-raised-button color=\"primary\" id=\"export\" (click)=\"exportCode()\">\r\n        save\r\n      </button>\r\n      <button mat-raised-button id=\"run\" (click)=\"runOrResetTest()\"\r\n              [class.run-test]=\"!gameRun\" [class.test-running]=\"gameRun\">\r\n        {{gameRun ? 'reset' : 'run'}}\r\n      </button>\r\n      <button mat-raised-button id=\"upload\" *ngIf=\"javascriptMode\" (click)=\"uploadJavascript()\">\r\n        <input id=\"file\" type='file' hidden accept=\".js\" (change)=\"retrieveJavascriptCode($event)\" />\r\n        upload code\r\n      </button>\r\n      <button mat-raised-button id=\"help\" (click)=\"goToHelpPage()\">\r\n        help\r\n      </button>\r\n      <button mat-raised-button id=\"switch\" (click)=\"switchEditorMode()\">\r\n        {{javascriptMode ? 'go to blocks': 'go to js'}}\r\n      </button>\r\n    </div>\r\n    <div id=\"actual-code\" [style.height]=\"200 + (realCode.length * 15) + 'px'\" *ngIf=\"!javascriptMode\">\r\n      <p class=\"code\">// This is your block code as actual javascript code!</p>\r\n      <p class=\"code\" *ngFor=\"let line of realCode\" [style.left]=\"(line.indentationLevel * 10) + 'px'\">\r\n        {{line.code}}\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import {BlockCommand} from '../block-command';\r\n\r\nexport class RealCodeRepr{\r\n\r\n  code: string;\r\n  indentationLevel: number = 0;\r\n\r\n  // Why don't overloaded constructors exist ;-;\r\n  constructor(block: BlockCommand=null, lineOfCode: string=null) {\r\n\r\n    if(block !== null && lineOfCode !== null){\r\n      throw new Error('Illegal use of this constructor');\r\n    }else if(lineOfCode !== null){\r\n      this.code = lineOfCode;\r\n    }else{\r\n      this.code = block.getAsCode();\r\n      this.indentationLevel = block.indentationLevel;\r\n    }\r\n\r\n  }\r\n\r\n  static funcToRealCodeRepr(func: string){\r\n\r\n    let codeReprs = [];\r\n    let lines: Array<string> = func.split('@');\r\n    console.log(lines.length);\r\n    for(let line of lines){\r\n      let count = line.split('^').length - 1;\r\n      // @ts-ignore\r\n      let codeRepr = new RealCodeRepr(null, line.replaceAll('^', ''));\r\n      codeRepr.indentationLevel = count;\r\n      codeReprs.push(codeRepr);\r\n\r\n    }\r\n    return codeReprs;\r\n\r\n  }\r\n\r\n}\r\n//@ -> new line ^ -> tab (assuming we don't use @ or ^ in the actual code\r\nexport const healthBelow30PercentFunc: string = 'function healthLessThan30Percent(you){@' +\r\n  '^return ((you.health / you.maxHealth) * 100) < 30;' +\r\n  '@' +\r\n  '}';\r\n\r\nexport const enemyNearFunc: string = 'function enemyInRange(grid, you){@' +\r\n  '^for(let x = 0; x < grid.length; x++){@' +\r\n  '^^for(let y = 0; y < grid[0].length; y++){@' +\r\n  '^^^let other = grid[x][y];@' +\r\n  '^^^if(!((you.location.x === x && you.location.y === y) || other === null || you.team === other.team)){@' +\r\n  '^^^^if((x >= you.location.x - you.attackRange && x <= you.location.x + you.attackRange) &&@' +\r\n  '^^^^^(y >= you.location.y - you.attackRange && y <= you.location.y + you.attackRange)){@' +\r\n  '^^^^^^return true;@' +\r\n  '^^^^^}@' +\r\n  '^^^^}@' +\r\n  '^^^}@' +\r\n  '^^}@' +\r\n  '^return false;@' +\r\n  '}';\r\n\r\nexport const locationAvailableFunc: string = 'function locationAvailable(grid, location){@' +\r\n  '^return grid[location.x][location.y] === null && location.x >= 0 && location.x < grid.length && location.y >= 0 && location.y < grid[0].length;@'+\r\n  '}';\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Router } from '@angular/router';\r\nimport * as firebase from 'firebase/app';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthyLoginService {\r\n\r\n  private static SESSION_STORAGE_USER_ID: string = \"ScriptSAuthCred\";\r\n\r\n  //See docs for user at https://firebase.google.com/docs/reference/js/firebase.User\r\n  private static user: UserInfo = null;\r\n\r\n  constructor(public afAuth: AngularFireAuth, public router: Router) { }\r\n\r\n  public checkSigninStatus() {\r\n    if(AuthyLoginService.user == null) {\r\n      \r\n      var sessionData = sessionStorage.getItem(AuthyLoginService.SESSION_STORAGE_USER_ID);\r\n      if (sessionData != null) {\r\n\r\n        AuthyLoginService.user = JSON.parse(sessionData);\r\n        return true;\r\n\r\n      } else {\r\n        return false;\r\n      }\r\n\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  public AuthLogin(route: string) {\r\n    if (AuthyLoginService.user == null) {\r\n\r\n      //check for session\r\n      var sessionData = sessionStorage.getItem(AuthyLoginService.SESSION_STORAGE_USER_ID);\r\n      if (sessionData != null) {\r\n\r\n        AuthyLoginService.user = JSON.parse(sessionData);\r\n        this.router.navigate([route]);\r\n\r\n      } else {\r\n\r\n        this.afAuth.signInWithPopup(new firebase.default.auth.GoogleAuthProvider())\r\n          .then((userCred) => {\r\n\r\n            AuthyLoginService.user = new UserInfo();\r\n            AuthyLoginService.user.uid = userCred.user.uid;\r\n            AuthyLoginService.user.authDisplayName = userCred.user.displayName;\r\n\r\n            sessionStorage.setItem(AuthyLoginService.SESSION_STORAGE_USER_ID, JSON.stringify(AuthyLoginService.user));\r\n\r\n            this.router.navigate([route]);\r\n\r\n            console.log(\"Logged in user \" + AuthyLoginService.user.authDisplayName);\r\n\r\n          }).catch(error => {\r\n            console.log(\"Could not login due to \" + error);\r\n          });\r\n\r\n      }\r\n\r\n    } else {\r\n      this.router.navigate([route]);\r\n    }\r\n  }\r\n\r\n  public logout() {\r\n    this.afAuth.signOut().then(() => {\r\n      AuthyLoginService.user = null;\r\n      sessionStorage.removeItem(AuthyLoginService.SESSION_STORAGE_USER_ID);\r\n      console.log(\"User signout\");\r\n      this.router.navigate([\"\"]);\r\n    });\r\n  }\r\n\r\n  public getUser() {\r\n    return AuthyLoginService.user;\r\n  }\r\n\r\n}\r\n\r\nexport class UserInfo {\r\n  authDisplayName: string\r\n  uid: string\r\n}\r\n","import {Unit} from './Unit';\r\n\r\nexport class UnitReadOnly{\r\n\r\n  /**\r\n   * The Id number on the grid of the unit\r\n   */\r\n  id: number = -1;\r\n\r\n  /**\r\n   * The team that the unit belongs to\r\n   */\r\n  team: number = -1;\r\n\r\n  /**\r\n   * the location of the unit on the grid\r\n   */\r\n  location: { x: number, y: number } = { x: 0, y: 0 };\r\n  maxHealth: number = 100;\r\n  health: number = 100;\r\n  defense: number = 10;\r\n  strength: number = 20;\r\n  attackRange: number = 1;\r\n\r\n  constructor(unit: Unit) {\r\n\r\n    this.id = unit.id;\r\n    this.team = unit.team;\r\n    this.location = unit.location;\r\n    this.maxHealth = unit.maxHealth;\r\n    this.health = unit.health;\r\n    this.strength = unit.strength;\r\n    this.attackRange = unit.attackRange;\r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ViewportScroller} from '@angular/common';\r\nimport {Router} from '@angular/router';\r\nimport {AuthyLoginService} from '../../services/login/authy-login.service';\r\n\r\n@Component({\r\n  selector: 'app-code-editor-guide',\r\n  templateUrl: './code-editor-guide.component.html',\r\n  styleUrls: ['../docs/docs.component.css']\r\n})\r\nexport class CodeEditorGuideComponent implements OnInit {\r\n\r\n  constructor(private viewPortScroller: ViewportScroller, private router: Router, private auth: AuthyLoginService) { }\r\n\r\n  ngOnInit(): void {\r\n    if(!this.auth.checkSigninStatus()){\r\n      this.router.navigate(['']);\r\n    }\r\n  }\r\n\r\n  scrollToSection(sectionName){\r\n\r\n    this.viewPortScroller.scrollToAnchor(sectionName);\r\n\r\n  }\r\n\r\n  goToDocs(){\r\n    this.router.navigate(['docs']);\r\n    window.scroll(0,0 );\r\n  }\r\n\r\n}\r\n","<header id=\"main-header\">\r\n  <h1 id=\"title\">Using Our Code Editor</h1>\r\n</header>\r\n\r\n<div id=\"main-content\">\r\n  <div id=\"book-marks\">\r\n    <a (click)=\"scrollToSection('editing-your-block-code')\"><h3>Editing Your Block Code</h3></a>\r\n    <a (click)=\"scrollToSection('adding-conditional-logic-to-your-block-code')\"><h3>\r\n      Adding Conditional Logic to Your Block Code</h3></a>\r\n    <a (click)=\"scrollToSection('testing-your-block-code')\"><h3>Testing Your Block Code</h3></a>\r\n    <a (click)=\"scrollToSection('editing-the-grid')\"><h3>Editing the Grid</h3></a>\r\n    <a (click)=\"scrollToSection('using-javascript-mode')\"><h3>Using Javascript Mode</h3></a>\r\n    <a (click)=\"scrollToSection('saving-your-code-and-unit-formation')\">\r\n      <h3>Saving Your Code and Unit Formation</h3></a>\r\n  </div>\r\n  <div id=\"docs-content\">\r\n    <h1>Introduction</h1>\r\n    <p>\r\n      The Scripting Siege code editor is where you’ll be doing your coding and testing before entering the game.\r\n      Getting comfortable with it is an important first step to beginning to learn and have fun with our platform.\r\n      The editor is split into two different modes representing the two styles of coding we offer, Javascript\r\n      programming and our pseudo programming language (block code). We will go over how to use each mode to produce\r\n      functional game code and later test it within the editor.\r\n    </p>\r\n    <h1 id=\"editing-your-block-code\">Editing Your Block Code</h1>\r\n    <p>\r\n      First, let’s begin by talking about how to use our pseudo programming language, block code. By default, the editor\r\n      will be in block mode but you can press the “go to js” button to go to Javascript mode. Once you are in Javascript\r\n      mode you can go back to block mode by pressing the “go to blocks” button that should appear where the “go to js”\r\n      button was. On the left-hand side, you should see two blue blocks stacked on top of each other that say\r\n      “When turn”, and “End turn”:\r\n    </p>\r\n    <img src=\"assets/guides/code-editor-guide/imgs/default%20blocks.PNG\">\r\n    <p>\r\n      As the text on those blocks suggests, they represent the start of your code (when your unit’s turn begins) and the\r\n      end of your code (when your unit’s code ends). Below that panel, you will see another panel containing black\r\n      blocks laid out like so:\r\n    </p>\r\n    <img src=\"assets/guides/code-editor-guide/imgs/action%20blocks.PNG\">\r\n    <p>\r\n      You can drag these blocks between the “When turn” and “End turn” blocks above to start giving your unit\r\n      instructions. Note in each turn your unit is limited to performing a single action at a time. You must ensure that\r\n      in your code your unit will only perform at most one action by the end of the turn. As the names of the tabs\r\n      suggest, any block under the “Action” tab is considered an action for your unit to execute. Once you’ve dragged\r\n      a block onto your code, you will notice a trash can icon on it. Clicking it will remove the block from your code\r\n      if you’ve ever made a mistake. You will notice after placing your block the Javascript console on the lower right\r\n      updates. This console shows you how your code would look like as actual Javascript code. This will be very useful\r\n      to help you learn a little more about Javascript along the way and give you an idea of how to code units with real\r\n      Javascript code. Also, note that you can click the numbered tabs above to work on multiple block code snippets at\r\n      once.\r\n    </p>\r\n    <h1 id=\"adding-conditional-logic-to-your-block-code\">Adding Conditional Logic to Your Block Code</h1>\r\n    <p>\r\n      You will notice in the lower panel with the unplaced blocks there’s a tab titled “Conditional”. These contain\r\n      special blocks that allow you to create conditional logic (if this then do that, otherwise do this). When you\r\n      place an if block you will notice it will render like this:\r\n    </p>\r\n    <img src=\"assets/guides/code-editor-guide/imgs/If.PNG\">\r\n    <p>\r\n      From here, you can select the condition to check for during that turn, negate that condition (check that the\r\n      condition is not true), or add more conditions with AND and OR logic. If you place a block below the if condition,\r\n      you will notice that it is indented further right than the if block like so:\r\n    </p>\r\n    <img src=\"assets/guides/code-editor-guide/imgs/If%20in%20range%20attack.PNG\">\r\n    <p>\r\n      This means that the block below the if block will be executed only if the condition in the if block is met. Once\r\n      you’re done adding code your unit will execute under the condition, you need to close the “if” statement. In other\r\n      words, you need to tell our block code interpreter that you’re done adding code it will use if the condition is\r\n      met. To do so you need to add either an “end if” block, an “else if” block, or an “else” block. The “else if”\r\n      block is for if you want to add another condition to check if the first condition was not met. Then like the if\r\n      block you can add code under that condition for if that condition is met. To close the “else if” statement, you\r\n      would add either another “else if” block to check for more conditions, an “end else if” block, or an “else” block.\r\n      An “else” block is a block that can close an “if” statement or an “else if” statement. It’s used when you want to\r\n      add code to be executed if none of the “if” or “else if” conditions in your conditional logic are met. Otherwise,\r\n      if you don’t need “else” logic, you can add an “end else if” block to close your “else if” statement. Similarly,\r\n      if you want to close an “if” statement without an “else if” block or an “else” block, you would use an “end if”\r\n      block.\r\n    </p>\r\n    <h1 id=\"testing-your-block-code\">Testing Your Block Code</h1>\r\n    <p>\r\n      Once you’re satisfied with the code you’ve written and want to try it out, right-click your block code. This will\r\n      first verify that your code is made properly. If there is an error in your code, you will be prompted to fix it\r\n      with a hint as to where the mistake occurred. Once your code has been verified, you can click a unit on the grid\r\n      to assign the code to. Note you can only assign code to units that are facing right. Once you added your code a\r\n      number will appear on the tile the unit is on indicating the tab which contains its code. Then simply click on the\r\n      run button to test out your code.\r\n    </p>\r\n    <h1 id=\"editing-the-grid\">Editing the Grid</h1>\r\n    <p>\r\n      Our code editor also provides the option to add units to the grid and move them. To move your unit across the grid\r\n      simply drag it to move it to where you want it to be. To add units on the grid, right-click the tile you want to\r\n      add a unit on and you will see an option to units or delete units. Note you are limited to 6 of your own units on\r\n      the grid at a time.\r\n    </p>\r\n    <h1 id=\"using-javascript-mode\">Using Javascript Mode</h1>\r\n    <p>\r\n      If you feel comfortable coding your units in Javascript, then you can try using the Javascript mode of our code\r\n      editor! To re-iterate, you can switch to Javascript mode by clicking the “go to js” button in the editor. Once\r\n      there, your code tabs will turn into Javascript consoles. As of right now, you cannot type code into those\r\n      consoles nor do we have plans to allow that. Instead, you can code Javascript code in the code environment of your\r\n      choice and upload the code file. When you upload your code it will appear in the console of the currently opened\r\n      tab. Like the block code editor, you right-click the console to select it and then click the unit to assign it to.\r\n      Note: that we do not currently verify the Javascript code for usability in the game. There’s no guarantee that\r\n      your code will even work properly in the game if you made a mistake in it. To find out how to code for your units\r\n      in Javascript refer to the <a class=\"link\" (click)=\"goToDocs()\">documentation</a>.\r\n    </p>\r\n    <h1 id=\"saving-your-code-and-unit-formation\">Saving Your Code and Unit Formation</h1>\r\n    <p>\r\n      Once you’re satisfied with all the code you’ve written and the placement of your units, you can save the code and\r\n      formation using the save button. This will prompt you to give a name to refer to your work. Once you’ve saved your\r\n      code and formation, you can bring it to the game.\r\n    </p>\r\n    <h1>Conclusion</h1>\r\n    <p>\r\n      Now that you have hopefully learned how to use our code editor, you can start having fun and learn Javascript\r\n      using our platform. Don’t be discouraged if you’re code doesn’t work the way you want it to the first time, the\r\n      goal here is for you to learn. Over time, you’ll get figure out what strategies work and start understanding\r\n      programming concepts along the way. Even once you’ve learned the basics there’s a lot of potential for you to\r\n      practice more with our platform and create a more complex strategy. Happy coding!\r\n    </p>\r\n  </div>\r\n\r\n\r\n</div>\r\n","import {Predicate} from '../../block-command';\r\nimport {GridParserService} from '../../../../services/game/grid-parser.service';\r\n\r\nexport class NorthAvailable implements Predicate{\r\n\r\n  static id: string = btoa(NorthAvailable.name);\r\n  static label: string = 'North Available';\r\n  static asCode: string = 'locationAvailable(grid, {x: me.location.x, y: me.location.y - 1})';\r\n  conjunction: string = '';\r\n  indentationLevel: number;\r\n  negate: boolean = false;\r\n\r\n  evaluation(grid, unit): boolean {\r\n    let north = {x: unit.location.x, y: unit.location.y - 1};\r\n    return GridParserService.isInBounds(north, grid)\r\n      && !GridParserService.isUnitOccupied(north, grid);\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return NorthAvailable.asCode;\r\n  }\r\n\r\n  getId(): string {\r\n    return NorthAvailable.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return NorthAvailable.label;\r\n  }\r\n\r\n\r\n}\r\n","import {ConditionalBlock, Predicate, TerminalBlock} from '../../block-command';\r\nimport { EndElse } from '../terminal/EndElse';\r\nimport {EmptyPredicate} from '../predicate/EmptyPredicate';\r\n\r\n/**\r\n * ConditionalBlock representing an Else statement\r\n * See block-command.ts for specific documentation\r\n * on properties and methods\r\n */\r\nexport class Else implements ConditionalBlock, TerminalBlock {\r\n\r\n  static id: string = btoa(Else.name);\r\n  static label: string = 'Else';\r\n  static asCode: string = '} else {';\r\n\r\n  conditions: Array<Predicate> = [new EmptyPredicate()];\r\n  terminal_blocks: Array<string> = [EndElse.label];\r\n  indentationLevel: number;\r\n  terminate: number = null;\r\n  condition: Predicate = new EmptyPredicate();\r\n\r\n  getId(): string {\r\n    return Else.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return Else.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return Else.asCode;\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport {AuthyLoginService} from './services/login/authy-login.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'googlesolutions';\r\n\r\n\r\n  constructor(public auth: AuthyLoginService) {}\r\n}\r\n","<app-pageheader [loggedIn]=\"auth.checkSigninStatus()\"\r\n                [username]=\"auth.getUser() !== null ? auth.getUser().authDisplayName : ''\"></app-pageheader>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component } from '@angular/core';\r\nimport { AuthyLoginService } from 'src/app/services/login/authy-login.service';\r\n\r\n@Component({\r\n  selector: 'app-signin-page',\r\n  templateUrl: './signin-page.component.html',\r\n  styleUrls: ['./signin-page.component.css']\r\n})\r\nexport class SigninPageComponent {\r\n\r\n  //Page Path to go to after log in successful\r\n  routeToAfterLogin: string = \"/profile\";\r\n\r\n  constructor(private authyService: AuthyLoginService) { \r\n    if(this.authyService.checkSigninStatus()) {\r\n      this.authyService.router.navigate([this.routeToAfterLogin]);\r\n    }\r\n  }\r\n\r\n  loginUser() {\r\n    this.authyService.AuthLogin(this.routeToAfterLogin);\r\n  }\r\n}\r\n","<div id=\"background\">\r\n\r\n    <div id=\"centerElement\">\r\n        <h1>Start Learning today with Scripting Siege</h1>\r\n\r\n        <hr>\r\n\r\n        <input id=\"buttonSign\" type=\"image\" (click)=\"loginUser()\"\r\n            src=\"assets/google/auth/btn_google_signin_light_normal_web@2x.png\">\r\n    </div>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-set-name',\r\n  templateUrl: './set-name.component.html',\r\n  styleUrls: ['./set-name.component.css']\r\n})\r\nexport class SetNameComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<SetNameComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  cancel(){\r\n\r\n    this.data.cancelled = true;\r\n    this.dialogRef.close();\r\n\r\n  }\r\n\r\n  enter(){\r\n\r\n    if(this.data.name !== ''){\r\n      this.dialogRef.close();\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<mat-icon id=\"cancel\" (click)=\"cancel()\">close</mat-icon>\r\n\r\n<h3>Enter a name to save this formation and code under:</h3>\r\n<mat-form-field appearance=\"fill\" id=\"field\" (keydown.enter)=\"enter()\">\r\n  <mat-label>Input</mat-label>\r\n  <input matInput [(ngModel)]=\"data.name\">\r\n</mat-form-field>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { QueryDocumentSnapshot } from '@angular/fire/firestore';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { LevelData, ProgramData } from 'src/app/models/database/DatabaseData';\r\nimport { FirestoreDatabaseService } from 'src/app/services/database/firestore-database.service';\r\nimport { AuthyLoginService } from 'src/app/services/login/authy-login.service';\r\nimport { ProgSelectDialogComponent } from '../prog-select-dialog/prog-select-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-levelselect',\r\n  templateUrl: './levelselect.component.html',\r\n  styleUrls: ['./levelselect.component.css'],\r\n  host: {\r\n    class: 'fullpage'\r\n  }\r\n})\r\nexport class LevelselectComponent {\r\n\r\n  levelSelect: boolean = true;\r\n  loadingData: boolean = true;\r\n  noData: boolean = false;\r\n  ownedProgs: {id: string, prog:ProgramData}[] = [];\r\n\r\n  ldata: { id: string, completed: boolean, dbid: string }[] = [];\r\n\r\n  constructor(private router: Router, private db: FirestoreDatabaseService, private auth: AuthyLoginService, private dialog: MatDialog) {\r\n\r\n    if (!auth.checkSigninStatus()) {\r\n      router.navigate(['signin']);\r\n    }\r\n\r\n    var self = this;\r\n\r\n    if (router.url === '/tutorials') {\r\n      this.levelSelect = false;\r\n    } else {\r\n      this.levelSelect = true;\r\n    }\r\n\r\n    db.getAllLevels(function (result) {\r\n      for (let doc of result.docs) {\r\n        if (router.url === '/tutorials') {\r\n          if (doc.exists && doc.id.length > 2 && doc.id.indexOf(\"99\") == 0) {\r\n            self.ldata.push({ id: \"Tutorial: \" + doc.id.substring(2, doc.id.length), completed: false, dbid: doc.id });\r\n          }\r\n        } else {\r\n          if (doc.exists && doc.id.indexOf(\"99\") != 0) {\r\n            self.ldata.push({ id: \"Level: \" + doc.id, completed: false, dbid: doc.id });\r\n          }\r\n        }\r\n      }\r\n\r\n      db.getUserData(auth.getUser().uid, function (result) {\r\n\r\n        if (result == null) {\r\n          router.navigate(['profile']);\r\n        }\r\n\r\n        for (let l of result.CompletedLevels) {\r\n          for (let d of self.ldata) {\r\n            console.log(\"checking \" + d.id);\r\n            if (self.levelSelect) {\r\n              if (d.id.substring(7, d.id.length) == l) {\r\n                d.completed = true;\r\n              }\r\n            } else {\r\n              if ((\"99\" + d.id.substring(10, d.id.length)) == l) {\r\n                d.completed = true;\r\n              }\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n        for (let p of result.Programs) {\r\n          self.db.getProgramData(p.toString(), function(result) {\r\n            self.ownedProgs.push({id: p.toString(), prog: result});\r\n          });\r\n        }\r\n\r\n        self.loadingData = false;\r\n        if (self.ldata.length <= 0) {\r\n          self.noData = true;\r\n        }\r\n      });\r\n\r\n\r\n    });\r\n  }\r\n\r\n  goToLevel(i: string) {\r\n    //open dialog for program select\r\n    const dialogRef = this.dialog.open(ProgSelectDialogComponent, {data: this.ownedProgs, panelClass: 'defaultDialog'});\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != undefined) {\r\n        //had returned a value\r\n        this.router.navigate([\"play\"], {\r\n          queryParams: {\r\n            l: i,\r\n            p: result\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div id=\"backgroundComponent\">\r\n    <div id=\"containerElement\">\r\n\r\n        <h1 *ngIf=\"levelSelect\">Level Select</h1>\r\n        <h1 *ngIf=\"!levelSelect\">Tutorial Select</h1>\r\n\r\n        <div *ngIf=\"loadingData\" id=\"LoadingDiv\">\r\n            <h1>Loading Level Data</h1>\r\n            <mat-spinner></mat-spinner>\r\n        </div>\r\n        <div *ngIf=\"!loadingData && noData\">\r\n            <h1>We encountered a problem, please try again</h1>\r\n        </div>\r\n        <div *ngIf=\"!loadingData && !noData\" class=\"colparent\">\r\n            <div *ngFor=\"let d of ldata; let i = index\" class=\"levelObject\">\r\n                <img src=\"assets/maps/test map.png\" alt=\"Image not found\" [ngClass]=\"{'highlightElement': d.completed}\">\r\n                <button mat-button (click)=\"goToLevel(d.dbid)\">{{d.id}}</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n","export class SpriteConstants{\r\n\r\n  static archer: string = 'Archer';\r\n  static swordsmen: string = 'Swordsman';\r\n  static testMap: string = 'testMap';\r\n  static tower: string = 'Tower';\r\n  static spriteSize: number = 40;\r\n\r\n}\r\n","import { GameAction } from 'src/app/models/game/GameAction';\r\nimport { Executable } from '../../block-command';\r\nimport {Wait} from './Wait';\r\nimport {GridParserService} from '../../../../services/game/grid-parser.service';\r\n\r\n/**\r\n * Executable representing a backward movement\r\n * See block-command.ts for specific documentation\r\n * on properties and methods\r\n */\r\nexport class West implements Executable {\r\n\r\n  static label: string = 'Go west';\r\n  static id: string = btoa(West.name);\r\n  static asCode = 'this.postMessage({result: \\'West\\'});';\r\n  indentationLevel: number;\r\n\r\n  constructor() {}\r\n\r\n  execute(grid, unit): GameAction {\r\n    let newLocation = {x:unit.location.x - 1, y:unit.location.y};\r\n    if(GridParserService.isInBounds(newLocation, grid) && !GridParserService.isUnitOccupied(newLocation, grid)){\r\n\r\n      grid[unit.location.x][unit.location.y] = null;\r\n      unit.location = newLocation;\r\n      unit.doWalkAnimation();\r\n      return new GameAction(West.name, unit, null, false);\r\n\r\n    }else{\r\n\r\n      return new GameAction(Wait.name, unit, null, false);\r\n\r\n    }\r\n  }\r\n\r\n  getId(): string {\r\n    return West.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return West.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return West.asCode;\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTableModule } from '@angular/material/table';\r\n\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { AngularFireStorageModule } from '@angular/fire/storage';\r\n\r\nimport { BlockCodeComponent } from './components/block-code/block-code.component';\r\nimport { ErrorComponent } from './components/error/error.component';\r\nimport { SigninPageComponent } from './components/signin-page/signin-page.component';\r\nimport { TestComponent } from './components/test/test.component';\r\nimport { LevelComponent } from './components/level/level.component';\r\nimport { PageheaderComponent } from './components/pageheader/pageheader.component';\r\nimport { ProfilepagesComponent } from './components/profilepages/profilepages.component';\r\nimport {MatInputModule} from '@angular/material/input';\r\n//import { NewUserPageComponent } from './components/new-user-page/new-user-page.component';\r\nimport { DocsComponent } from './components/docs/docs.component';\r\nimport { LevelselectComponent } from './components/levelselect/levelselect.component';\r\nimport { SetNameComponent } from './components/set-name/set-name.component';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport { LevelplayComponent } from './components/levelplay/levelplay.component';\r\nimport { InfoComponent } from './components/info/info.component';\r\nimport { ProgSelectDialogComponent } from './components/prog-select-dialog/prog-select-dialog.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { JavascriptGuideComponent } from './components/javascript-guide/javascript-guide.component';\r\nimport { CodeEditorGuideComponent } from './components/code-editor-guide/code-editor-guide.component';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB25gxYu7PkMvnjKhisCzPP62grU_OEMLU\",\r\n  authDomain: \"solutions2021-efce9.firebaseapp.com\",\r\n  projectId: \"solutions2021-efce9\",\r\n  storageBucket: \"solutions2021-efce9.appspot.com\",\r\n  messagingSenderId: \"1033043841752\",\r\n  appId: \"1:1033043841752:web:d1f78f6778f22f4d423dad\"\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BlockCodeComponent,\r\n    ErrorComponent,\r\n    SigninPageComponent,\r\n    TestComponent,\r\n    LevelComponent,\r\n    PageheaderComponent,\r\n    ProfilepagesComponent,\r\n    DocsComponent,\r\n    LevelselectComponent,\r\n    SetNameComponent,\r\n    LevelplayComponent,\r\n    InfoComponent,\r\n    ProgSelectDialogComponent,\r\n    HomeComponent,\r\n    JavascriptGuideComponent,\r\n    CodeEditorGuideComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n\r\n    //firebase\r\n    AngularFireModule.initializeApp(firebaseConfig),\r\n    AngularFirestoreModule,\r\n    AngularFireAuthModule,\r\n    AngularFireStorageModule,\r\n\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    DragDropModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MatDialogModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    FormsModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatMenuModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Unit} from './Unit';\r\n\r\nexport class Archer extends Unit{\r\n\r\n  static dbid: string = btoa(Archer.name);\r\n  id = -1;\r\n  maxHealth: number = 100;\r\n  health: number = 100;\r\n  defense: number = 5;\r\n  strength: number = 15;\r\n  attackRange: number = 4;\r\n  walk_frames: Array<number> = [12, 19];\r\n  attack_frames: Array<number> = [24, 35];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Else } from 'src/app/models/blockCommands/blocks/conditional/Else';\r\nimport { ElseIf } from 'src/app/models/blockCommands/blocks/conditional/ElseIf';\r\nimport { If } from 'src/app/models/blockCommands/blocks/conditional/If';\r\nimport { TextAction1 } from 'src/app/models/blockCommands/blocks/executable/TestAction1';\r\nimport { TextAction2 } from 'src/app/models/blockCommands/blocks/executable/TestAction2';\r\nimport { FalsePredicate } from 'src/app/models/blockCommands/blocks/predicate/FalsePredicate';\r\nimport { TruePredicate } from 'src/app/models/blockCommands/blocks/predicate/TruePredicate';\r\nimport { EndElse } from 'src/app/models/blockCommands/blocks/terminal/EndElse';\r\nimport { EndIf } from 'src/app/models/blockCommands/blocks/terminal/Endif';\r\nimport { CodeType } from 'src/app/models/database/DatabaseData';\r\nimport { GameAction } from 'src/app/models/game/GameAction';\r\nimport { Archer } from 'src/app/models/game/units/Archer';\r\nimport { Swordsman } from 'src/app/models/game/units/Swordsman';\r\nimport { Tower } from 'src/app/models/game/units/Tower';\r\nimport { Unit } from 'src/app/models/game/units/Unit';\r\nimport { FirestoreDatabaseService } from 'src/app/services/database/firestore-database.service';\r\nimport { GameLoopServiceService } from 'src/app/services/game/gameloop/game-loop.service';\r\nimport { CodeService } from 'src/app/services/program-construction/code.service';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.css']\r\n})\r\nexport class TestComponent {\r\n\r\n  public map: Unit[][];\r\n  public lastAction: GameAction;\r\n  public loading: string = \"loading\";\r\n\r\n  constructor(private db: FirestoreDatabaseService, private cds: CodeService, private loopservice: GameLoopServiceService) {\r\n    // db.getProgramData(\"1\", function(data) {\r\n    //   console.log(data.Units[0].TroopType);\r\n    // });\r\n    //\r\n    // var state = new If();\r\n    // state.condition = new FalsePredicate();\r\n\r\n    // var state2 = new ElseIf();\r\n    // state2.condition = new FalsePredicate();\r\n\r\n    // var cb = cds.serializeBlocks([state, new TextAction1(), state2, new TextAction1(), state2, new TextAction1(), new Else(), new TextAction2(), new EndElse()]);\r\n\r\n    // db.setProgramData(\"2\", {Name: \"Hello\", Verified: true,\r\n    //     Units: [{TroopType:1, CodeBlocks: cb, location: {x:1,y:1}, CodeType: CodeType.BLOCK,\r\n    //           CodeFile: null}]});\r\n    //\r\n    // db.setProgramData(\"993\", {Name: \"Level3\", Verified: true,\r\n    //   Units: [\r\n    //             // {\r\n    //             //   TroopType:Archer.dbid, \r\n    //             //   CodeBlocks: null, \r\n    //             //   location: {x:14,y:7}, \r\n    //             //   CodeType: CodeType.FILE, \r\n    //             //   CodeFile: {storageRef: \"code/EnemyArcher.js\", filename: \"EnemyArcher.js\"} \r\n    //             // },\r\n    //             // {\r\n    //             //   TroopType:Archer.dbid, \r\n    //             //   CodeBlocks: null, \r\n    //             //   location: {x:14,y:10}, \r\n    //             //   CodeType: CodeType.FILE, \r\n    //             //   CodeFile: {storageRef: \"code/EnemyArcher.js\", filename: \"EnemyArcher.js\"} \r\n    //             // },\r\n    //             // {\r\n    //             //   TroopType:Archer.dbid, \r\n    //             //   CodeBlocks: null, \r\n    //             //   location: {x:14,y:11}, \r\n    //             //   CodeType: CodeType.FILE, \r\n    //             //   CodeFile: {storageRef: \"code/EnemyArcher.js\", filename: \"EnemyArcher.js\"} \r\n    //             // },\r\n    // db.setProgramData(\"993\", {Name: \"TestSetup\", Verified: true,\r\n    //   Units: [\r\n    //             {\r\n    //               TroopType:Swordsman.dbid, \r\n    //               CodeBlocks: null, \r\n    //               location: {x:11,y:7}, \r\n    //               CodeType: CodeType.FILE, \r\n    //               CodeFile: {storageRef: \"code/EnemySwordsmen.js\", filename: \"EnemySwordsmen.js\"} \r\n    //             },\r\n    //             {\r\n    //               TroopType:Swordsman.dbid, \r\n    //               CodeBlocks: null, \r\n    //               location: {x:12,y:8}, \r\n    //               CodeType: CodeType.FILE, \r\n    //               CodeFile: {storageRef: \"code/EnemySwordsmen.js\", filename: \"EnemySwordsmen.js\"} \r\n    //             },\r\n    //             {\r\n    //               TroopType:Swordsman.dbid, \r\n    //               CodeBlocks: null, \r\n    //               location: {x:12,y:6}, \r\n    //               CodeType: CodeType.FILE, \r\n    //               CodeFile: {storageRef: \"code/EnemySwordsmen.js\", filename: \"EnemySwordsmen.js\"} \r\n    //             },\r\n    //             {\r\n    //               TroopType:Swordsman.dbid, \r\n    //               CodeBlocks: null, \r\n    //               location: {x:13,y:5}, \r\n    //               CodeType: CodeType.FILE, \r\n    //               CodeFile: {storageRef: \"code/EnemySwordsmen.js\", filename: \"EnemySwordsmen.js\"} \r\n    //             },\r\n    //             {\r\n    //               TroopType:Swordsman.dbid, \r\n    //               CodeBlocks: null, \r\n    //               location: {x:13,y:7}, \r\n    //               CodeType: CodeType.FILE, \r\n    //               CodeFile: {storageRef: \"code/EnemySwordsmen.js\", filename: \"EnemySwordsmen.js\"} \r\n    //             },\r\n    //             {\r\n    //               TroopType:Swordsman.dbid, \r\n    //               CodeBlocks: null, \r\n    //               location: {x:13,y:9}, \r\n    //               CodeType: CodeType.FILE, \r\n    //               CodeFile: {storageRef: \"code/EnemySwordsmen.js\", filename: \"EnemySwordsmen.js\"} \r\n    //             },\r\n    //             {\r\n    //               TroopType:Tower.dbid, \r\n    //               CodeBlocks: null, \r\n    //               location: {x:14,y:4}, \r\n    //               CodeType: CodeType.FILE, \r\n    //               CodeFile: {storageRef: \"code/EnemyTower.js\", filename: \"EnemyTower.js\"} \r\n    //             },\r\n    //             {\r\n    //               TroopType:Tower.dbid, \r\n    //               CodeBlocks: null, \r\n    //               location: {x:14,y:7}, \r\n    //               CodeType: CodeType.FILE, \r\n    //               CodeFile: {storageRef: \"code/EnemyTower.js\", filename: \"EnemyTower.js\"} \r\n    //             },\r\n    //             {\r\n    //               TroopType:Tower.dbid, \r\n    //               CodeBlocks: null, \r\n    //               location: {x:14,y:10}, \r\n    //               CodeType: CodeType.FILE, \r\n    //               CodeFile: {storageRef: \"code/EnemyTower.js\", filename: \"EnemyTower.js\"} \r\n    //             },\r\n    //           ]}\r\n    // );\r\n\r\n    // var self = this;\r\n\r\n    // db.getProgramData(\"1\", function (data) {\r\n    //   //run the game\r\n    //   loopservice.loadTestData(data).then(result => {\r\n    //     if (loopservice.prepLoop()) {\r\n    //       self.map = self.loopservice.grid;\r\n    //       this.loading = \"done\";\r\n    //     }\r\n    //   });\r\n    // });\r\n\r\n\r\n  }\r\n\r\n  stepGameButton() {\r\n    this.loading = \"loading\";\r\n    var prom = this.loopservice.stepGame();\r\n\r\n    prom.then(result => {\r\n      this.lastAction = result as GameAction;\r\n      this.loading = \"done\";\r\n    });\r\n\r\n    prom.catch(result => {\r\n      this.loading = \"error last action!\";\r\n    });\r\n  }\r\n\r\n}\r\n","<style>\r\n    td {\r\n      border-style: solid;\r\n      border-width: 3px;\r\n      min-width: 50px;\r\n      min-height: 50px;\r\n    }\r\n    tr{\r\n      min-height: 50px;\r\n      height: 25px;\r\n    }\r\n  </style>\r\n  <table class=\"table\" *ngIf=\"map\">\r\n    <tr *ngFor=\"let row of map; let i = index\">\r\n      <td *ngFor=\"let col of row\">\r\n        <p *ngIf=\"col\">Id: {{col.id}} Team: {{col.team}}</p>\r\n      </td>\r\n    </tr>\r\n  <table>\r\n  <p *ngIf=\"lastAction\">Last Action: {{lastAction.actionId}}</p>\r\n  <p *ngIf=\"!lastAction\">Last Action: None</p>\r\n  <button (click)=\"stepGameButton()\">Step Game</button>\r\n  <p>{{loading}}</p>","import { TerminalBlock } from '../../block-command';\r\n\r\n/**\r\n * TerminalBlock representing the end of an If block\r\n * See block-command.ts for specific documentation \r\n * on properties and methods\r\n */\r\nexport class EndIf implements TerminalBlock {\r\n\r\n  static label: string = 'End if';\r\n  static id: string = btoa(EndIf.name);\r\n  terminate: number = null;\r\n  indentationLevel: number;\r\n\r\n  getId(): string {\r\n    return EndIf.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return EndIf.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return '}';\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ProgramData, UserData } from 'src/app/models/database/DatabaseData';\r\nimport { FirestoreDatabaseService } from 'src/app/services/database/firestore-database.service';\r\nimport { AuthyLoginService } from 'src/app/services/login/authy-login.service';\r\n\r\n@Component({\r\n  selector: 'app-profilepages',\r\n  templateUrl: './profilepages.component.html',\r\n  styleUrls: ['./profilepages.component.css']\r\n})\r\nexport class ProfilepagesComponent {\r\n\r\n  username: string = \"User\";\r\n  levelStatus: string = \"Level: 9000+\";\r\n  profileDescription: string = \"I am a user\";\r\n  codes: ProgramData[] = [];\r\n  selected: number = -1;\r\n\r\n  constructor(private Auth: AuthyLoginService, private router: Router, private db: FirestoreDatabaseService) { \r\n\r\n    var self = this;\r\n\r\n    if(!Auth.checkSigninStatus()) {\r\n      router.navigate(['/signin']);\r\n    } else {\r\n      db.getUserData(Auth.getUser().uid, function(result) {\r\n        var usd: UserData;\r\n        if(result == null) {\r\n          usd = new UserData();\r\n          usd.CompletedLevels = []\r\n          usd.Description = \"I am a user\";\r\n          usd.Level = 1;\r\n          usd.Programs = []\r\n          usd.Username = Auth.getUser().authDisplayName;\r\n          self.db.setUserData(Auth.getUser().uid, usd).catch((reason) => {\r\n            console.log(\"database write failed due to \" + reason);\r\n          });\r\n        } else {\r\n          usd = result;\r\n        }\r\n        self.username = usd.Username;\r\n        self.levelStatus = \"Level: \" + usd.Level.toString();\r\n        self.profileDescription = usd.Description;\r\n\r\n        for(var x = 0; x < usd.Programs.length; x++) {\r\n          db.getProgramData(usd.Programs[x].toString(), function(result) {\r\n            self.codes.push(result);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  changeSelected(x) {\r\n    this.selected = x;\r\n  }\r\n\r\n}\r\n","<div id=\"backgrounddiv\">\r\n    <!--Top Profile description-->\r\n    <section class=\"row\">\r\n        <!--Left Description-->\r\n        <section class=\"SideCol\">\r\n            <h1>{{username}}</h1>\r\n            <h2>{{levelStatus}}</h2>\r\n            <div id=\"DescriptionBox\">{{profileDescription}}</div>\r\n        </section>\r\n        <section class=\"SideCol\">\r\n            <img src=\"./assets/stockimages/pexels-mood-valley-4399983.jpg\" alt=\"avatar\" class=\"avatar\">\r\n        </section>\r\n    </section>\r\n\r\n    <!--Programs area-->\r\n    <section class=\"verticalRow\">\r\n        <section class=\"verticalRowElement\">\r\n            <h1 id=\"ProgramLabel\">Programs</h1>\r\n            <div id=\"CodeArea\">\r\n                <div id=\"CodeSelection\">\r\n                    <ul *ngIf=\"codes.length > 0\">\r\n                        <li mat-button *ngFor=\"let c of codes; let i = index \" class=\"ProgramButton\" (click)=\"changeSelected(i)\">{{c.Name}}</li>\r\n                    </ul>\r\n                    <div *ngIf=\"codes.length == 0\"><li mat-button class=\"ProgramButton\">No Programs Avaliable</li></div>\r\n                </div>\r\n                <!-- <section id=\"RightArea\">\r\n                    <h3><span *ngIf=\"selected < 0\">No Program Selected</span><span *ngIf=\"selected >= 0\">{{codes[selected].Name}}</span></h3>\r\n                    <div id=\"DisplayArea\">\r\n                    </div>\r\n                </section> -->\r\n            </div>\r\n        </section>\r\n    </section>\r\n</div>\r\n","import { Predicate } from '../../block-command';\r\n\r\n/**\r\n * Predicate representing No condition in the conditional\r\n * See block-command.ts for specific documentation\r\n * on properties and methods\r\n */\r\nexport class EmptyPredicate implements Predicate {\r\n\r\n  static id: string = btoa(EmptyPredicate.name);\r\n  static label: string = 'No Condition Selected';\r\n  indentationLevel: number;\r\n  conjunction: string = '';\r\n  negate: boolean = false;\r\n\r\n\r\n  evaluation(grid, unit): boolean {\r\n    return false;\r\n  }\r\n\r\n  getId(): string {\r\n    return EmptyPredicate.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return EmptyPredicate.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return '';\r\n  }\r\n}\r\n","import { GameAction } from 'src/app/models/game/GameAction';\r\nimport { Executable } from '../../block-command';\r\nimport {Unit} from '../../../game/units/Unit';\r\nimport {Wait} from './Wait';\r\n\r\n/**\r\n * Executable representing an attack\r\n * See block-command.ts for specific documentation\r\n * on properties and methods\r\n */\r\nexport class Attack implements Executable {\r\n\r\n  static label: string = 'Attack';\r\n  static id: string = btoa(Attack.name);\r\n  static asCode = 'this.postMessage({result: \\'Attack\\'});';\r\n  indentationLevel: number;\r\n\r\n  execute(grid: Array<Array<Unit>>, unit: Unit): GameAction {\r\n    // for(let x = 0; x < grid.length; x++){\r\n    //   for(let y = 0; y < grid[0].length; y++){\r\n    //     let other = grid[x][y];\r\n    //     if(!((unit.location.x === x && unit.location.y === y) || other === null || other.team === unit.team)){\r\n    //       if((x >= unit.location.x - unit.attackRange && x <= unit.location.x + unit.attackRange) &&\r\n    //         (y >= unit.location.y - unit.attackRange && y <= unit.location.x + unit.attackRange)){\r\n    //         let died = false;\r\n    //         let damage = unit.strength - other.defense;\r\n    //         other.health = damage > 0 ? other.health - damage : other.health;\r\n    //         if(other.health <= 0){\r\n    //           died = true;\r\n    //         }\r\n    //         console.log(other.health);\r\n    //         unit.doAttackAnimation();\r\n    //         return new GameAction(Attack.name, unit, other, died);\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // }\r\n    var closestUnit: Unit = this.getClosestEnemy(grid, unit);\r\n\r\n    if (closestUnit != null) {\r\n      if ((closestUnit.location.x >= unit.location.x - unit.attackRange && closestUnit.location.x <= unit.location.x + unit.attackRange) &&\r\n        (closestUnit.location.y >= unit.location.y - unit.attackRange && closestUnit.location.y <= unit.location.y + unit.attackRange)) {\r\n\r\n        //they are in range\r\n        let died = false;\r\n        let damage = unit.strength - closestUnit.defense;\r\n        closestUnit.health = damage > 0 ? closestUnit.health - damage : closestUnit.health;\r\n        if (closestUnit.health <= 0) {\r\n          died = true;\r\n        }\r\n        console.log(closestUnit.health);\r\n        unit.doAttackAnimation();\r\n        return new GameAction(Attack.name, unit, closestUnit, died);\r\n      }\r\n    }\r\n    return new GameAction(Wait.name, unit, null, false);\r\n  }\r\n\r\n  getId(): string {\r\n    return Attack.id;\r\n  }\r\n\r\n  getLabel() {\r\n    return Attack.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return Attack.asCode;\r\n  }\r\n\r\n  //finds closest enemy of another team\r\n  private getClosestEnemy(grid: Array<Array<Unit>>, unit: Unit): Unit {\r\n\r\n    var closest = null;\r\n    var closestDist = 1000;\r\n\r\n    for(let x = 0; x < grid.length; x++){\r\n      for(let y = 0; y < grid[0].length; y++){\r\n        let other = grid[x][y];\r\n        if(!((unit.location.x === x && unit.location.y === y) || other === null || other.team === unit.team)){\r\n\r\n          var distance = Math.floor(Math.sqrt(Math.pow(unit.location.x - x, 2) + Math.pow(unit.location.y - y, 2)));\r\n\r\n          if (distance < closestDist) {\r\n            closest = other;\r\n            closestDist = distance;\r\n          }\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    return closest;\r\n  }\r\n\r\n}\r\n\r\n","import { GameAction } from 'src/app/models/game/GameAction';\r\nimport { Executable } from '../../block-command';\r\n\r\n/**\r\n * Executable for testing\r\n * See block-command.ts for specific documentation \r\n * on properties and methods\r\n */\r\nexport class TextAction1 implements Executable {\r\n\r\n  static label: string = 'Action1';\r\n  static id: string = btoa(TextAction1.name);\r\n  static asCode = 'textAction1();';\r\n  indentationLevel: number;\r\n\r\n  execute(grid, unit): GameAction {\r\n    return new GameAction(unit.id + \" Action1\", unit, null, false);\r\n  }\r\n\r\n  getId(): string {\r\n    return TextAction1.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return TextAction1.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return TextAction1.asCode;\r\n  }\r\n\r\n}\r\n","import {Predicate} from '../../block-command';\r\nimport {GridParserService} from '../../../../services/game/grid-parser.service';\r\n\r\nexport class SouthAvailable implements Predicate{\r\n\r\n  static id: string = btoa(SouthAvailable.name);\r\n  static label: string = 'South Available';\r\n  static asCode: string = 'locationAvailable(grid, {x: me.location.x, y: me.location.y + 1})';\r\n  conjunction: string;\r\n  indentationLevel: number;\r\n  negate: boolean;\r\n\r\n  evaluation(grid, unit): boolean {\r\n    let south = {x: unit.location.x, y: unit.location.y + 1};\r\n    return GridParserService.isInBounds(south, grid)\r\n      && !GridParserService.isUnitOccupied(south, grid);\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return SouthAvailable.asCode;\r\n  }\r\n\r\n  getId(): string {\r\n    return SouthAvailable.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return SouthAvailable.label;\r\n  }\r\n\r\n}\r\n","import {Unit} from './Unit';\r\n\r\nexport class Swordsman extends Unit{\r\n\r\n  static dbid: string = btoa(Swordsman.name);\r\n  id = -1\r\n  maxHealth: number = 100;\r\n  health: number = 100;\r\n  defense: number = 10;\r\n  strength: number = 25;\r\n  attackRange: number = 1;\r\n  walk_frames: Array<number> = [11, 18];\r\n  attack_frames: Array<number> = [24, 32];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { LevelData, ProgramData, UserData, UnitData, CodeType } from 'src/app/models/database/DatabaseData';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * Service that Manages interactions between client database\r\n */\r\nexport class FirestoreDatabaseService {\r\n\r\n  //constants for the names of database collections\r\n  /**\r\n   * Firestore Collection id for User Data\r\n   */\r\n  private USER_DATA = \"User_Data\";\r\n  /**\r\n   * Firestore Collection id for Program Data\r\n   */\r\n  private CODE_DATA = \"Code_Data\";\r\n  /**\r\n   * Firestore Collection id for Level Data\r\n   */\r\n  private LEVEL_DATA = \"Level_Data\";\r\n\r\n  constructor(private db: AngularFirestore, private storage: AngularFireStorage) { }\r\n\r\n  /**\r\n   * Sends a request to database for the specified document in the collection\r\n   * returns the observable for the request\r\n   * @param collection The collection the database is checking\r\n   * @param documentname the document id that is being requested\r\n   */\r\n  private queryDocument(collection: string, documentname: string): Observable<any> {\r\n    return this.db.collection(collection).doc(documentname).get();\r\n  }\r\n\r\n  /**\r\n   * Sends a request to database for the deletion of the specified document\r\n   * returns a promise with the success of the request\r\n   * @param collection the collection the database is checking\r\n   * @param documentname the document id that is being request\r\n   */\r\n  private deleteDocument(collection: string, documentname: string): Promise<void> {\r\n    return this.db.collection(collection).doc(documentname).delete();\r\n  }\r\n\r\n  /**\r\n   * Sends a request to database for updating the data of the specified document.\r\n   * Creates a new document of the specified name/id if it doesnt already exist\r\n   * Returns a promise with the success of the request.\r\n   * @param collection the collection of the document in the database is updating\r\n   * @param documentname the document id that is being update\r\n   * @param data the data to update with\r\n   */\r\n  private updateDocument(collection: string, documentname: string, data): Promise<void> {\r\n    return this.db.collection(collection).doc(documentname).set(data);\r\n  }\r\n\r\n  /**\r\n   * Checks if a document exists, returns a promise on the result\r\n   * @param collection the collection the documents we are checking\r\n   * @param documentname the document id to look for\r\n   * @returns promise with type boolean\r\n   */\r\n  private doesDocumentExist(collection: string, documentname: string): Promise<boolean> {\r\n    return new Promise<boolean>((resolve, reject) => {\r\n      this.db.collection(collection).doc(documentname).get().subscribe(result => {\r\n        resolve(result.exists);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sends a request to database for getting all documents within a specified collection.\r\n   * returns an observable for the request\r\n   * @param collection the collection of documents we are getting\r\n   * @returns observable with status and data of the data\r\n   */\r\n  private queryDocumentsFromCollection(collection: string): Observable<any> {\r\n    return this.db.collection(collection).get();\r\n  }\r\n\r\n  //getters\r\n\r\n  /**\r\n   * function to get user data from the database. Must include a listener function(Userdata) for response\r\n   * @param uid the user id you are getting data for\r\n   * @param listenerFunction the function(ProgramData) that receives the request data\r\n   */\r\n  public getUserData(uid: string, listenerFunction) {\r\n    this.queryDocument(this.USER_DATA, uid).subscribe(result => {\r\n      if (result.exists) {\r\n        var data = result.data();\r\n        var ud: UserData = {\r\n          Username: data.Username,\r\n          CompletedLevels: data.CompletedLevels,\r\n          Programs: data.OwnedCodes,\r\n          Level: data.Level,\r\n          Description: data.description\r\n        }\r\n        listenerFunction(ud);\r\n      } else {\r\n        listenerFunction(null);\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * function to get the data for a program from the database Must include a listener function(ProgramData) for response\r\n   * @param cid the program id you are getting data for\r\n   * @param listenerFunction the function(Programdata) that receives the request data\r\n   */\r\n  public getProgramData(cid: string, listenerFunction) {\r\n    this.queryDocument(this.CODE_DATA, cid).subscribe(result => {\r\n      var data = result.data();\r\n\r\n      //gets array of units\r\n      var units = [];\r\n      for (var x = 0; x < data.units.length; x++) {\r\n        var u: UnitData = {\r\n          TroopType: data.units[x].type, CodeBlocks: data.units[x].blocks,\r\n          CodeType: CodeType[data.units[x].ctype as string], CodeFile: data.units[x].codeFile,\r\n          location: data.units[x].location\r\n        };\r\n\r\n        units.push(u);\r\n      }\r\n\r\n\r\n      var pd: ProgramData = {\r\n        Name: data.name,\r\n        Verified: data.verified,\r\n        Units: units\r\n      }\r\n      listenerFunction(pd);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * function to get the data for a level from the database Must include a listener function(LevelData) for response\r\n   * @param lid the program id you are getting data for\r\n   * @param listenerFunction the function(LevelData) that receives the request data\r\n   */\r\n  public getLevelData(lid: string, listenerFunction) {\r\n    this.queryDocument(this.LEVEL_DATA, lid).subscribe(result => {\r\n      var data = result.data();\r\n\r\n      var ld: LevelData = {\r\n        ProgramId: data.Code\r\n      }\r\n\r\n      listenerFunction(ld);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * function to get the data for a program in a level from the database Must include a listener function(ProgramData) for response\r\n   * @param lid the program id you are getting data for\r\n   * @param listenerFunction the function(ProgramData) that receives the request data\r\n   */\r\n  public getLevelProgram(lid: string, listenerFunction) {\r\n    var self = this;\r\n    this.getLevelData(lid, function (data) {\r\n      self.getProgramData(data.ProgramId.toString(), listenerFunction);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * function to retrieve the user's hand typed code and converts it to a worker. Must include a listener function(ProgramData) for response\r\n   * @param storageRef the path in storage to the user's code\r\n   * @param fileName the name you wish to save the file as\r\n   * @param listenerFunction the function(Worker) that receives the request data\r\n   */\r\n  public getUserCodeFromStorage(storageRef, fileName, listenerFunction) {\r\n\r\n    let ref = this.storage.ref(storageRef);\r\n    ref.getDownloadURL().subscribe(\r\n      res => {\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.responseType = 'text';\r\n        xhr.onload = function (event) {\r\n          let code = xhr.response;\r\n          let file = new File([code], fileName, {\r\n            type: \"text/javascript\",\r\n          });\r\n          let url = window.URL.createObjectURL(file);\r\n          listenerFunction(new Worker(url));\r\n        };\r\n        xhr.open('GET', res);\r\n        xhr.send();\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  /**\r\n   * Gets all level data document snapshots from the levels collection\r\n   * @param callback function to call on request complete. parameter will give a QuerySnapshot\r\n   */\r\n  public getAllLevels(callback) {\r\n    this.queryDocumentsFromCollection(this.LEVEL_DATA).subscribe(result => {\r\n      callback(result);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Checks if a program document exists in database, returns a callback with result\r\n   * @param pid the program id to get\r\n   * @param callback the callback function on request complete\r\n   */\r\n  public doesProgramExist(pid: string, callback) {\r\n    this.doesDocumentExist(this.CODE_DATA, pid).then((result) => {\r\n      callback(result);\r\n    });\r\n  }\r\n\r\n  //setters\r\n  /**\r\n   * Function that sets the data in the user collection database based on a UserData object\r\n   * Returns the promise of the response\r\n   * @param uid the id of the user you are trying to change\r\n   * @param ud the UserData object to place into database\r\n   */\r\n  public setUserData(uid: string, ud: UserData): Promise<void> {\r\n    return this.updateDocument(this.USER_DATA, uid, {\r\n      Username: ud.Username,\r\n      CompletedLevels: ud.CompletedLevels,\r\n      OwnedCodes: ud.Programs,\r\n      Level: ud.Level,\r\n      description: ud.Description\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Function that sets the data in the program collection database based on a ProgramData object\r\n   * Returns the promise of the response\r\n   * @param pid the id of the program you are trying to change\r\n   * @param pd the ProgramData object to place into database\r\n   */\r\n  public setProgramData(pid: string, pd: ProgramData): Promise<void> {\r\n\r\n    var dbunit = [];\r\n    for (var x = 0; x < pd.Units.length; x++) {\r\n      dbunit.push({\r\n        blocks: pd.Units[x].CodeBlocks, location: pd.Units[x].location, type: pd.Units[x].TroopType,\r\n        ctype: CodeType[pd.Units[x].CodeType], codeFile: pd.Units[x].CodeFile\r\n      });\r\n    }\r\n\r\n    return this.updateDocument(this.CODE_DATA, pid, {\r\n      name: pd.Name,\r\n      verified: pd.Verified,\r\n      units: dbunit\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Stores a user's javascript code at the specified url if that url does not already contain code.\r\n   * Note: this assumes the file does not already exist. To ensure it doesn't I include the current time in the url\r\n   * for simplicity.\r\n   * @param url: the url you wish to save your code at\r\n   * @param file: the file containing the code\r\n   */\r\n  public storeCodeAtLocation(url: string, file: File){\r\n\r\n    this.storage.upload(url, file);\r\n\r\n  }\r\n\r\n  //deleters\r\n  /**\r\n   * Deletes program data from database\r\n   * @param pid the program id to delete\r\n   */\r\n  public deleteProgramData(pid: string): Promise<void> {\r\n    return this.deleteDocument(this.CODE_DATA, pid);\r\n  }\r\n\r\n}\r\n","import { GameAction } from 'src/app/models/game/GameAction';\r\nimport { Executable } from '../../block-command';\r\nimport {Wait} from './Wait';\r\nimport {GridParserService} from '../../../../services/game/grid-parser.service';\r\n\r\n/**\r\n * Executable representing a forward movement\r\n * See block-command.ts for specific documentation\r\n * on properties and methods\r\n */\r\nexport class East implements Executable {\r\n\r\n  static label: string = 'Go east';\r\n  static id: string = btoa(East.name);\r\n  static asCode = 'this.postMessage({result: \\'East\\'});';\r\n  indentationLevel: number;\r\n\r\n  constructor() {}\r\n\r\n  execute(grid, unit): GameAction {\r\n    let newLocation = {x:unit.location.x + 1, y:unit.location.y};\r\n    if(GridParserService.isInBounds(newLocation, grid) && !GridParserService.isUnitOccupied(newLocation, grid)){\r\n\r\n      grid[unit.location.x][unit.location.y] = null;\r\n      unit.location = newLocation;\r\n      unit.doWalkAnimation();\r\n      return new GameAction(East.name, unit, null, false);\r\n\r\n    }else{\r\n\r\n      return new GameAction(Wait.name, unit, null, false);\r\n\r\n    }\r\n  }\r\n\r\n  getId(): string {\r\n    return East.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return East.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return East.asCode;\r\n  }\r\n\r\n\r\n}\r\n\r\n","\r\n/**\r\n * The User data from the database \"User_Data\" Collection\r\n * This data is a representation of what was gathered from \r\n * the database\r\n */\r\nexport class UserData {\r\n    Username: string\r\n    Level: number\r\n    Description: string\r\n    CompletedLevels: number[]\r\n    Programs: number[]\r\n}\r\n\r\n/**\r\n * The Level data from the database \"Level_Data\" Collection\r\n * This data is a representation of what was gathered from \r\n * the database\r\n */\r\nexport class LevelData {\r\n    /**\r\n     * number repsenting the program id of the level\r\n     * This value is meant to be used to grab a 'ProgramData'\r\n     * Object from the database\r\n     */\r\n    ProgramId: number\r\n}\r\n\r\n/**\r\n * The Program Data from the database \"Code_Data\" Collection\r\n * This data is a representation of what was gathered from \r\n * the database\r\n */\r\nexport class ProgramData {\r\n    /**\r\n     * The String representing the name given to the program\r\n     * Used for users to identify their code in the database\r\n     */\r\n    Name: string\r\n\r\n    /**\r\n     * boolean representation if the compiler has verified \r\n     * the code to be safe to fun\r\n     */\r\n    Verified: boolean\r\n\r\n    /**\r\n     * Array of Program Objects representing a mapping of \r\n     * each Unit's avaliable program data\r\n     */\r\n    //CodeBlocks: ProgramComponent[]\r\n\r\n    /**\r\n     * Array of TroopLocation Objects representing a mapping\r\n     * of each Unit's starting location\r\n     */\r\n    //Formation: TroopLocation[]\r\n\r\n    /**\r\n     * Array of units in the mapping\r\n     */\r\n    Units: UnitData[]\r\n    \r\n}\r\n\r\n/**\r\n * Object representing each Unit's avaliable program and location \r\n * within the ProgramData\r\n */\r\nexport class UnitData {\r\n    TroopType: string = undefined\r\n    CodeType: CodeType = CodeType.NONE\r\n    CodeBlocks: string[] = null\r\n    CodeFile: {storageRef: string, filename: string} = null\r\n    location: {x:number, y:number} = null\r\n}\r\n\r\nexport enum CodeType {\r\n    BLOCK, FILE, NONE\r\n}","import {Predicate} from '../../block-command';\r\nimport {GridParserService} from '../../../../services/game/grid-parser.service';\r\n\r\nexport class WestAvailable implements Predicate{\r\n\r\n  static id: string = btoa(WestAvailable.name);\r\n  static label: string = 'West Available';\r\n  static asCode: string = 'locationAvailable(grid, {x: me.location.x - 1, y: me.location.y})';\r\n  conjunction: string = '';\r\n  indentationLevel: number;\r\n  negate: boolean = false;\r\n\r\n  evaluation(grid, unit): boolean {\r\n    let west = {x: unit.location.x - 1, y: unit.location.y};\r\n    return GridParserService.isInBounds(west, grid)\r\n      && !GridParserService.isUnitOccupied(west, grid);\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return WestAvailable.asCode;\r\n  }\r\n\r\n  getId(): string {\r\n    return WestAvailable.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return WestAvailable.label;\r\n  }\r\n\r\n\r\n}\r\n","import { Executable } from '../../block-command';\r\nimport { GameAction } from 'src/app/models/game/GameAction';\r\n\r\n/**\r\n * Executable to make unit wait action\r\n * See block-command.ts for specific documentation\r\n * on properties and methods\r\n */\r\nexport class Wait implements Executable {\r\n\r\n  static label: string = 'Wait';\r\n  static id: string = btoa(Wait.name);\r\n  static asCode = 'this.postMessage({result: \\'Wait\\'});';\r\n  indentationLevel: number;\r\n\r\n  execute(grid, unit): GameAction {\r\n    return new GameAction(Wait.name, unit, null, false);\r\n  }\r\n\r\n  getId(): string {\r\n    return Wait.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return Wait.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return Wait.asCode;\r\n  }\r\n\r\n}\r\n","import { GameAction } from 'src/app/models/game/GameAction';\r\nimport { Executable } from '../../block-command';\r\nimport {GridParserService} from '../../../../services/game/grid-parser.service';\r\nimport {Wait} from './Wait';\r\n\r\n/**\r\n * Executable representing a left movement\r\n * See block-command.ts for specific documentation\r\n * on properties and methods\r\n */\r\nexport class North implements Executable {\r\n\r\n  static label: string = 'Go north';\r\n  static id: string = btoa(North.name);\r\n  static asCode = 'this.postMessage({result: \\'North\\'});';\r\n  indentationLevel: number;\r\n\r\n  constructor() {}\r\n\r\n\r\n  execute(grid, unit): GameAction {\r\n    let newLocation = {x:unit.location.x, y:unit.location.y - 1}\r\n    if (GridParserService.isInBounds(newLocation, grid) && !GridParserService.isUnitOccupied(newLocation, grid)){\r\n\r\n      grid[unit.location.x][unit.location.y] = null;\r\n      unit.location = newLocation;\r\n      unit.doWalkAnimation();\r\n      return new GameAction(North.name, unit, null, false);\r\n\r\n    }else{\r\n\r\n      return new GameAction(Wait.name, unit, null, false);\r\n\r\n    }\r\n  }\r\n\r\n  getId(): string {\r\n    return North.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return North.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return North.asCode;\r\n  }\r\n\r\n}\r\n","import { ConditionalBlock, Predicate } from '../../block-command';\r\nimport { EndIf } from '../terminal/Endif';\r\nimport { EmptyPredicate } from '../predicate/EmptyPredicate';\r\nimport { EndElse } from '../terminal/EndElse';\r\nimport { EndElseIf } from '../terminal/EndElseIf';\r\n\r\n/**\r\n * ConditionalBlock representing an If statement\r\n * See block-command.ts for specific documentation\r\n * on properties and methods\r\n */\r\nexport class If implements ConditionalBlock {\r\n\r\n  static label: string = 'If';\r\n  static id: string = btoa(If.name);\r\n\r\n  conditions: Array<Predicate> = [new EmptyPredicate()];\r\n  terminal_blocks: Array<string> = [EndIf.label, EndElse.label, EndElseIf.label];\r\n  indentationLevel: number;\r\n  condition: Predicate = new EmptyPredicate();\r\n\r\n  static asCode(conditions: Array<Predicate>){\r\n\r\n    let code = 'if(';\r\n    for(let condition of conditions){\r\n      if(condition.conjunction !== ''){\r\n        code += ` ${condition.conjunction + condition.conjunction} `;\r\n      }\r\n      if(condition.negate){\r\n        code += '!'\r\n      }\r\n      code += condition.getAsCode();\r\n    }\r\n    code += '){';\r\n    return code;\r\n\r\n  };\r\n\r\n  getId(): string {\r\n    return If.id;\r\n  }\r\n\r\n  getLabel() {\r\n    return If.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return If.asCode(this.conditions);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Stack } from 'src/app/dataStructures/Stack';\r\nimport { BlockCommand, ConditionalBlock, Executable } from 'src/app/models/blockCommands/block-command';\r\nimport { Else } from 'src/app/models/blockCommands/blocks/conditional/Else';\r\nimport { ElseIf } from 'src/app/models/blockCommands/blocks/conditional/ElseIf';\r\nimport { If } from 'src/app/models/blockCommands/blocks/conditional/If';\r\nimport { CodeType, ProgramData } from 'src/app/models/database/DatabaseData';\r\nimport { GameAction } from 'src/app/models/game/GameAction';\r\nimport { Unit } from 'src/app/models/game/units/Unit';\r\nimport { BlockService } from '../../program-construction/block.service';\r\nimport { LevelDataInterfaceService } from '../levelDataInterface/level-data-interface.service';\r\nimport { Wait } from '../../../models/blockCommands/blocks/executable/Wait';\r\nimport { UnitReadOnly } from '../../../models/game/units/UnitReadOnly';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * Service that runs the internal gameloop for the game\r\n */\r\nexport class GameLoopServiceService {\r\n\r\n  WORKER_TIMEOUT_TIME = 5000;\r\n\r\n  /**\r\n   * 2d grid representation of the map\r\n   */\r\n  grid: Unit[][]; //Map representation of grid\r\n  /**\r\n   * Array of units found in team 1\r\n   */\r\n  team1units: Unit[];\r\n  /**\r\n   * Array of units found in team 2\r\n   */\r\n  team2units: Unit[];\r\n\r\n  /**\r\n   * Boolean value on if team 1's turn is active\r\n   * true if team 1's turn, false otherwise\r\n   */\r\n  isTeam1Active: boolean;\r\n  /**\r\n   * The index of the unit in the team array currently commiting actions\r\n   */\r\n  unitIndex: number;//index in team array units of unit currently active\r\n  /**\r\n   * the index of the code the unit is currently running\r\n   */\r\n  codeIndex: number;//index in codeblock array of currently running unit\r\n\r\n  /**\r\n   * A stack of the conditional hierarchy of the currently running code\r\n   */\r\n  currentConditions: Stack<ConditionalHold>;\r\n\r\n  /**\r\n   * the previous gameAction object that was returned\r\n   * null if no action is stored\r\n   */\r\n  lastAction: GameAction;\r\n\r\n  /**\r\n   * Data stored for game run\r\n   */\r\n  gameData;\r\n\r\n  workerRunning: Worker;\r\n\r\n\r\n  constructor(private LevelInterface: LevelDataInterfaceService, private blockServ: BlockService) { }\r\n\r\n  /**\r\n   * Must be called before loop is prepped\r\n   */\r\n  loadData(levelid: string, programid: string): Promise<void> {\r\n    return new Promise((resolutionFunc, rejectionFunc) => {\r\n      this.LevelInterface.getGameInfo(levelid, programid).then(result => {\r\n        this.gameData = result;\r\n\r\n        resolutionFunc();\r\n      });\r\n    })\r\n  }\r\n\r\n  loadTestData(programData: ProgramData): Promise<void> {\r\n    return new Promise((resolutionFunc, rejectionFunc) => {\r\n      this.LevelInterface.getGameInfoTesting(programData).then(result => {\r\n        this.gameData = result;\r\n\r\n        resolutionFunc();\r\n      });\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Called before the start of game\r\n   * prepares the service for runnning a single game\r\n   */\r\n  prepLoop() {\r\n\r\n    try {\r\n      var data = this.gameData;\r\n\r\n      this.isTeam1Active = true;\r\n      this.unitIndex = 0;\r\n      this.codeIndex = 0;\r\n      this.lastAction = null;\r\n\r\n      this.team1units = data.team1Units;\r\n      this.team2units = data.team2Units;\r\n\r\n      this.grid = this.create2DArray(data.griddimensions.x, data.griddimensions.y);\r\n\r\n      this.currentConditions = new Stack();\r\n\r\n      for (var x = 0; x < this.team1units.length; x++) {\r\n        var u = this.team1units[x];\r\n        this.grid[u.location.x][u.location.y] = u;\r\n      }\r\n\r\n      for (var x = 0; x < this.team2units.length; x++) {\r\n        var u = this.team2units[x];\r\n        this.grid[u.location.x][u.location.y] = u;\r\n      }\r\n\r\n      // console.log(\"Team 1 Data\");\r\n      // console.log(JSON.stringify(this.team1units));\r\n      // console.log(JSON.stringify(this.team2units));\r\n      // console.log(JSON.stringify(this.grid));\r\n\r\n    } catch (error) {\r\n      console.log(\"Failed: \" + error);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * runs through 1 action in the game via interpreting game commands\r\n   */\r\n  stepGame(): Promise<any> {\r\n    var self = this;\r\n    // return Promise.race([this.baseStepPromise(), new Promise<GameAction>((resolve, reject) => {\r\n    //   setTimeout(function () {\r\n\r\n    //     var curTeam: Unit[] = (self.isTeam1Active) ? self.team1units : self.team2units;\r\n\r\n    //     self.unitIndex++;\r\n    //     self.codeIndex = 0;\r\n    //     if (curTeam.length <= self.unitIndex) {\r\n    //       //no more units to run through switch sides\r\n    //       self.unitIndex = 0;\r\n    //       self.isTeam1Active = !self.isTeam1Active;\r\n    //     }\r\n\r\n    //     self.currentConditions.clear();\r\n\r\n    //     if (self.workerRunning != null) {\r\n    //       self.workerRunning.terminate();\r\n    //     }\r\n\r\n    //     resolve(new GameAction(\"RanOutOfTimeError\", ((self.isTeam1Active) ? self.team1units : self.team2units)[self.unitIndex], null, false));\r\n\r\n\r\n    //   }, this.WORKER_TIMEOUT_TIME);\r\n    // })]);\r\n    return new Promise<any>((resolve, reject) => {\r\n\r\n      Promise.race([this.baseStepPromise(), new Promise<GameAction>((resolve, reject) => {\r\n        setTimeout(function() {\r\n          resolve(new GameAction(\"RanOutOfTimeError\", ((self.isTeam1Active) ? self.team1units : self.team2units)[self.unitIndex], null, false));\r\n        }, this.WORKER_TIMEOUT_TIME);\r\n      })]).then(result => {\r\n        var resolvedAction = result as GameAction;\r\n\r\n        if (resolvedAction.actionId === \"RanOutOfTimeError\") {\r\n          var curTeam: Unit[] = (self.isTeam1Active) ? self.team1units : self.team2units;\r\n\r\n          self.unitIndex++;\r\n          self.codeIndex = 0;\r\n          if (curTeam.length <= self.unitIndex) {\r\n            //no more units to run through switch sides\r\n            self.unitIndex = 0;\r\n            self.isTeam1Active = !self.isTeam1Active;\r\n          }\r\n\r\n          self.currentConditions.clear();\r\n\r\n          if (self.workerRunning != null) {\r\n            self.workerRunning.terminate();\r\n          }\r\n        }\r\n        resolve(result);\r\n      });\r\n    });\r\n  }\r\n\r\n  baseStepPromise(): Promise<GameAction> {\r\n\r\n    return new Promise((successFunc, rejectFunc) => {\r\n\r\n      try {\r\n\r\n        // Return at the end of each of these to not execute the code after. We know we're done.\r\n        if (this.team1units.length === 0) {\r\n          //return new GameAction(\"GameEnd2\", null, null, false);\r\n          successFunc(new GameAction(\"GameEnd2\", null, null, false));\r\n          return;\r\n        } else if (this.team2units.length === 0) {\r\n          //return new GameAction(\"\"GameEnd1\"\", null, null, false);\r\n          successFunc(new GameAction(\"GameEnd1\", null, null, false));\r\n          return;\r\n        }\r\n\r\n        var unit = ((this.isTeam1Active) ? this.team1units : this.team2units)[this.unitIndex]\r\n\r\n        if (unit.codeType == CodeType.BLOCK) {\r\n\r\n          //it is a codeblock task\r\n          var currentCodeBlock: BlockCommand = null;\r\n\r\n          do {\r\n            unit = ((this.isTeam1Active) ? this.team1units : this.team2units)[this.unitIndex]\r\n            currentCodeBlock = unit.activecode[this.codeIndex];\r\n          } while (this.evalCodeBlock(currentCodeBlock, unit))\r\n\r\n          //check action integrity\r\n          var last = this.lastAction;\r\n\r\n          if (last == null) {\r\n            last = new GameAction(\"NoEvent\", null, null, false);\r\n          }\r\n\r\n          this.lastAction = null;\r\n\r\n          //check for death\r\n          if (last.hasDied) {\r\n            // var team: Unit[] = (last.receiver.team == 1) ? this.team1units : this.team2units;\r\n            // var indexDead = team.indexOf(last.receiver);\r\n            // if(indexDead >= 0 && indexDead < team.length) {\r\n            //   team.splice(indexDead, 1);\r\n\r\n            //   //adjust new code index\r\n            //   if(this.unitIndex > indexDead) {\r\n            //     this.codeIndex--;\r\n            //   }\r\n\r\n            // } else {\r\n            //   console.log(\"You shouldnt be seeing this error message\");\r\n            // }\r\n            this.deleteUnit(last.receiver);\r\n          }\r\n\r\n          //next unit\r\n          var curTeam: Unit[] = (this.isTeam1Active) ? this.team1units : this.team2units;\r\n\r\n          this.unitIndex++;\r\n          this.codeIndex = 0;\r\n          if (curTeam.length <= this.unitIndex) {\r\n            //no more units to run through switch sides\r\n            this.unitIndex = 0;\r\n            this.isTeam1Active = !this.isTeam1Active;\r\n          }\r\n\r\n          this.currentConditions.clear();\r\n\r\n          successFunc(last);\r\n        } else if (unit.codeType === CodeType.FILE) {\r\n\r\n          this.workerRunning = unit.activecode as Worker;\r\n\r\n          this.workerRunning.postMessage(JSON.stringify({ grid: this.convertGridToReadOnly(this.grid), unit: new UnitReadOnly(unit) }));\r\n\r\n          var self = this\r\n          var messageSent = false;\r\n\r\n          this.workerRunning.onmessage = function (event) {\r\n\r\n            if (!messageSent) {\r\n              self.workerRunning = null;\r\n\r\n              /*\r\n              Note the the convertWorkerMessageToAction never returns null. Instead if something goes\r\n              wrong it will return a default wait action.\r\n               */\r\n              console.log(\"Unit request \" + event.data.result);\r\n              var last = self.convertWorkerMessageToAction(event.data, self.grid, unit);\r\n              self.lastAction = last;\r\n\r\n              //check for death\r\n              if (last.hasDied) {\r\n                // var team: Unit[] = (last.receiver.team == 1) ? self.team1units : self.team2units;\r\n                // var indexDead = team.indexOf(last.receiver);\r\n                // if (indexDead >= 0 && indexDead < team.length) {\r\n                //   team.splice(indexDead, 1);\r\n\r\n                //   //adjust new code index\r\n                //   if (self.unitIndex > indexDead) {\r\n                //     self.codeIndex--;\r\n                //   }\r\n\r\n                // } else {\r\n                //   console.log(\"You shouldnt be seeing this error message\");\r\n                // }\r\n                self.deleteUnit(last.receiver);\r\n              }\r\n\r\n              var curTeam: Unit[] = (self.isTeam1Active) ? self.team1units : self.team2units;\r\n\r\n              self.unitIndex++;\r\n              self.codeIndex = 0;\r\n              if (curTeam.length <= self.unitIndex) {\r\n                //no more units to run through switch sides\r\n                self.unitIndex = 0;\r\n                self.isTeam1Active = !self.isTeam1Active;\r\n              }\r\n\r\n              successFunc(self.lastAction);\r\n            }\r\n            messageSent = true;\r\n          }\r\n\r\n          this.workerRunning.onerror = function (event) {\r\n            self.workerRunning = null;\r\n\r\n            // var curTeam: Unit[] = (self.isTeam1Active) ? self.team1units : self.team2units;\r\n\r\n            // self.unitIndex++;\r\n            // self.codeIndex = 0;\r\n            // if (curTeam.length <= self.unitIndex) {\r\n            //   //no more units to run through switch sides\r\n            //   self.unitIndex = 0;\r\n            //   self.isTeam1Active = !self.isTeam1Active;\r\n            // }\r\n\r\n            //rejectFunc(\"Written Code has encountered an error\");\r\n            throw new Error(\"Written Code has encountered an error\")\r\n          }\r\n\r\n        } else {\r\n          //none type\r\n          throw new Error(\"Unexpected Nonetype code\");\r\n        }\r\n\r\n      } catch (error) {\r\n        last = null;\r\n        //return new GameAction(\"Error\", null, null, false);\r\n        console.log(\"Error running unit index \" + this.unitIndex.toString() + \" on team \" + this.isTeam1Active + \" \" + error);\r\n\r\n        //next unit\r\n        var curTeam: Unit[] = (this.isTeam1Active) ? this.team1units : this.team2units;\r\n\r\n        this.unitIndex++;\r\n        this.codeIndex = 0;\r\n        if (curTeam.length <= this.unitIndex) {\r\n          //no more units to run through switch sides\r\n          this.unitIndex = 0;\r\n          this.isTeam1Active = !this.isTeam1Active;\r\n        }\r\n\r\n        this.currentConditions.clear();\r\n\r\n        successFunc(new GameAction(\"Error\", null, null, false));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Evaluates the current codeblock for action or conditional logic\r\n   * Returns true if this method should be called another time\r\n   * @param cmd the block command to evaluate\r\n   * @param unit the unit commiting the action\r\n   */\r\n  //TODO COMPLETE FOR ALL CONDITIONALS\r\n  private evalCodeBlock(cmd: BlockCommand, unit: Unit): boolean {\r\n    var finalReturn = false;\r\n\r\n    //conditional check\r\n    if (this.blockServ.isConditional(cmd)) {\r\n\r\n      if (cmd instanceof If) {\r\n        return this.handleIfStatement(cmd, unit);\r\n      } else if (cmd instanceof ElseIf) {\r\n\r\n        if (this.currentConditions.peek().preCondition) {\r\n          this.seekToEndIf(unit);\r\n        } else {\r\n          this.currentConditions.pop();\r\n\r\n          return this.handleIfStatement(cmd, unit);\r\n        }\r\n\r\n      } else if (cmd instanceof Else) {\r\n\r\n        if (this.currentConditions.peek().preCondition) {\r\n          this.seekToEndIf(unit);\r\n        } else {\r\n          finalReturn = true;\r\n        }\r\n      }\r\n\r\n      //conditionalEnd check\r\n    } else if (this.blockServ.isTerminal(cmd)) {\r\n      finalReturn = true;\r\n      this.currentConditions.pop();\r\n\r\n      //It must be an action\r\n    } else {\r\n      this.lastAction = (cmd as Executable).execute(this.grid, unit);\r\n      finalReturn = false;\r\n    }\r\n\r\n    this.codeIndex++;\r\n    //check range in code array\r\n    if (unit.activecode.length <= this.codeIndex) {\r\n      //no more code, next unit\r\n      // var curTeam: Unit[] = (this.isTeam1Active) ? this.team1units : this.team2units;\r\n\r\n      // this.unitIndex++;\r\n      // this.codeIndex = 0;\r\n      // if (curTeam.length <= this.unitIndex) {\r\n      //   //no more units to run through switch sides\r\n      //   this.unitIndex = 0;\r\n      //   this.isTeam1Active = !this.isTeam1Active;\r\n      // }\r\n\r\n      // this.currentConditions.clear();\r\n      return false;\r\n    } else {\r\n      return finalReturn;\r\n    }\r\n\r\n  }\r\n\r\n  private convertGridToReadOnly(grid: Unit[][]) {\r\n\r\n    let newGrid = [];\r\n    for (let row of grid) {\r\n      let newRow = [];\r\n      for (let el of row) {\r\n\r\n        if (el === null) {\r\n          newRow.push(el);\r\n          continue;\r\n        }\r\n        newRow.push(new UnitReadOnly(el));\r\n\r\n      }\r\n      newGrid.push(newRow);\r\n    }\r\n    return newGrid;\r\n\r\n  }\r\n\r\n  /**\r\n   * Creates a null filled 2d array of units for the grid at specified size\r\n   * @param x size in x direction\r\n   * @param y size in y direction\r\n   */\r\n  private create2DArray(x: number, y: number): Unit[][] {\r\n    var arr: Unit[][] = [];\r\n\r\n    for (var row = 0; row < x; row++) {\r\n      arr[row] = [];\r\n      for (var col = 0; col < y; col++) {\r\n        arr[row][col] = null;\r\n      }\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  private handleIfStatement(cmd: BlockCommand, unit: Unit): boolean {\r\n    this.currentConditions.push(new ConditionalHold(cmd as ConditionalBlock, this.codeIndex));\r\n\r\n    //check conditioning\r\n    if ((cmd as ConditionalBlock).condition.evaluation(this.grid, unit)) {\r\n      this.currentConditions.peek().preCondition = true;\r\n      this.codeIndex++;\r\n      return true;\r\n\r\n    } else {\r\n      this.currentConditions.peek().preCondition = false;\r\n\r\n      //Find endblock\r\n      this.seekToEndIf(unit);\r\n\r\n      /*while (!(unit.activecode[this.codeIndex] instanceof EndIf));*/\r\n      return true;\r\n    }\r\n  }\r\n\r\n  private seekToEndIf(unit: Unit) {\r\n    var conditionCount = 1;\r\n    var curBlock: BlockCommand;\r\n\r\n    do {\r\n      this.codeIndex++;\r\n      curBlock = unit.activecode[this.codeIndex]\r\n\r\n      if (curBlock instanceof If) {\r\n        conditionCount++;\r\n      } else if (this.blockServ.isTerminal(curBlock)) {\r\n        conditionCount--;\r\n      }\r\n    } while (!(this.blockServ.isTerminal(curBlock) || curBlock instanceof Else || curBlock instanceof ElseIf) || !(conditionCount <= 0));\r\n  }\r\n\r\n  /**\r\n   * Takes the data returned from the web worker and converts it to a game action object. If unable to\r\n   * parse game action then we make the unit just wait.\r\n   * @param data the data from the web worker\r\n   * @param grid the map the user is playing\r\n   * @param unit the unit the user is controlling\r\n   * @private\r\n   */\r\n  private convertWorkerMessageToAction(data, grid, unit): GameAction {\r\n\r\n    let action = data.result;\r\n    try {\r\n      let executable = this.blockServ.getById(btoa(action));\r\n      if (!(this.blockServ.isExecutable(executable))) {\r\n        throw new Error();\r\n      } else {\r\n        return executable.execute(grid, unit);\r\n      }\r\n\r\n    } catch (err) {\r\n\r\n      return new Wait().execute(grid, unit);\r\n\r\n    }\r\n  }\r\n\r\n  deleteUnit(unit: Unit) {\r\n\r\n    console.log(\"Deleting unit \" + unit.id + \" of team \" + unit.team);\r\n    var team = (unit.team === 1 ? this.team1units : this.team2units);\r\n    console.log(\"Looked at team \" + team + \" of type \" + JSON.stringify((team === this.team1units ? \"1\" : \"2\")));\r\n    for (let i = 0; i < team.length; i++) {\r\n      if (team[i].id === unit.id) {\r\n        console.log(\"Deleted unit \" + unit.id + \" at index \" + i);\r\n        team.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    this.grid[unit.location.x][unit.location.y] = null;\r\n    console.log(\"end\");\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Object representing a conditional group that the code has intercepted\r\n */\r\nclass ConditionalHold {\r\n  conditional: ConditionalBlock;\r\n  conditionCodeIndex: number;\r\n  preCondition: boolean = false;\r\n  elseMet: boolean = false;\r\n\r\n  constructor(cond: ConditionalBlock, ind: number) {\r\n    this.conditional = cond;\r\n    this.conditionCodeIndex = ind;\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GridParserService {\r\n\r\n  constructor() { }\r\n\r\n  static isUnitOccupied(location, grid){\r\n\r\n    return grid[location.x][location.y] !== null;\r\n\r\n  }\r\n\r\n  static isInBounds(location, grid){\r\n\r\n    return location.x >= 0 && location.x < grid.length && location.y >= 0 && location.y < grid[0].length;\r\n\r\n  }\r\n\r\n}\r\n","import { TerminalBlock } from '../../block-command';\r\n\r\n/**\r\n * TerminalBlock representing the end of the code\r\n * See block-command.ts for specific documentation\r\n * on properties and methods\r\n */\r\nexport class End implements TerminalBlock {\r\n\r\n  static label: string = 'End Turn';\r\n  static id: string = btoa(End.name);\r\n  terminate: number = null;\r\n  indentationLevel: number = 0;\r\n\r\n  getId(): string {\r\n    return End.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return End.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return '}';\r\n  }\r\n\r\n}\r\n","import { Predicate } from '../../block-command';\r\n\r\n/**\r\n * Predicate representing Health below 30% condition\r\n * condition checks the unit's health if below 30%\r\n * See block-command.ts for specific documentation\r\n * on properties and methods\r\n */\r\nexport class HealthBelow30Percent implements Predicate {\r\n\r\n  static label: string = 'Health Less Than 30 Percent';\r\n  static id: string = btoa(HealthBelow30Percent.name);\r\n  static asCode = 'healthLessThan30Percent(me)'\r\n  indentationLevel: number;\r\n  conjunction: string = '';\r\n  negate: boolean = false;\r\n\r\n  evaluation(grid, unit): boolean {\r\n    return ((unit.health / unit.maxHealth) * 100) < 30;\r\n  }\r\n\r\n  getId(): string {\r\n    return HealthBelow30Percent.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return HealthBelow30Percent.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return HealthBelow30Percent.asCode;\r\n  }\r\n\r\n\r\n}\r\n","import { TerminalBlock } from '../../block-command';\r\n\r\n/**\r\n * TerminalBlock representing the end of an Else block\r\n * See block-command.ts for specific documentation \r\n * on properties and methods\r\n */\r\nexport class EndElse implements TerminalBlock {\r\n\r\n  static label: string = 'End Else'\r\n  static id: string = btoa(EndElse.name);\r\n  terminate: number = null;\r\n  indentationLevel: number;\r\n\r\n  getId(): string {\r\n    return EndElse.id;\r\n  }\r\n\r\n  getLabel(): string {\r\n    return EndElse.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return '}';\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {BlockCodeComponent} from './components/block-code/block-code.component';\r\nimport { SigninPageComponent } from './components/signin-page/signin-page.component';\r\nimport { ProfilepagesComponent } from './components/profilepages/profilepages.component';\r\nimport {DocsComponent} from './components/docs/docs.component';\r\nimport { LevelselectComponent } from './components/levelselect/levelselect.component';\r\nimport { LevelplayComponent } from './components/levelplay/levelplay.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport {LevelComponent} from './components/level/level.component';\r\nimport {JavascriptGuideComponent} from './components/javascript-guide/javascript-guide.component';\r\nimport {CodeEditorGuideComponent} from './components/code-editor-guide/code-editor-guide.component';\r\n\r\nconst routes: Routes = [\r\n  {path: 'signin', component: SigninPageComponent},\r\n  {path: 'profile', component: ProfilepagesComponent},\r\n  {path: 'code', component: BlockCodeComponent},\r\n  {path: 'levelSelect', component:LevelselectComponent},\r\n  {path: 'tutorials', component:LevelselectComponent},\r\n  {path: 'play', component: LevelplayComponent},\r\n  {path: 'docs', component: DocsComponent},\r\n  {path: 'level', component: LevelComponent},\r\n  {path: '', component: HomeComponent},\r\n  {path: 'learn-js', component: JavascriptGuideComponent},\r\n  {path: 'using-the-code-editor', component: CodeEditorGuideComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy', anchorScrolling: 'enabled' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Predicate } from '../../block-command';\r\n\r\n/**\r\n * Predicate representing a true condition\r\n * the condition will always be true\r\n * See block-command.ts for specific documentation\r\n * on properties and methods\r\n */\r\nexport class TruePredicate implements Predicate {\r\n\r\n  static id: string = btoa(TruePredicate.name);\r\n  static label: string = 'true';\r\n  static asCode = 'true';\r\n  indentationLevel: number;\r\n  negate: boolean = false;\r\n  conjunction: string = '';\r\n\r\n  evaluation(grid, unit): boolean {\r\n    return true;\r\n  }\r\n\r\n  getId() {\r\n    return TruePredicate.id;\r\n  }\r\n\r\n  getLabel() {\r\n    return TruePredicate.label;\r\n  }\r\n\r\n  getAsCode(): string {\r\n    return TruePredicate.asCode;\r\n  }\r\n\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ProgramData } from 'src/app/models/database/DatabaseData';\r\nimport { FirestoreDatabaseService } from 'src/app/services/database/firestore-database.service';\r\n\r\n@Component({\r\n  selector: 'app-prog-select-dialog',\r\n  templateUrl: './prog-select-dialog.component.html',\r\n  styleUrls: ['./prog-select-dialog.component.css']\r\n})\r\nexport class ProgSelectDialogComponent {\r\n\r\n  constructor(public dialogRef: MatDialogRef<ProgSelectDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: {id: string, prog:ProgramData}[]) { }\r\n\r\n  onSelect(id: string) {\r\n    this.dialogRef.close(id);\r\n  }\r\n\r\n}\r\n","<div id=\"background\">\r\n    <h1 mat-dialog-title>Choose your program</h1>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <button class=\"option\" mat-button *ngFor=\"let d of data\" (click)=\"onSelect(d.id)\">{{d.prog.Name}}</button>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n        <button mat-button (click)=\"onSelect(undefined)\">Cancel</button>\r\n    </mat-dialog-actions>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport {ViewportScroller} from '@angular/common';\r\nimport {AuthyLoginService} from '../../services/login/authy-login.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-javascript-guid',\r\n  templateUrl: './javascript-guide.component.html',\r\n  styleUrls: ['../docs/docs.component.css']\r\n})\r\nexport class JavascriptGuideComponent implements OnInit {\r\n\r\n  constructor(private viewPortScroller: ViewportScroller,\r\n              private auth: AuthyLoginService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if(!this.auth.checkSigninStatus()){\r\n      this.router.navigate(['']);\r\n    }\r\n  }\r\n\r\n  scrollToSection(sectionName){\r\n\r\n    this.viewPortScroller.scrollToAnchor(sectionName);\r\n\r\n  }\r\n\r\n}\r\n","<header id=\"main-header\">\r\n  <h1 id=\"title\">Everything Javascript</h1>\r\n</header>\r\n\r\n<div id=\"main-content\">\r\n  <div id=\"book-marks\">\r\n    <a><h3 (click)=\"scrollToSection('variables-in-javascript')\">Variables</h3></a>\r\n    <a><h3 (click)=\"scrollToSection('conditional-statements')\">Conditional Statements</h3></a>\r\n    <a><h3 (click)=\"scrollToSection('arrays')\">Arrays</h3></a>\r\n    <a><h3 (click)=\"scrollToSection('for-loops')\">For Loops</h3></a>\r\n    <a><h3 (click)=\"scrollToSection('functions')\">Functions</h3></a>\r\n    <a><h3 (click)=\"scrollToSection('objects')\">Objects</h3></a>\r\n    <a><h3 (click)=\"scrollToSection('bonus-tips-to-maintain-your-code')\">Bonus Tips</h3></a>\r\n  </div>\r\n  <div id=\"docs-content\">\r\n<h1 id=\"all-you-need-to-know-about-javascript\">Introduction</h1>\r\n<p>To get started coding your Scripting Siege units in Javascript, you of course need to the basics of the language first! This guide will try to cover the bare basics you&#39;ll need to know to write meaningful code to control your units. Keep in mind however that there is a lot to know about Javascript to fit into this guide. We’ve tried our best to give a deep overview of Javascript in a way that’s concise yet understandable. However, if you feel that this guide may be too fast for you, feel free to look for resources to learn at your own pace. There are many good free guides online particularly on Youtube. You could also use them to supplement what you’ve learned from reading this. We highly recommend you do so since there may be some stuff we missed here that could be useful to you. In particular, we recommend this full and free <a class=\"link\" href=\"https://youtu.be/PkZNo7MFNFg\">Javascript course</a> by <em>freecodecamp</em>.</p>\r\n<h1 id=\"getting-started\">Getting Started</h1>\r\n<p>One of the beautiful things about Javascript is that it is a very easy language to set up. As long as you have a browser on your computer, you can write and run Javascript code. Open up your browser and right-click any page. Then click inspect element which should open up a console somewhere (this can vary depending on your browser). In that console, you can start writing random Javascript code and instantly see what it does. The reason this exists is because Javascript is the language of the web. Practically all websites or web applications use Javascript in one way or another. For this reason, you’ll typically see Javascript partnered with HTML and CSS (two languages specialized in designing web pages). Yet, Javascript isn’t just limited to the web, it has evolved for you to use it just about anywhere. This is part of the reason it is now one of the most popular languages among developers. Anyways, if you want to get started writing and playing around with Javascript, we recommend using an IDE (integrated development environment). This is basically a fancy text editor to help you code. One of the more popular IDEs for Javascript developers is <a class=\"link\" href=\"https://code.visualstudio.com/\">vscode</a> which is completely free and provides useful tools for you to code more efficiently. Although you can also use an online IDE like the one provided by <a class=\"link\" href=\"https://code.sololearn.com/web/\">Sololearn</a>. Sololearn has a <a class=\"link\" href=\"https://www.sololearn.com/learning/1024\">free Javascript course</a> you can use to help you better understand the concepts here or learn even further. Anyways, now that you some background knowledge of Javascript, let’s start learning.</p>\r\n<h1 id=\"variables-in-javascript\">Variables in Javascript</h1>\r\n<p>You can use variables in Javascript to store information with the desired name for it. The basic syntax for declaring a variable is like so:</p>\r\n<pre><code class=\"lang-Javascript\"><span class=\"hljs-attribute\">let number</span> = 19;\r\n</code></pre>\r\n<blockquote>\r\n  <p>Note that we end the statement with a semicolon. It is a good convention but not required. However, other programming languages will require this.</p>\r\n</blockquote>\r\n<p>Just like in math class, you&#39;ll define variables using a <em>let</em> statement. After you define the variable you can use it without that <em>let</em> word before it. Keep in mind that you cannot have a variable name with spaces, numbers, or some special characters. Also, note that in Javascript <em>=</em> does not mean equality but instead it is used to assign or reassign a value to a variable. For example, we can do this:</p>\r\n<pre><code class=\"lang-Javascript\"><span class=\"hljs-attribute\">number</span> = <span class=\"hljs-number\">20</span><span class=\"hljs-comment\">;</span>\r\n</code></pre>\r\n<p>To give that number variable a new value of 20. Variables can hold anything from booleans (<code>true</code> or <code>false</code>), text (commonly known as strings), numbers, or even objects (we will discuss what those are later). Now if you wanted to increase the value stored in number by 1 you would do something like this:</p>\r\n<pre><code class=\"lang-Javascript\"><span class=\"hljs-built_in\">number</span> = <span class=\"hljs-built_in\">number</span> + <span class=\"hljs-number\">1</span>;\r\n</code></pre>\r\n<p>Remember that <em>=</em> does not mean equality but instead we use it to give a variable a new value. So what we are doing here is setting the value of <code>number</code> to whatever value is in number plus 1. Javascript gives us a useful shortcut to increase a number variable by 1:</p>\r\n<pre><code class=\"lang-Javascript\"><span class=\"hljs-built_in\">number</span>++;\r\n</code></pre>\r\n<p>You can also use a similar statement to decrease the value of <code>number</code> by 1:</p>\r\n<pre><code class=\"lang-Javascript\"><span class=\"hljs-built_in\">number</span><span class=\"hljs-comment\">--;</span>\r\n</code></pre>\r\n<p>Although, there is also another shortcut if you want to increase or decrease the value of a variable by a value not equal to 1:</p>\r\n<pre><code class=\"lang-javascript\"><span class=\"hljs-built_in\">number</span> += <span class=\"hljs-number\">12</span><span class=\"hljs-comment\">;</span>\r\n<span class=\"hljs-built_in\">Number</span> -= <span class=\"hljs-number\">12</span><span class=\"hljs-comment\">;</span>\r\n</code></pre>\r\n<h1 id=\"conditional-statements\">Conditional Statements</h1>\r\n<p>Remember how we mentioned that we can store true or false values in variables? We can use true or false values to create what are called <em>if statements</em>. An <em>if statement</em> is pretty much some code that tells Javascript <em>if this is true, then do this</em>. An if statement can optionally have an else statement following it to give instructions if whatever you were checking is false. As an example, we can do the following:</p>\r\n<pre><code class=\"lang-Javascript\"><span class=\"hljs-keyword\">let</span> isRainingOutside = <span class=\"hljs-literal\">true</span>;\r\n<span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-string\">''</span>;\r\n<span class=\"hljs-keyword\">if</span>(isRainingOutside){{'{'}}\r\n  result = <span class=\"hljs-string\">'Bring an umbrella!'</span>;\r\n{{'}'}}<span class=\"hljs-keyword\">else</span>{{'{'}}\r\n  result = <span class=\"hljs-string\">'What a nice day!'</span>;\r\n{{'}'}}\r\n</code></pre>\r\n<blockquote>\r\n  <p>Notice that we gave the result variable a value that is some text in quotation marks. This is how you set a variable to have a string (text) value.</p>\r\n</blockquote>\r\n<p>So what we are doing here is setting <code>isRainingOutside</code> to true. Then we tell Javascript, if <code>isRainingOutside</code> is true, then set <code>result</code> to the value <code>&#39;Bring an umbrella!&#39;</code> otherwise, we set it to <code>&#39;What a nice day!&#39;</code>. This isn&#39;t too useful because we know the value of <code>isRainingOutside</code> ahead of time. Yet when you read game data from Scripting Siege this won&#39;t be the case. Also, Javascript has what is called <code>conditional operators</code> which are used to test certain conditions about data. For example, we can do something like this:</p>\r\n<pre><code class=\"lang-Javascript\"><span class=\"hljs-keyword\">let</span> age = <span class=\"hljs-number\">19</span>;\r\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-literal\">result</span> = '';\r\n<span class=\"hljs-keyword\">if</span>(age &gt;= <span class=\"hljs-number\">19</span>){{'{'}}\r\n  <span class=\"hljs-literal\">result</span> = <span class=\"hljs-string\">\"Here's some alcohol.\"</span>;\r\n{{'}'}}<span class=\"hljs-keyword\">else</span>{{'{'}}\r\n  <span class=\"hljs-literal\">result</span> = <span class=\"hljs-string\">\"Hey that's illegal you can't drink!\"</span>;\r\n{{'}'}}\r\n</code></pre>\r\n<blockquote>\r\n  <p>Notice in the string values we have single quotes inside. If you intend to use text that contains single quotes, you need to wrap it in double-quotes. This way, you don&#39;t confuse Javascript into thinking you are trying to make another string.</p>\r\n</blockquote>\r\n<p>Here, we say that if age is greater than or equal to 19 then we give the person some alcohol, otherwise we don&#39;t. But let&#39;s say the person may or may not like alcohol to begin with, we can&#39;t just give them alcohol if they don&#39;t want it. We can solve this issue like so:</p>\r\n<pre><code class=\"lang-Javascript\"><span class=\"hljs-keyword\">let</span> age = <span class=\"hljs-number\">19</span>;\r\n<span class=\"hljs-keyword\">let</span> likesAlcohol = <span class=\"hljs-literal\">false</span>;\r\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-literal\">result</span> = '';\r\n<span class=\"hljs-keyword\">if</span>(age &gt;= <span class=\"hljs-number\">19</span> &amp;&amp; likesAlcohol){{'{'}}\r\n  <span class=\"hljs-literal\">result</span> = <span class=\"hljs-string\">\"Here's some alcohol.\"</span>;\r\n{{'}'}}<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(age &gt;= <span class=\"hljs-number\">19</span> &amp;&amp; !likesAlcohol){{'{'}}\r\n  <span class=\"hljs-literal\">result</span> = <span class=\"hljs-string\">\"Oh you don't like alcohol my bad.\"</span>;\r\n{{'}'}}<span class=\"hljs-keyword\">else</span>{{'{'}}\r\n  <span class=\"hljs-literal\">result</span> = <span class=\"hljs-string\">\"Hey that's illegal you can't drink!\"</span>;\r\n{{'}'}}\r\n</code></pre>\r\n<p>This is a little more involved, but we&#39;ll go through it step by step. We first check if their age is greater than or equal to 19, and (&amp;&amp; means and) the <code>likesAlcohol</code> variable is true. If this is the case then we set <code>result</code> to <code>&quot;Here&#39;s some alcohol.&quot;</code>. If this is false, we then check if they&#39;re 19 and don&#39;t like alcohol (! means not). In which case we set <code>result</code> to <code>&quot;Oh you don&#39;t like alcohol my bad.&quot;</code> . Otherwise, if that&#39;s not true then their age must be less than 19, meaning they are not legal drinking age (at least where we are sorry Americans). If this is true then we set <code>result</code> to <code>&quot;Hey that&#39;s illegal you can&#39;t drink!&quot;</code>. You may be wondering what that <code>else if</code> part does. What it does is if the first condition in the <code>if</code> statement is not met, then it checks the condition in the <code>else if</code>. Otherwise, if neither is true then we do whatever is in the <code>else</code> statement. If the first condition is met, then Javascript doesn&#39;t even check the <code>else if</code> condition. In this example, we only used 1 <code>else if</code> statement but you can use as much as you need. Small note, notice how in Javascript <em>&amp;&amp;</em> means and, if you wanted to say <em>or</em> you would you use <em>||</em>. Also, if you want to compare if two things are equal, you would use this operator <code>===</code>.</p>\r\n<h1 id=\"arrays\">Arrays</h1>\r\n<p>An array in Javascript is simply a list of any values you want. They take this basic syntax:</p>\r\n<pre><code class=\"lang-Javascript\">let nums = [<span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1</span>];\r\n</code></pre>\r\n<p>Javascript numbers each item in the array in order from 0 to the number of items - 1. So in this example, we have 5 items where item 0 is 9, item 1 is 12, item 2 is 3, item 3 is 4, and item 4 is 1. The number associated with the item is known as its index. Using the index we could access individual items using this syntax:</p>\r\n<pre><code class=\"lang-Javascript\"><span class=\"hljs-attribute\">let number</span> = nums[1];\r\n</code></pre>\r\n<p>In this case, we will be getting item 1 which has a value of 12. It&#39;s also important to understand that an array can also contain a bunch of inner arrays (usually called a 2D array). In Scripting Siege, you will see that we will use these 2D arrays to represent data about the in-game, grid. More precisely, you will encounter an array containing a bunch of inner arrays representing columns in the grid. In each of these inner arrays is data representing all the units on that column. For now, let us give you a simpler example of a 2D array:</p>\r\n<pre><code class=\"lang-Javascript\">let grid = [\r\n  [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>],\r\n  [<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">8</span>],\r\n  [<span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">12</span>],\r\n  [<span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">14</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">16</span>]\r\n];\r\n\r\nlet item = grid[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>];\r\n</code></pre>\r\n<blockquote>\r\n  <p>Note that the way we formatted the 2D array is just for readability, we could have defined it on one line but doing it this way is easier to read</p>\r\n</blockquote>\r\n<p>It may look a little funky seeing two consecutive square brackets with indexes in them, yet it is much simpler than it looks. Remember a 2D array is just an array with a bunch of inner arrays. So when we say <code>grid[0]</code>, we are getting the inner list at index 0. Then when we add <code>[1]</code> to the end of that, we are getting the element at index 1 of that inner array. Or in other words, <code>grid[0]</code> is itself an array, so we can retrieve items from particular indexes like so: <code>grid[0][1]</code>. So here we are getting the 2nd item of the 1st array within the grid array. This item would have the value 2.</p>\r\n<h1 id=\"for-loops\">For loops</h1>\r\n<p>Next, let&#39;s have a look at what a <em>for loop</em> is. A for loop is just a way to tell Javascript to repeat some code a certain amount of times. It follows the following syntax:</p>\r\n<pre><code class=\"lang-Javascript\"><span class=\"hljs-built_in\">let</span> <span class=\"hljs-built_in\">num</span> = <span class=\"hljs-number\">0</span>;\r\n<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">10</span>; i++){{'{'}}\r\n  <span class=\"hljs-built_in\">num</span> = i;\r\n{{'}'}}\r\n</code></pre>\r\n<p>This might look like a bit much but once you start to break it down it&#39;s pretty straightforward. In the brackets after the <em>for</em> word, we declare a variable called <code>i</code> with a value of 0. Then we give a conditional statement, <code>i &lt; 10</code> meaning as long as i is less than 10 keep repeating what is in the curly braces (these: {{'{'}} ). Then after that, we say <code>i++</code> meaning we want to increase the<code>i</code>variable by 1 after each time we run code in the curly braces. So in this example, the code in the curly braces will run 10 times, since <code>i</code> will go from 0 to 9. Notice we can also use the value of <code>i</code> within the curly braces. You&#39;ll find that using the value of <code>i</code> could be pretty useful once you start coding more. For example, you could use it to look through the items in an array:</p>\r\n<pre><code class=\"lang-Javascript\">let sum = <span class=\"hljs-number\">0</span>;\r\nlet nums = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>];\r\nfor(let i = <span class=\"hljs-number\">0</span>; i &lt; nums.length; i++){{'{'}}\r\n  sum += nums[i];\r\n{{'}'}}\r\n  </code></pre>\r\n  <p>In this for loop, the i variable goes from 0 to the number of items in <code>nums</code> minus 1. This is because the loop&#39;s condition <em>i &lt; nums.length</em> will no longer be true when i is equal to the number of items in nums (<code>nums.length</code>), so the loop will not run at that point. This is exactly what we want because the indexes in <code>nums</code> range from 0 to the number of items in <code>nums</code> minus 1. Javascript also gives us an alternate way to look through all the items in an array:</p>\r\n<pre><code class=\"lang-Javascript\"><span class=\"hljs-built_in\">let</span> <span class=\"hljs-built_in\">sum</span> = <span class=\"hljs-number\">0</span>;\r\n<span class=\"hljs-built_in\">let</span> nums = [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">5</span>];\r\n<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">let</span> <span class=\"hljs-built_in\">num</span> of nums){{'{'}}\r\n  <span class=\"hljs-built_in\">sum</span> += <span class=\"hljs-built_in\">num</span>;\r\n{{'}'}}\r\n  </code></pre>\r\n  <p>This time, in the brackets after the <em>for</em> word it says <code>let num of nums</code>. What this means is that we execute the code (<code>sum += num</code>) once for each number in <code>nums</code>. Each time we execute the code, the value of num is a unique item in the <code>nums</code> array, going in order. In other words, the first time it executes the code <code>num</code> is 3, then the next time we execute the code <code>num</code> is 1, then <code>num</code> is 9, then <code>num</code> is 2, then finally in the last time the loop executes <code>num</code> is 5.</p>\r\n  <h1 id=\"functions\">Functions</h1>\r\n  <p>In programming, a function is a collection of related code that you can reuse whenever you want. Like functions in math class, they can take input and give back output, although you don&#39;t necessarily need to give an output if you don&#39;t need to. To create a function, you would do something like this:</p>\r\n<pre><code class=\"lang-Javascript\">function <span class=\"hljs-built_in\">sum</span>(nums){{'{'}}\r\n  <span class=\"hljs-built_in\">let</span> <span class=\"hljs-built_in\">sum</span> = <span class=\"hljs-number\">0</span>;\r\n  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">let</span> <span class=\"hljs-built_in\">num</span> of nums){{'{'}}\r\n\r\n    <span class=\"hljs-built_in\">sum</span> += <span class=\"hljs-built_in\">num</span>;\r\n\r\n  {{'}'}}\r\n  <span class=\"hljs-built_in\">return</span> <span class=\"hljs-built_in\">sum</span>;\r\n{{'}'}}\r\n  </code></pre>\r\n  <p>Here, our function accepts an input called <code>nums</code> which we assume is an array of numbers. If it&#39;s not an array an error will probably occur, in which case it won&#39;t run. Also, if the array contains items that aren&#39;t numbers then you will probably get unexpected behavior. Thus, it is important to make sure you give this function the right input whenever you use it. Going to the contents of the function, we add all the numbers in the array to get the sum. You will notice at the end, we have this line of code: <code>return sum</code>. This is saying that the output of our function will be the sum. When we want to use this function, we would do something like this:</p>\r\n<pre><code class=\"lang-Javascript\">let mySum = sum([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>]);\r\n</code></pre>\r\n<p>Here, we use the <code>sum</code> function with an array of numbers as an input. Then we store the output of the function in a variable called <code>mySum</code>.</p>\r\n<h1 id=\"objects\">Objects</h1>\r\n<p>Next, let&#39;s discuss objects in Javascript. An object is just a collection of related variables and functions that you store as a single variable. They are typically used to model a real-world thing. For example, we can create an object to represent a dog:</p>\r\n<pre><code class=\"lang-Javascript\"><span class=\"hljs-attribute\">let myDoggo</span> = {{'{'}}\r\n  name: <span class=\"hljs-string\">'Steve'</span>,\r\n  ownerName: <span class=\"hljs-string\">'Bobbert'</span>,\r\n  collarColor: <span class=\"hljs-string\">'red'</span>,\r\n  age: 5\r\n{{'}'}};\r\n</code></pre>\r\n<p>Here, we create an object representing a dog and store it as a variable called <code>myDoggo</code>. If we want to access variables in the <code>myDoggo</code> object we would do something like this:</p>\r\n<pre><code class=\"lang-Javascript\"><span class=\"hljs-attribute\">let name</span> = myDoggo.name;\r\n<span class=\"hljs-attribute\">let owner</span> = myDoggo.ownerName;\r\n<span class=\"hljs-attribute\">let collarColor</span> = myDoggo.collarColor;\r\n<span class=\"hljs-attribute\">let age</span> = myDoggo.age;\r\n</code></pre>\r\n<p>An object can even contain functions in them if you need them to. For example, if you had a <em>bark</em> function in that dog object, you would use it like so:</p>\r\n<pre><code class=\"lang-Javascript\">myDoggo.bark()<span class=\"hljs-comment\">;</span>\r\n</code></pre>\r\n<h1 id=\"bonus-tips-to-maintain-your-code\">Bonus Tips to Maintain Your Code</h1>\r\n<p>The more you code, the more you&#39;ll realize that things can get pretty wild as you start coding more complex stuff. For example, you&#39;ll come to realize you&#39;ll very rarely do things right the first time. As well, sometimes it could be easy to forget exactly how some of the code you wrote works. Here, we&#39;ll show you some small tips to help you out with both of these issues. To help remember how your code works, programming languages including Javascript have a feature called comments. These are little notes you can write in your code for personal use:</p>\r\n<pre><code class=\"lang-Javascript\">// <span class=\"hljs-type\">This</span> <span class=\"hljs-keyword\">is</span> a single-line comment. <span class=\"hljs-type\">The</span> code below me declares a variable called number <span class=\"hljs-keyword\">with</span> a value <span class=\"hljs-keyword\">of</span> <span class=\"hljs-number\">42</span>.\r\n<span class=\"hljs-keyword\">let</span> number = <span class=\"hljs-number\">42</span>;\r\n/*\r\n<span class=\"hljs-type\">This</span> <span class=\"hljs-keyword\">is</span> a multi-line comment\r\nI can <span class=\"hljs-keyword\">type</span> random text <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">as</span> many\r\nlines <span class=\"hljs-keyword\">as</span> I see fit\r\n*/\r\n</code></pre>\r\n<p>Anything wrapped between the <code>/*</code> and the <code>*/</code> or following a <code>//</code> will be ignored because Javascript knows those are just personal notes. Although useful, they won&#39;t help you if there is a bug in your code. A small tool that can help you debug your code is the use of print statements. Print statements tell Javascript to print out data to the console in your browser. To do this, you would simply type the following:</p>\r\n<pre><code class=\"lang-Javascript\">let myData = <span class=\"hljs-number\">42</span><span class=\"hljs-comment\">;</span>\r\nconsole.log(myData)<span class=\"hljs-comment\">;</span>\r\n</code></pre>\r\n<p>Note that you can print out practically anything you want this way. So if something goes wrong you can print out the values of certain data to check their state when you run your code. Recall in the beginning we mentioned a Javascript console in your browser. This is where the <code>console.log</code> statements print out the data. Javascript will also print out errors in the console if something goes very wrong that would cause it to stop. Although it can be a little frustrating to see it can give useful hints for you to find what went wrong.</p>\r\n<h1 id=\"conclusion\">Conclusion</h1>\r\n<p>In this guide, we went over the fundamental Javascript concepts you need to help you get started coding your units in Scripting Siege. If you understood these concepts you should be ready to start writing your own code that can be used in the game. Just make sure you have a look at the <a class=\"link\" href=\"./Getting%20Started%20With%20Coding%20a%20Scripting%20Siege%20Unit.md\">documentation</a> to see how exactly to get started.</p>\r\n\r\n  </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}